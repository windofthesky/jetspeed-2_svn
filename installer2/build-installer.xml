<?xml version="1.0"?>

<!--

This Ant script is used to package parts of the demo app to create an installer

the selfextract target shows an example of creating a self extracting jar for the demo app

run with ...

ant  -Dmaven.local.repo=XXX   -buildfile build-demo.xml



-->



<project name="Create Jetspeed 2.1 Installer Zip Build" default="selfextract" basedir=".">

	<target name="selfextract" depends="clean,copystuff,buildZipPack">



		<copy todir="./selfextract">

			<fileset dir="installclasspath">

				<include name="resources/*" />

			</fileset>

		</copy>

		<copy todir="./selfextract">

			<fileset dir=".">

				<include name="build.xml" />

				<include name="antinstall-config.xml" />

				<include name="installpack.zip" />

			</fileset>

			<fileset dir="portlet_apps" />

		</copy>

		<copy todir="./selfextract/portlet_apps">

			<fileset dir="portlet_apps" />

		</copy>

		<copy todir="./selfextract/temp">

			<fileset dir="temp" />

		</copy>

		<copy todir="./selfextract/database">

			<fileset dir="database" />

		</copy>

		<echo message="Building Jetspeed 2.1 SELFEXTRACT" />

		<jar file="./${install.name}-install.jar" compress="true">

			<manifest>

				<attribute name="Manifest-Version" value="1.0" />

				<attribute name="Main-Class" value="org.tp23.antinstaller.selfextract.SelfExtractor" />

				<attribute name="Look-And-Feel" value="org.tp23.jgoodies.plaf.plastic.PlasticXPLookAndFeel" />

			</manifest>

			<fileset dir="selfextract">

				<include name="**/*" />

			</fileset>

			<zipgroupfileset dir="installlib" includes="*.jar" />

		</jar>

	</target>



	<target name="copystuff">

		<!-- this target assumes we're located in the top level of jetspeed-2 -->

		<delete dir="Jetspeed_Portal" />

		<delete dir="portlet_apps" />

		<!-- get the base tomcat install -->

		<!-- first download the zip files -->

		<echo> now downloading tomcat installs..  this may take a while </echo>

		<get usetimestamp="true" dest="./tomcat-5.5.20.zip" src="http://www.bluesunrise.com/maven/tomcat/dist/tomcat-5.5.20.zip" />
		<!-- TODO: renable for Java 1.4 support
  <get usetimestamp="true" dest="./tomcat-5.5.20-compat.zip" src="http://www.bluesunrise.com/maven/tomcat/dist/tomcat-5.5.20.zip" />
  -->
		<!-- now unzip them -->

		<echo> done with downloads, now unzipping </echo>

		<unzip src="./tomcat-5.5.20.zip" dest="./tomcat-5.5.20" />
		<!--
  <unzip src="./tomcat-5.5.20-compat.zip" dest="./tomcat-compat-5.5.20" />
 -->
		<copy todir="Jetspeed_Portal">

			<fileset dir="tomcat-5.5.20">

				<include name="**/*" />

			</fileset>
			<!--
   <fileset dir="tomcat-5.5.20" >

	  <include name="**/*" />	

	</fileset>
-->
		</copy>

		<echo> updating tomcat users </echo>

		<copy file="tomcat-users.xml" tofile="Jetspeed_Portal/conf/tomcat-users.xml" overwrite="true" />

		<echo> replacing startup files with ones with larger heap size </echo>
		<copy file="catalina.sh" tofile="Jetspeed_Portal/bin/catalina.sh" overwrite="true" />
		<copy file="catalina.bat" tofile="Jetspeed_Portal/bin/catalina.bat" overwrite="true" />

		<echo> done with  tomcat users </echo>

		<mkdir dir="temp" />

		<copy todir="temp">

			<fileset dir="../etc/conf/tomcat/">

				<filename name="**/jetspeed-tomcat-5.5.xml" />

			</fileset>

		</copy>

		<mkdir dir="Jetspeed_Portal/webapps/jetspeed/WEB-INF/deploy" />

		<mkdir dir="Jetspeed_Portal/temp" />

		<mkdir dir="Jetspeed_Portal/temp_install" />

		<mkdir dir="Jetspeed_Portal/shared/classes" />

		<mkdir dir="Jetspeed_Portal/shared/lib" />

		<touch file="Jetspeed_Portal/logs/catalina.out" />




		<!-- setup the shared/lib dir with stuff -->

		<copy todir="Jetspeed_Portal/shared/lib">

			<fileset dir="${maven.repo.local}/org.apache.pluto/jars/">

				<include name="pluto-${pluto.version}.jar" />

			</fileset>

			<fileset dir="${maven.repo.local}/${bridges.groupId}/jars/">
				<include name="portals-bridges-common-${portals.bridges.common.version}.jar" />

			</fileset>

			<fileset dir="${maven.repo.local}/org.apache.derby/jars/">

				<include name="derby-${derby.version}.jar" />

			</fileset>

			<fileset dir="${maven.repo.local}/${org.apache.jetspeed.portal.groupId}/jars/">

				<include name="jetspeed-commons-${jetspeed.version}.jar" />

				<include name="jetspeed-api-${jetspeed.version}.jar" />

			</fileset>

			<fileset dir="${maven.repo.local}/portlet-api/jars/">

				<include name="portlet-api-${portlet.api.version}.jar" />

			</fileset>

		</copy>


		<copy todir="Jetspeed_Portal/temp_install">
			<fileset dir="${maven.repo.local}/tyrex/jars/">

				<include name="tyrex-1.0.1.jar" />

			</fileset>
			<fileset dir="${maven.repo.local}/${org.apache.jetspeed.portal.groupId}/jars/">

				<include name="ant-tasks-${jetspeed.version}.jar" />

			</fileset>
		</copy>


		<!-- get the jetspeed war -->

		<echo> now copying jetspeed war </echo>

		<copy todir="Jetspeed_Portal/webapps/">

			<fileset dir="../target">

				<include name="**/jetspeed.war" />

			</fileset>

		</copy>


		<echo> now copying the admin war </echo>

		<copy todir="portlet_apps">

			<fileset dir="../applications/j2-admin/target">

				<filename name="*.war" />

			</fileset>
		</copy>


		<echo>  - portlet_apps </echo>

		<copy todir="portlet_apps">

			<fileset dir="../layout-portlets/target">

				<include name="*.war" />

			</fileset>

		</copy>

		<!-- get the database scripts -->

		<echo>  - database scripts </echo>


		<copy todir="database">

			<fileset dir="../target/portal-sql">

				<include name="**/*.sql" />
				<include name="**/*.xml" />
			</fileset>

		</copy>

		<antcall target="copyDemos" />

	</target>

	<target name="copyDemos" unless="install.minOnly">

		<echo> now copying other wars </echo>

		<!-- get all the OTHER wars -->

		<echo>  - applications </echo>

		<copy todir="portlet_apps">

			<!-- these are the basic installs from jetspeed -->

			<fileset dir="../applications/demo/target">

				<filename name="*.war" />

			</fileset>


			<fileset dir="../applications/rss/target">

				<filename name="*.war" />

			</fileset>

			<!-- these are the "fancy" installs from bridges -->

		</copy>

		<echo>  - jsf-demo  groupid = ${bridges.groupId}, jsf-version=${portals.bridges.jsf.version} </echo>


		<copy tofile="portlet_apps/jsf-demo.war">

			<fileset dir="${maven.repo.local}/${bridges.groupId}/wars/">
				<!--                  <filename name="jsf-demo-${portals.bridges.jsf.version}.war" /> -->
				<filename name="jsf-demo-1.0.war" />

			</fileset>

		</copy>
		<echo>  - jsf-demo  groupid = ${bridges.groupId}, jpetstore-version=${portals.bridges.jpetstore.version} </echo>

		<copy tofile="portlet_apps/jpetstore.war">

			<fileset dir="${maven.repo.local}/${bridges.groupId}/wars/">
				<!--                  <filename name="jpetstore-${portals.bridges.jpetstore.version}.war" /> -->
				<filename name="jpetstore-1.0.war" />
			</fileset>



		</copy>
	</target>


	<!-- N.B.

this target does nothing in the deployed version

and exists for preparing the files to deploy to sourceforge

-->

	<target name="buildZipPack" depends="copystuff">

		<zip file="./installpack.zip">

			<zipfileset dir="./Jetspeed_Portal">

				<!--

				<include name="bin/**/*"/>

				<include name="classes/**/*"/>

				<include name="config/**/*"/>

				<include name="doc/**/*"/>

				<include name="src/**/*"/>

				<include name="README.txt"/>

				<include name="DEMO-README.txt"/>

				<exclude name="**/CVS/*"/>

                          -->

			</zipfileset>

		</zip>

	</target>

	<target name="cleanDLs">
		<delete file="./tomcat-5.5.20.zip" failonerror="false" />
		<delete file="./tomcat-5.5.20-compat.zip" failonerror="false" />
	</target>
	<target name="clean">

		<delete dir="Jetspeed_Portal" failonerror="false" />

		<delete dir="temp" failonerror="false" />

		<delete file="installpack.zip" failonerror="false" />

		<delete file="Jetspeed2.1-install.jar" failonerror="false" />

		<delete file="Jetspeed2.1-Full-install.jar" failonerror="false" />

		<delete file="Jetspeed2.1-Min-install.jar" failonerror="false" />

		<delete dir="tomcat" failonerror="false" />

		<delete dir="tomcat-compat" failonerror="false" />

		<delete dir="selfextract" failonerror="false" />

		<delete dir="database" failonerror="false" />

		<delete dir="portlet_apps" failonerror="false" />

	</target>

</project>

