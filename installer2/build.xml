<project name="JetspeedInstaller" default="install" basedir="${basedir}"> 
	
    <property name="jetspeedDir" value="${installDir}/webapps/jetspeed" />
    <property name="portletAppsDir" value="${installDir}/portlet_apps"/> 
    <property name="dbName" value="derby"/> 
    <property name="dbUser" value=""/> 
    <property name="dbPassword" value=""/> 
    <property name="jdbcUrl" value="jdbc:derby:${installDir}/webapps/jetspeed/WEB-INF/productiondb;create=true"/> 
    <property name="jdbcDriverClass" value="org.apache.derby.jdbc.EmbeddedDriver"/> 
	
	
    <target name="install" >
	<echo>basic install starting</echo>
        <mkdir dir="${basedir}/temp"/>
        <unzip src="installpack.zip" dest="${basedir}/temp"/>

    	
    	<condition property="fork.db" value="true">
    		<equals arg1="${dbName}" arg2="derby"/> 
    	</condition>
	
   	<property name="DATAFILE" value="${basedir}/database/j2-seed.xml"/>		
    	
    <echo>install unpack done</echo>
        
	<echo> moving stuff from the temp dir </echo>
	<echo>now configuring</echo>
        <copy todir="${installDir}" overwrite="true">
            <fileset dir="${basedir}/temp">
                <exclude name="**/jetspeed.xml"/>
            </fileset>
        </copy>

	<echo>unpacking jetspeed war</echo>	
        <unwar src="${installDir}/webapps/jetspeed.war" dest="${installDir}/webapps/jetspeed" />
        <copy file="temp/jetspeed-tomcat-5.5.xml"
          tofile="${installDir}/conf/Catalina/localhost/jetspeed.xml" overwrite="true">
          <filterset begintoken="@" endtoken="@">
            <filter token="CONTEXT" value="jetspeed"/>
            <filter token="USERNAME" value="${dbUser}"/>
            <filter token="PASSWORD" value="${dbPassword}"/>
            <filter token="DRIVER" value="${jdbcDriverClass}"/>
            <filter token="URL" value="${jdbcUrl}"/>
          </filterset>
        </copy>
	
	<echo>copying database driver jar</echo>
	<!-- place db jar in shared.. we assume the Catalina will not need to talk to this -->
    	<copy failonerror="false" file="${jdbcDriverJar}" todir="${installDir}/shared/lib" overwrite="true" />
	<echo>fixing permissions</echo>
	<chmod perm="700" dir="${installDir}/bin" includes="**/*.sh"/>
	<echo>basic install finished</echo>
    </target>    

	   <target name="MinInstall">
	  		
	   		<property name="DATAFILE" value="${basedir}/database/min/j2-seed.xml"/>		
			<echo>resetting DATAFILE for seed data to ${DATAFILE}</echo>
	 	   	
		</target>
	
	   <target name="generateStandardDb" unless="fork.db">
	   	<echo>cleaning up possible exiting Db</echo>
  	   	  <sql driver="${jdbcDriverClass}" url="${jdbcUrl}" userid="${dbUser}"
	   		  password="${dbPassword}"
	   		  src="${basedir}/database/drop.sql"
	   		  autocommit="true"
	   		  onerror="continue"
	   		  print="yes" output="outputfile.txt">
	   		  <classpath>
	   			  <pathelement location="${jdbcDriverJar}"/>
	   		  </classpath>
	   	  </sql>
	   	<echo>starting Db generation</echo>
	        <sql driver="${jdbcDriverClass}" url="${jdbcUrl}" userid="${dbUser}"
	            password="${dbPassword}"
	            src="${basedir}/database/${dbName}/schema/phase1-schema.sql"
	            print="yes" output="outputfile.txt">
	            <classpath>
	                <pathelement location="${jdbcDriverJar}"/>
	            </classpath>
	        </sql>
	        <sql driver="${jdbcDriverClass}" url="${jdbcUrl}" userid="${dbUser}"
	            password="${dbPassword}"
	            src="${basedir}/database/${dbName}/schema/phase2-schema.sql"
	            print="yes" output="outputfile.txt">
	            <classpath>
	                <pathelement location="${jdbcDriverJar}"/>
	            </classpath>
	        </sql>
	        <sql driver="${jdbcDriverClass}" url="${jdbcUrl}" userid="${dbUser}"
	            password="${dbPassword}"
	            src="${basedir}/database/${dbName}/schema/phase3ojb-schema.sql"
	            print="yes" output="outputfile.txt">
	            <classpath>
	                <pathelement location="${jdbcDriverJar}"/>
	            </classpath>
	        </sql>
	        <sql driver="${jdbcDriverClass}" url="${jdbcUrl}" userid="${dbUser}"
	            password="${dbPassword}"
	            src="${basedir}/database/${dbName}/schema/prefs-schema.sql"
	            print="yes" output="outputfile.txt">
	            <classpath>
	                <pathelement location="${jdbcDriverJar}"/>
	            </classpath>
	        </sql>
	        <sql driver="${jdbcDriverClass}" url="${jdbcUrl}" userid="${dbUser}"
	            password="${dbPassword}"
	            src="${basedir}/database/${dbName}/schema/registry-schema.sql"
	            print="yes" output="outputfile.txt">
	            <classpath>
	                <pathelement location="${jdbcDriverJar}"/>
	            </classpath>
	        </sql>
	        <sql driver="${jdbcDriverClass}" url="${jdbcUrl}" userid="${dbUser}"
	            password="${dbPassword}"
	            src="${basedir}/database/${dbName}/schema/security-schema.sql"
	            print="yes" output="outputfile.txt">
	            <classpath>
	                <pathelement location="${jdbcDriverJar}"/>
	            </classpath>
	        </sql>
	        <echo>DB generation done!</echo>
	    </target>
	
	

	
	
   <target name="generateDerby" if="fork.db">
	  <antcall target="createDerbyDB">
    <param name="databaseScript" value="${basedir}/database/${dbName}/schema/phase1-schema.sql"/>
	  </antcall>
	  <antcall target="createDerbyDB">
    <param name="databaseScript" value="${basedir}/database/${dbName}/schema/phase2-schema.sql"/>
	  </antcall>
	  <antcall target="createDerbyDB">
    <param name="databaseScript" value="${basedir}/database/${dbName}/schema/phase3ojb-schema.sql"/>
	  </antcall>
	  <antcall target="createDerbyDB">
    <param name="databaseScript" value="${basedir}/database/${dbName}/schema/prefs-schema.sql"/>
	  </antcall>
	  <antcall target="createDerbyDB">
    <param name="databaseScript" value="${basedir}/database/${dbName}/schema/registry-schema.sql"/>
	  </antcall>
	  <antcall target="createDerbyDB">
    <param name="databaseScript" value="${basedir}/database/${dbName}/schema/security-schema.sql"/>
	  </antcall>

   </target>
	
	
    <target name="generateDb" depends="generateStandardDb, generateDerby" >
    </target>
    
	<target name="layoutPortlets">
		<copy todir="${installDir}/webapps/jetspeed/WEB-INF/deploy" file="${basedir}/portlet_apps/jetspeed-layouts.war" />		   
    </target>
	<target name="demoPortlets">
		<copy todir="${installDir}/webapps/jetspeed/WEB-INF/deploy" file="${basedir}/portlet_apps/demo.war" />		   
    </target>
	<target name="j2admin">
			<copy todir="${installDir}/webapps/jetspeed/WEB-INF/deploy" file="${basedir}/portlet_apps/j2-admin.war" />		   
	</target>
	<target name="jpetstorePortlets">
			<copy todir="${installDir}/webapps/jetspeed/WEB-INF/deploy" file="${basedir}/portlet_apps/jpetstore.war" />		   
	</target>
	<target name="jsfPortlets">
			<copy todir="${installDir}/webapps/jetspeed/WEB-INF/deploy" file="${basedir}/portlet_apps/jsf-demo.war" />		   
	</target>
	<target name="perlPortlets">
	  	   <copy todir="${installDir}/webapps/jetspeed/WEB-INF/deploy" file="${basedir}/portlet_apps/perl.war" />		   
	</target>
    <target name="phpPortlets">
    	<copy todir="${installDir}/webapps/jetspeed/WEB-INF/deploy" file="${basedir}/portlet_apps/php.war" />		   
    </target>
	<target name="rssPortlets">
	  	<copy todir="${installDir}/webapps/jetspeed/WEB-INF/deploy" file="${basedir}/portlet_apps/rss.war" />		   
	</target>

	
	
    <!-- ============== Data-Serializer for seed data============== -->
    <target name='populateDB'>

    <mkdir dir="${basedir}/temp/dbseed"/>

    <property name="assemblyDir" value="${basedir}/temp/dbseed/assembly"/>	
   
    	
	<echo> Data-Serializer based on ${assemblyDir}</echo>

    	<!-- copy assembly files -->
    	<mkdir dir="${assemblyDir}"/>
    	<copy todir="${assemblyDir}" overwrite="true" failonerror="true">
    	      <fileset dir="${installDir}/webapps/jetspeed/WEB-INF/assembly">
    	        <include name="security*.xml"/>
    			<include name="capabilities.xml"/>           
    			<include name="prefs.xml"/>           
    			<include name="profiler.xml"/>      
    			<include name="registry.xml"/>       
    			<include name="transaction.xml"/>       
    			<include name="cache.xml"/>    
    	      </fileset>
    	     </copy>


		<copy todir="${assemblyDir}" overwrite="true" failonerror="true">
	      <fileset dir="${installDir}/webapps/jetspeed/WEB-INF/assembly/alternate/">
	        <include name="request-context.xml"/> 
	      </fileset>
	     </copy>

    	
    	
    	<!-- copy boot files -->

    	
    <mkdir dir="${assemblyDir}/boot"/>

	<copy todir="${assemblyDir}/boot" overwrite="true" failonerror="true">
      <fileset dir="${jetspeedDir}/WEB-INF/assembly/boot">
        <include name="*.xml"/>
      </fileset>
    </copy>

	<echo> running seed with data: ${DATAFILE}  arguments: -b ${assemblyDir}/boot/ -c ${assemblyDir}/  database-url: ${jdbcUrl}</echo>
    	
  	
    <java classname="org.apache.jetspeed.serializer.JetspeedSerializerApplication" fork="yes">
        <classpath>
          <pathelement path="${classpath}"/>
            <fileset dir="${installDir}/shared/lib">
              <include name="**/*.jar"/>
            </fileset>
          <fileset dir="${jetspeedDir}/WEB-INF/lib">
            <include name="**/*.jar"/>
          </fileset>
            <fileset dir="${installDir}/temp_install">
              <include name="**/*.jar"/>
            </fileset>
            <fileset dir="${installDir}/common/lib">
              <include name="**/*.jar"/>
            </fileset>
          <pathelement location="${jdbcDriverJar}"/>
          <pathelement location="${installDir}/shared/classes"/>
          <pathelement location="${jetspeedDir}/WEB-INF/classes"/>
        </classpath>
		
        <arg line="-I &quot;${DATAFILE}&quot; -a ${jetspeedDir} -b file:${assemblyDir}/boot/ -c file:${assemblyDir}/ -dc ${jdbcDriverClass} -ds ${jdbcUrl} -du ${dbUser} -dp ${dbPassword}"/>  
    </java>
   </target>

    <!-- ============== Data-Serializer for seed data============== -->
    <target name='createDerbyDB'>

    	
	<echo> createDerbyDB for ${databaseScript}</echo>
    	
  	
		
	     <java classname="org.apache.jetspeed.anttasks.ExecuteJavaSQL" fork="yes">
	        <classpath>
	          <pathelement path="${classpath}"/>
	            <fileset dir="${installDir}/shared/lib">
	              <include name="**/*.jar"/>
	            </fileset>
	          <fileset dir="${jetspeedDir}/WEB-INF/lib">
	            <include name="**/*.jar"/>
	          </fileset>
	            <fileset dir="${installDir}/temp_install">
	              <include name="**/*.jar"/>
	            </fileset>
	            <fileset dir="${installDir}/common/lib">
	              <include name="**/*.jar"/>
	            </fileset>
	          <pathelement location="${jdbcDriverJar}"/>
	          <pathelement location="${installDir}/shared/classes"/>
	          <pathelement location="${jetspeedDir}/WEB-INF/classes"/>
	        </classpath>

	     	
	     	<arg line="driver=${jdbcDriverClass} 
	      url=${jdbcUrl}
	      userid=${dbUser} 
	      password=${dbPassword}
	      src=&quot;${databaseScript}&quot; autocommit=true
	      onerror=abort"/>
	    </java>
	 
	  </target>
	  
    	
</project>
