<?xml version="1.0" ?>
<!--
    Copyright 2004 The Apache Software Foundation
    
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    
    http://www.apache.org/licenses/LICENSE-2.0
    
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<document>
    <properties>
        <title>Jetspeed-2 Deploy Tools</title>
        <authors>
            <person name="David Le Strat" email="dlestrat@apache.org" />
        </authors>
    </properties>
    <body>
        <section name="Jetspeed-2 Deployment Overview">
        	<subsection name="Deploying Portlets in Jetspeed-2: An End User View">
        	<p>
        	Deploying custom portlets in Jetspeed-2 is simple.  Portlets are very similar to servlets.
        	They require a deployment descriptor, <code>portlet.xml</code> which goes in <code>WEB-INF</code>
            and need to be packaged in a war-like format. You can find quite a few example <code>portlet.xml</code> files within the Jetspeed-2 source tree.
            For starters take a look at the one under <code>/portal/src/webapp/WEB-INF</code>.  In order to deploy a portlet, Jetspeed-2 requires the user
            to follow those steps:
            <ol>
            <li>Build you portlet as a portlet application just as you would a web application.</li>
            <li>Package your portlet application into a .war file.</li>
            <li>Copy the .war file to Jetspeed's deployment directory, by default this is <code>WEB-INF/deploy</code>.
            Jetspeed will take care of automatically deplying the portlet into the portlet registry and will also deploy the portlet
            as a web application into the app server Jetspeed is deployed to.</li>
            <li>The easiest way to view your portlet is to add an entry to the <code>default-page.psml</code> under <code>jetspeed/WEB-INF/pages</code>.
            The id for the portlet fragment uses a unique combination of <code>${portlet.application.id}::${portlet.name}</code>
            where <code>${portlet.application.id}</code> is the actual name of the war file (minus the ".war") that contains your portlet app and
            <code>${portlet.name}</code> needs to be the value in the portlet name tags, <code>&lt;portlet-name&gt;MyPortlet&lt;/portlet-name&gt;</code>.
            Changes to the psml will be picked up automatically and you should now be able to view your portlet!
            </li>
            </ol>
			</p>        	
        	</subsection>
        	<subsection name="Portlet Deployment: How Does it Work?">
        	<p>
        	The component hierarchy below describes the assembly dependencies supporting Jetspeed-2 deployment functionality.
        	</p>
        	<p>
            <img src="images/deployment-mgr-assembly.gif" border="0"/><br/><br/>
            </p>
        	<p>
        	The <code>DeploymentManager</code> is configured with the properties specified in
        	<code>WEB-INF/conf/jetspeed.properties</code>:
        	<ul>
        	<li><code>autodeployment.staging.dir</code>: The directory scanned for autodeployment.</li>
        	<li><code>autodeployment.delay</code>: The frequency of the deploy directory scanning.</li>
        	</ul>
        	The <code>DeploymentManager</code> is also configured with 2 types of <code>DeploymentEventListener</code>:
        	</p>
        	<p>
            <img src="images/deployment-event-listener-c.gif" border="0"/><br/><br/>
            </p>
            <p>
            <ul>
            <li>The <code>DeployPortletAppEventListener</code> handles the hot deployment of portlet applications.</li>
            <li>The <code>DeployDecoratorEventListener</code>: handles the hot deployment of decorators. See 
            <a href="../../guides/guide-decorators.html">guide to decorators</a> for more information.</li>
            </ul>
            </p>
        	<p>
        	Jetspeed-2 provides a <code>StandardDeploymentManager</code>.  The <code>StandardDeploymentManager</code> leverages
        	a <code>FileSystemScanner</code> to scan for new assets to deploy.  It leverages Jetspeed-2 
        	<a href="deploy-tools.html">deploy tools</a> to prepare portlet applications prior to deployment.
            </p>
            <p>
            <img src="images/deployment-mgr-c.gif" border="0"/><br/><br/>
            </p>
            </subsection>
        </section>
    </body>
</document>

