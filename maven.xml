<project default="java:jar"
         xmlns:j="jelly:core"
         xmlns:maven="jelly:maven">

  <goal name="allClean"
        description="Clean the master project and all subprojects">
    <attainGoal name="subClean"/>
    <attainGoal name="clean"/>
  </goal>

  <goal name="subClean"
        description="Clean all subprojects"
        >
    <maven:reactor
               basedir="${basedir}"
               includes="*/project.xml,applications/*/project.xml"
               excludes="applications/project.xml"
               goals="clean"
               banner="Cleaning"
               ignoreFailures="false"/>
  </goal>

  <goal name="allSite"
        description="Build the site for the master project and all subprojects"
        >
    <maven:reactor
               basedir="${basedir}"
               includes="site/project.xml"
               goals="allSite"
               banner="Building Site"
               postProcessing="false"
               ignoreFailures="false"/>
  </goal>

  <goal name="allBuild"
        description="Build all jars and war">
    <!-- Build jars -->
    <maven:reactor
               basedir="${basedir}"
               includes="portlet-api/project.xml"
               goals="jar:install"
               banner="Build and Install the Portlet API jar"
               postProcessing="false"
               ignoreFailures="false"/>
    <maven:reactor
               basedir="${basedir}"
               includes="mockobjects/project.xml"
               goals="jar:install"
               banner="Build and Install the MockObjects jar"
               postProcessing="false"
               ignoreFailures="false"/>
    <maven:reactor
               basedir="${basedir}"
               includes="cps/project.xml"
               goals="jar:install"
               banner="Build and Install the portlet commons services jar"
               postProcessing="false"
               ignoreFailures="false"/>
    <maven:reactor
               basedir="${basedir}"
               includes="plugin/project.xml"
               goals="jar:install"
               banner="Build and Install the Plugin jar"
               postProcessing="false"
               ignoreFailures="false"/>
    <maven:reactor
               basedir="${basedir}"
               includes="commons/project.xml"
               goals="jar:install"
               banner="Build and Install the common jar"
               postProcessing="false"
               ignoreFailures="false"/>
    <maven:reactor
               basedir="${basedir}"
               includes="container/project.xml"
               goals="jar:install"
               banner="Build and Install the container jar"
               postProcessing="false"
               ignoreFailures="false"/>
    
     <!-- Build war files -->
     <maven:reactor
               basedir="${basedir}"
               includes="portal/project.xml"
               goals="db.test.recreate,db.recreate,war:install"
               banner="Build and Install the Portlet WAR"
               postProcessing="false"
               ignoreFailures="false"/>

     <maven:reactor
               basedir="${basedir}"
               includes="applications/demo/project.xml"
               excludes="applications/project.xml"
               goals="war:install"
               banner="Build and Install the Demo application WAR"
               postProcessing="false"
               ignoreFailures="false"/>
  
  </goal>
  <goal name="catalina:shared"
        description="Copy all jars necessary for common container">
    <copy file="commons/target/jetspeed-commons-2.0-a1-dev.jar" todir="${catalina.shared.lib}"/>
    <copy file="portlet-api/target/portlet-api-0.6.6.jar" todir="${catalina.shared.lib}"/>
  </goal>

  <goal name="catalina:base-shared"
        description="Copy all base jars necessary for common container">
<echo>Copying from ${maven.repo.local} to ${catalina.shared.lib}...</echo>
    <copy file="${maven.repo.local}/pluto-container/jars/pluto-0.46.jar" todir="${catalina.shared.lib}"/>
    <copy file="${maven.repo.local}/commons-lang/jars/commons-lang-1.0.1.jar" todir="${catalina.shared.lib}"/>
    <copy file="${maven.repo.local}/commons-logging/jars/commons-logging-1.0.2.jar" todir="${catalina.shared.lib}"/>
    <copy file="${maven.repo.local}/commons-configuration/jars/commons-configuration-1.0-dev.jar" todir="${catalina.shared.lib}"/>
    <copy file="${maven.repo.local}/log4j/jars/log4j-1.2.6.jar" todir="${catalina.shared.lib}"/>
  </goal>


</project>
