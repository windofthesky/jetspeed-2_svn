<project default="java:jar"
         xmlns:j="jelly:core"
         xmlns:maven="jelly:maven">

  <goal name="allClean"
        description="Clean the master project and all subprojects">
    <attainGoal name="subClean"/>
    <attainGoal name="clean"/>
  </goal>

  <goal name="subClean"
        description="Clean all subprojects"
        >
    <maven:reactor
               basedir="${basedir}"
               includes="*/project.xml,applications/*/project.xml,services/*/project.xml,components/*/project.xml"
               excludes="applications/project.xml,cornerstone-demo/project.xml"
               goals="clean"
               banner="Cleaning"
               ignoreFailures="true"/>
  </goal>

  <goal name="allSite"
        description="Build the site for the master project and all subprojects"
        >
    <maven:reactor
               basedir="${basedir}"
               includes="site/project.xml"
               goals="allSite"
               banner="Building Site"
               postProcessing="false"
               ignoreFailures="false"/>
  </goal>

  <goal name="allBuild"
        description="Build all jars and war">
    <!-- Build jars -->
    <maven:reactor
               basedir="${basedir}/portlet-api"
               includes="project.xml"
               goals="jar:install"
               banner="Build and Install the Portlet API jar"
               postProcessing="false"
               ignoreFailures="false"/>
    <maven:reactor
               basedir="${basedir}/commons"
               includes="project.xml"
               goals="jar:install"
               banner="Build and Install the common jar"
               postProcessing="false"
               ignoreFailures="false"/>
    <maven:reactor
               basedir="${basedir}/components/cm"
               includes="project.xml"
               goals="jar:install"
               banner="Build and Install the Component Manager jar"
               postProcessing="false"
               ignoreFailures="false"/>
    <maven:reactor
               basedir="${basedir}/components/rdbms"
               includes="project.xml"
               goals="jar:install"
               banner="Build and Install the RDBMS jar"
               postProcessing="false"
               ignoreFailures="false"/>
   <maven:reactor
               basedir="${basedir}/components/persistence"
               includes="project.xml"
               goals="jar:install"
               banner="Build and Install the Persistence jar"
               postProcessing="false"
               ignoreFailures="false"/>
    <maven:reactor
               basedir="${basedir}/components/registry"
               includes="project.xml"
               goals="build.registry.server"
               banner="Build and Install the Regsitry Components jar"
               postProcessing="false"
               ignoreFailures="false"/>
    <maven:reactor
               basedir="${basedir}/cps"
               includes="project.xml"
               goals="jar:install"
               banner="Build and Install the portlet commons services jar"
               postProcessing="false"
               ignoreFailures="false"/>
    <maven:reactor
               basedir="${basedir}/plugin"
               includes="project.xml"
               goals="jar:install"
               banner="Build and Install the Plugin jar"
               postProcessing="false"
               ignoreFailures="false"/>        

    <maven:reactor
               basedir="${basedir}"
               includes="services/security/project.xml"
               goals="db.recreate,db.test.recreate.server,jar:install,ojb.registry"
               banner="Build and Install the services - security jar"
               postProcessing="false"
               ignoreFailures="false"/>

     <!-- Build war files -->
     <maven:reactor
               basedir="${basedir}"
               includes="portal/project.xml"
               goals="db.recreate,db.test.recreate.server,war:install"
               banner="Build and Install the Portlet WAR"
               postProcessing="false"
               ignoreFailures="false"/>
        

     <maven:reactor
               basedir="${basedir}/applications/demo"
               includes="applications/demo/project.xml"
               excludes="applications/project.xml"
               goals="war:install"
               banner="Build and Install the Demo application WAR"
               postProcessing="false"
               ignoreFailures="false"/>

     <maven:reactor
               basedir="${basedir}/applications/pam"
               includes="applications/pam/project.xml"
               excludes="applications/project.xml"
               goals="war:install"
               banner="Build and Install the PAM application WAR"
               postProcessing="false"
               ignoreFailures="false"/>
               
          <attainGoal name="copy.shared.deps" />
  </goal>
  
  <goal name="copy.shared.deps"> 
      <maven:reactor
               basedir="${basedir}"
               includes="portal/project.xml"
               goals="catalina:base-shared"
               banner="Deploys misc. jars shared/lib  to Tomcat"
               postProcessing="false"
               ignoreFailures="false"/>

     <maven:reactor
               basedir="${basedir}"
               includes="portal/project.xml"
               goals="catalina:shared"
               banner="Deploys container jars to shared/lib to Tomcat"
               postProcessing="false"
               ignoreFailures="false"/>  
  </goal>
  
  <preGoal name="allBuild">
  	<!-- Make sure that the org.apache.jetspeed.dbutil.HSQLServer
  	   - is compiled.
  	  -->
  	<attainGoal name="java:compile" />
  	<echo message="====================================" />
  	<echo message="Starting HSQL server for testing    " />  	
  	<echo message="====================================" />
  	<!-- Test DB -->
  	<java classname="org.apache.jetspeed.dbutil.HSQLServer" fork="true" >
       <classpath>
         <path refid="maven.dependency.classpath"/>
         <pathelement path="${maven.build.dest}"/>
        </classpath>
         <arg value="-database" />
         <arg value="portal/test/db/hsql/Registry" />
         <arg value="-port" />
         <arg value="9001" />
         <arg value="-no_system_exit" />
         <arg value="true" />
         <arg value="-silent" />
         <arg value="true" />
         <arg value="-trace" />
         <arg value="false" />
      </java> 
  	
  </preGoal>
  
  <postGoal name="allBuild">
  	<echo message="====================================" />
  	<echo message="        Stopping HSQL server        " />  	
  	<echo message="====================================" />
  	<java classname="org.apache.jetspeed.dbutil.HSQLServer" fork="true" >
       <classpath>
         <path refid="maven.dependency.classpath"/>
         <pathelement path="${maven.build.dest}"/>
        </classpath>
         <arg value="kill" />
         <arg value="9001" />     
         <arg value="sa" />
         <arg value="" />
      </java>   	
  	
  </postGoal>

</project>
