<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright 2004 The Apache Software Foundation
    
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    
    http://www.apache.org/licenses/LICENSE-2.0
    
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
    
    $Id$
-->
<project default="java:jar" xmlns:j="jelly:core" xmlns:maven="jelly:maven" xmlns:artifact="artifact"
    xmlns:ant="jelly:ant" xmlns:util="jelly:util">

    <preGoal name="java:jar-resources">
    	<attainGoal name="copyPortlaWebApp" />
        <copy file="plugin.properties" tofile="${basedir}/target/classes/plugin.properties" overwrite="true"
            failonerror="true">
            <filterset begintoken="@" endtoken="@">
                <filter token="JETSPEED_VERSION" value="${jetspeed.version}" />
                <filter token="JETSPEED_GROUPID" value="${pom.groupId}" />
                <filter token="PLUTO_VERSION" value="${pluto.version}" />
                <filter token="PORTALS_BRIDGES_COMMON_VERSION" value="${portals.bridges.common.version}" />
            </filterset>
        </copy>

    </preGoal>

    <goal name="deploy-plugin">
        <attainGoal name="clean" />
        <attainGoal name="copyPortlaWebApp" />
    	<attainGoal name="core-deploy-plugin" />
    </goal>

    <goal name="undeploy-plugin">
        <attainGoal name="plugin:uninstall-now" />
        <delete dir="${maven.home.local}/plugins/${maven.final.name}" verbose="false" />
    </goal>

    <goal name="copyPortlaWebApp">
        <copy todir="target/classes/plugin-resources/webapp" overwrite="true" failonerror="true">
            <fileset dir="../portal-webapp/src/webapp" />
        </copy>
        <copy todir="target/classes/plugin-resources/" overwrite="true" failonerror="true">
            <fileset dir="../portal-webapp/src/resources" />
        </copy>
        <copy file="${maven.repo.local}/${pom.groupId}/wars/jetspeed-layouts-${jetspeed.version}.war"
            tofile="${org.apache.jetspeed.portal.dir}/WEB-INF/deploy/jetspeed-layouts.war" overwrite="true" failonerror="true" />       
        <copy file="../full-portal.xml"
            tofile="target/classes/plugin-resources/full-portal.xml" overwrite="true"
            failonerror="true" />
        <copy file="../core-build.xml"
            tofile="target/classes/plugin-resources/core-build.xml" overwrite="true"
            failonerror="true" />
        <copy file="../portal-webapp/portal-project.xml" tofile="${basedir}/target/classes/plugin-resources/portal-project.xml"
            overwrite="true" failonerror="true" />
        <copy file="../portal-webapp/portal-project-info.xml" tofile="${basedir}/target/classes/plugin-resources/project-info.xml"
            overwrite="true" failonerror="true">
            <filterset begintoken="@" endtoken="@">
                <filter token="GENAPP_GROUPID" value="${org.apache.jetspeed.genapp.groupId}" />
                <filter token="GENAPP_ARTIFACTID" value="${org.apache.jetspeed.portal.name}" />
                <filter token="GENAPP_NAME" value="${org.apache.jetspeed.genapp.name}" />
                <filter token="GENAPP_CURRENT_VERSION" value="${org.apache.jetspeed.genapp.currentVersion}" />
            </filterset>
        </copy>
        <echoproperties destfile="${basedir}/target/classes/plugin-resources/project.properties" failonerror="true">
    		<propertyset>
			    <!-- <propertyref refid="jetspeed.version"/>
			    <propertyref refid="pluto.version"/>
			    <propertyref refid="portlet.api.version"/>
			    <propertyref refid="servlet.api.version"/>
			    <propertyref refid="myfaces.version"/>
			    <propertyref refid="spring.version"/>-->
			    <propertyref prefix="portals.bridges."/>
			    <!-- <propertyref refid="commons.logging.version"/>-->
		    </propertyset>
		</echoproperties>
    </goal>

    <goal name="deploy-plugin-withoutwebapp">
    	<attainGoal name="clean" />
    	<attainGoal name="core-deploy-plugin" />
    </goal>

    <goal name="core-deploy-plugin">
    	<attainGoal name="undeploy-plugin" />

		<!-- install will do the uninstall if needed for us -->
        <attainGoal name="plugin:install" />
        <!-- get the plugin available now (like with plugin:install-now, but which doesn't install).
            Bug: If a new version of the plugin is deployed while an older version is available
            maven gets very confused... Haven't found a workaround for that.
        -->

        <!-- deploy the plugin to the local repository directly: 
            using the plugin:repository-install goal would lead to another build of the jar as all plugin goals do that as 
            prereq
        -->
        <maven:installPlugin file="${maven.build.dir}/${maven.final.name}.jar" cache="true" />
        <artifact:install artifact="${maven.build.dir}/${maven.final.name}.jar" type="plugin" project="${pom}" />
        <unjar src="${maven.build.dir}/${maven.final.name}.jar" dest="${maven.home.local}/plugins/${maven.final.name}"
            overwrite="true" />
    </goal>

</project>
