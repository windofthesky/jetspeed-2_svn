#*
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*#
#set ($messages = $portletConfig.getResourceBundle($renderRequest.Locale))
<div dojoType="dialog" id="AddCategoryDialog" bgColor="grey" bgOpacity="0.5" toggle="fade" toggleDuration="250">
  <form onsubmit="return false;">
  <input type="hidden" id='theNewCategory'>
    <div id="AddCategoryPane" dojoType="ContentPane" label="Add Category" class="constraints">
      <div style="height:21px; padding: 2px"><b>$messages.getString("category.name"):&nbsp;</b><span id="categoryName"></span></div>
      <div class="categoryTableDiv">
      <table>
      <tr>
        <td>$messages.getString("category.name"):</td>
        <td><input id='jsCatName' type="text"></td>
      </tr>
      </table>
      </div>
      <div dojoType="LayoutContainer"
                     widgetId="constraintsEditorBottom"
                     minHeight="20"
                     layoutAlign="bottom"
                     style="padding: 4px; width: 100%; height: 30px">
            <div dojoType="LayoutContainer"
                 widgetId="constraintsEditorBottomLeft"
                 minHeight="20"
                 layoutAlign="left"
                 style="padding: 4px; width: 18%; height: 30px">
            </div>
            <div dojoType="LayoutContainer"
                 widgetId="constraintsEditorBottomRight"
                 minHeight="20"
                 layoutAlign="right"
                 style="padding: 4px; border-right: thin inset grey; width: 78%; height: 30px">
                <div class="buttonbox">
                    <button dojoType="Button" onClick="dojo.widget.byId( 'AddCategoryDialog' ).hide();" >$messages.getString("cancel")</button>
                    <button dojoType="Button" onClick="addCategory();">$messages.getString("ok")</button>
                </div>
            </div>
      </div>
    </div>
  </form>
</div>
#set ($cancelLink = $renderResponse.createRenderURL())
$cancelLink.setPortletMode($MODE_VIEW)
<!-- Search Form -->
<form id='jsEditSelectorForm' onSubmit='return false;' method="post" style="height:250px; padding: 2px; margin:10px">
<table>
<tr>
<td nowrap class="portlet-section-alternate" align="right">$messages.getString("categories"):&nbsp;</td>
<td nowrap>
<select id='jsSelectCat' size='10' onChange='javascript:handleSelect();'>
</select>
<td nowrap class="portlet-section-alternate" align="right">$messages.getString("keywords"):&nbsp;</td>
<td nowrap>
<input type="text" name="keywords" id="keywords" size="60" value="" class="portlet-form-field-label"/>    
</tr>
<tr>
<td nowrap>
<input type="submit" value='$messages.getString("add.category")' onClick='javascript:handleAdd();'/>
</td>
<td nowrap>
<input type="submit" value='$messages.getString("remove.category")' onClick='javascript:handleRemove();'/>
</td>
</tr>
<tr>
<td nowrap class="portlet-section-alternate" align="right">$messages.getString("rows"):&nbsp;</td>
<td nowrap>         
<input type="text" name="Rows" id="Rows" size="6" value="$!Rows" class="portlet-form-field-label"/>    
</td>
<td nowrap class="portlet-section-alternate" align="right">$messages.getString("columns"):&nbsp;</td>
<td nowrap>
<input type="text" name="Columns" id="Columns" size="6" value="$!Columns" class="portlet-form-field-label"/>    
</td>
</tr>
<tr>
<td nowrap>
<input type="submit" value='$messages.getString("save")' onClick='javascript:handleSave();'/>
<input type="submit" value='$messages.getString("cancel")' onClick='javascript:handleCancel();'/>
<input type="hidden" name='jsModifiedCats' id='jsModifiedCats' value=""/>
<input type="hidden" name='jsModifiedKeys' id='jsModifiedKeys' value=""/>
<input type="hidden" name='jsAddedCats' id='jsAddedCats' value=""/>
<input type="hidden" name='jsAddedKeys' id='jsAddedKeys' value=""/>
<input type="hidden" name='jsRemovedCats' id='jsRemovedCats' value=""/>
<input type="hidden" name='jsCats' id='jsCats' value=""/>
<input type="hidden" name='jspage' id='jspage' value="$jspage"/>
</td>
</tr>
</table>
</form>

<script language="JavaScript" type="text/javascript">
function JsCategory(name, keywords)
{
   this.name = name;
   this.keywords = keywords;
   this.state = "clean";
}
function saveOffKeywords()
{
   var keywords = document.getElementById('keywords');
   if (window.jsLastIndex > -1)
   {
      if (jsCategories[window.jsLastIndex].keywords != keywords.value)
      {
        jsCategories[window.jsLastIndex].keywords = keywords.value; 
        if (jsCategories[window.jsLastIndex].state != "new")
        {
           jsCategories[window.jsLastIndex].state = "modified";
        }
      }
   }
}
function handleSelect()
{
   var catList = document.getElementById('jsSelectCat');
   saveOffKeywords();
   var keywords = document.getElementById('keywords');   
   keywords.value = jsCategories[catList.selectedIndex].keywords;
   window.jsLastIndex = catList.selectedIndex;
}
function handleAdd()
{ 
   dojo.widget.byId("AddCategoryDialog").show();   
}
function addCategory()
{
    saveOffKeywords();
    var newIndex = jsCategories.length;
    var catName = document.getElementById('jsCatName').value;    
    catName = trim(catName);
    if (catName.length > 0)
    {    
        // check for dups
        for (i = 0; i < jsCategories.length; i++)
        {
           if (catName.toLowerCase() == jsCategories[i].name.toLowerCase())
           {
              dojo.widget.byId("AddCategoryDialog").hide();   
              return;
           }
        }
        jsCategories[newIndex] = new JsCategory(catName, "");
        jsCategories[newIndex].state = "new";
        var catList = document.getElementById('jsSelectCat');
        var opt = new Option(catName, catName);
        catList.options[newIndex] = opt;
        //catList.add(opt, null); 
    }
    dojo.widget.byId("AddCategoryDialog").hide();   
}
function handleRemove()
{
    var catList = document.getElementById('jsSelectCat');
    if (catList.selectedIndex != -1)
    {
        window.jsLastIndex = -1;
        var keywords = document.getElementById('keywords');   
        keywords.value = "";
        jsRemoves[jsRemoves.length] = jsCategories[catList.selectedIndex].name;
        // shift up
        var temp = new Array();
        var j = 0;
        for (i = 0; i < jsCategories.length; i++)
        {
            if (i != catList.selectedIndex)
            {
                temp[j] = jsCategories[i];
                j = j + 1;
            }
        }
        //delete jsCategories;
        jsCategories = temp;
        catList.remove(catList.selectedIndex);
    }
    
}
function handleSave()
{
   saveOffKeywords();
   processDeletes(window.jsRemoves, 'jsRemovedCats');
   var modifiedCats = document.getElementById("jsModifiedCats");  
   var modifiedKeys = document.getElementById("jsModifiedKeys");  
   var addedCats = document.getElementById("jsAddedCats");  
   var addedKeys = document.getElementById("jsAddedKeys");  
   var cats = document.getElementById("jsCats");
   if (window.jsCategories.length == 0)
   {
       modifiedCats.value = "";
       modifiedKeys.value = "";
       addedCats.value = "";
       addedKeys.value = "";
       cats.value = "";      
   }
   else
   {
       var newCount = 0;
       var modCount = 0;
       for (i = 0; i < window.jsCategories.length; i++)
       {
          if (i == 0)
          {
              cats.value = window.jsCategories[i].name;
          }
          else
          {
              cats.value = cats.value + "," + window.jsCategories[i].name;
          }
          if (window.jsCategories[i].state == "new")
          {
             if (newCount == 0)
             {
                addedCats.value = window.jsCategories[i].name;
                addedKeys.value = window.jsCategories[i].keywords;
             }
             else
             {
                addedCats.value = addedCats.value + "," + window.jsCategories[i].name;
                addedKeys.value = addedKeys.value + "|" + window.jsCategories[i].keywords;
             }
             newCount = newCount + 1;
          }
          else if (window.jsCategories[i].state == "modified")
          {
             if (modCount == 0)
             {
                modifiedCats.value = window.jsCategories[i].name;
                modifiedKeys.value = window.jsCategories[i].keywords;
             }
             else
             {
                modifiedCats.value = modifiedCats.value + "," + window.jsCategories[i].name;
                modifiedKeys.value = modifiedKeys.value + "|" + window.jsCategories[i].keywords;
             }
             modCount = modCount + 1;
          }
       }

   }
   var editForm = document.getElementById('jsEditSelectorForm');
   editForm.action = "$renderResponse.createActionURL()";
   editForm.submit();
}
function handleCancel()
{
   var editForm = document.getElementById('jsEditSelectorForm');
   editForm.action = "$cancelLink";
   editForm.submit();
}

function processDeletes(arr, fieldName)
{
   var inputField = document.getElementById(fieldName);  
   if (arr.length == 0)
   {
       inputField.value = "";
       return;
   }
   var temp = arr[0]; 
   for (i = 1; i < arr.length; i++)
   {
      temp = temp + "," + arr[i];               
   }
   inputField.value = temp;
}
function trim(str)
{
   return str.replace(/(^\s*|\s*$)/g, "");
}
function initializeEditPortletSelector()
{
    #foreach ( $cat in $categories)
    #set ($icount = $velocityCount - 1)   
    jsCategories[$icount] = new JsCategory("$cat.Name", "$!cat.Keywords");
    #end
    var catList = document.getElementById('jsSelectCat');
    for (i = 0; i < jsCategories.length; i++)
    {
       catList.options[i] = new Option(jsCategories[i].name,jsCategories[i].name);
    }
}
window.jsCategories = new Array();
window.jsRemoves = new Array();
window.jsLastIndex = -1;
dojo.addOnLoad( window.initializeEditPortletSelector );
</script>
