<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

    <!-- Id Generator -->
    <bean id="idGenerator" class="org.apache.jetspeed.idgenerator.JetspeedIdGenerator" init-method="start" destroy-method="stop">
        <constructor-arg index="0"><value>65536</value></constructor-arg>
        <constructor-arg index="1"><value>P-</value></constructor-arg>
        <constructor-arg index="2"><value></value></constructor-arg>
    </bean>

    <!-- Page Manager Caches -->
    <bean id="cacheManagerConfig" class="org.apache.jetspeed.cache.impl.EhCacheConfigResource">
        <property name="defaultConfigResource" value="ehcache.xml"/>
        <property name="test" value="true"/>
    </bean>

    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" ref="cacheManagerConfig"/>
    </bean>

    <bean id="ehPageManagerOidCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheManager" ref="cacheManager"/>
        <property name="cacheName" value="pageManagerOidCache"/>
    </bean>
    
    <bean id="ehPageManagerPathCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheManager" ref="cacheManager"/>
        <property name="cacheName" value="pageManagerPathCache"/>
    </bean>
    
    <bean id="ehPageManagerPropertiesCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheManager" ref="cacheManager"/>
        <property name="cacheName" value="pageManagerPropertiesCache"/>
    </bean>
    
    <bean id="ehPageManagerPropertiesPathCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheManager" ref="cacheManager"/>
        <property name="cacheName" value="pageManagerPropertiesPathCache"/>
    </bean>
    
    <bean id="pageManagerOidCache" class="org.apache.jetspeed.cache.impl.EhCacheImpl">
        <constructor-arg><ref bean="ehPageManagerOidCache"/></constructor-arg>
    </bean>
    
    <bean id="pageManagerPathCache" class="org.apache.jetspeed.cache.impl.EhCacheDistributedImpl">
        <constructor-arg><ref bean="ehPageManagerPathCache"/></constructor-arg>
    </bean>
    
    <bean id="pageManagerPropertiesCache" class="org.apache.jetspeed.cache.impl.EhCacheImpl">
        <constructor-arg><ref bean="ehPageManagerPropertiesCache"/></constructor-arg>
    </bean>
    
    <bean id="pageManagerPropertiesPathCache" class="org.apache.jetspeed.cache.impl.EhCacheImpl">
        <constructor-arg><ref bean="ehPageManagerPropertiesPathCache"/></constructor-arg>
    </bean>
    
    <!-- Transaction Proxying -->
    <bean id="pageManagerInterceptor" class="org.apache.jetspeed.util.interceptors.PageManagerInterceptor">
        <!--
            set cache transaction method name patterns for methods that
            directly or indirectly add cache transactions so that they
            can properly rollback and cleanup thread local storage
        -->
        <constructor-arg> 
            <list>
                <value>update*</value>
                <value>addPages</value>
            </list>
        </constructor-arg>
    </bean>

    <bean id="pageManager" parent="baseTransactionProxy">
        <property name="proxyInterfaces">
            <value>org.apache.jetspeed.page.PageManager</value>
        </property>
        <property name="target">
            <ref bean="pageManagerImpl" />
        </property>
        <property name="transactionAttributes">
            <props>
              <!--
                  note: set cache transaction method name patterns in pageManagerInterceptor
                  for methods that directly or indirectly add cache transactions so that
                  they can properly rollback and cleanup thread local storage
              -->
              <prop key="*">PROPAGATION_REQUIRED</prop>
              <prop key="getPage*">PROPAGATION_SUPPORTS</prop>  
              <prop key="getPageTemplate*">PROPAGATION_SUPPORTS</prop>
              <prop key="getDynamicPage*">PROPAGATION_SUPPORTS</prop>
              <prop key="getFragmentDefinition*">PROPAGATION_SUPPORTS</prop>
              <prop key="getLink*">PROPAGATION_SUPPORTS</prop>  
              <prop key="getFolder*">PROPAGATION_SUPPORTS</prop>  
              <prop key="getContentPage">PROPAGATION_SUPPORTS</prop>  
              <prop key="getAll">PROPAGATION_SUPPORTS</prop>  
              <prop key="getUserFolder">PROPAGATION_SUPPORTS</prop>  
              <prop key="update*">PROPAGATION_REQUIRED,-org.apache.jetspeed.page.document.NodeException</prop>
              <prop key="removePage">PROPAGATION_REQUIRED,-org.apache.jetspeed.page.document.NodeException</prop>
              <prop key="removePageTemplate">PROPAGATION_REQUIRED,-org.apache.jetspeed.page.document.NodeException</prop>
              <prop key="removeDynamicPage">PROPAGATION_REQUIRED,-org.apache.jetspeed.page.document.NodeException</prop>
              <prop key="removeFragmentDefinition">PROPAGATION_REQUIRED,-org.apache.jetspeed.page.document.NodeException</prop>
              <prop key="removeFolder">PROPAGATION_REQUIRED,-org.apache.jetspeed.page.document.NodeException</prop>
              <prop key="removeLink">PROPAGATION_REQUIRED,-org.apache.jetspeed.page.document.NodeException</prop>
              <prop key="removePageSecurity">PROPAGATION_REQUIRED,-org.apache.jetspeed.page.document.NodeException</prop>                            
              <prop key="createUserHomePagesFromRoles">PROPAGATION_REQUIRED,-org.apache.jetspeed.page.document.NodeException</prop>
              <prop key="deepCopy*">PROPAGATION_REQUIRED,-org.apache.jetspeed.page.document.NodeException</prop>
              <prop key="addPages">PROPAGATION_REQUIRED,-org.apache.jetspeed.page.document.NodeException</prop>              
              <prop key="folderExists">PROPAGATION_SUPPORTS</prop>  
              <prop key="pageExists">PROPAGATION_SUPPORTS</prop>  
              <prop key="pageTemplateExists">PROPAGATION_SUPPORTS</prop>
              <prop key="dynamicPageExists">PROPAGATION_SUPPORTS</prop>
              <prop key="fragmentDefinitionExists">PROPAGATION_SUPPORTS</prop>
              <prop key="linkExists">PROPAGATION_SUPPORTS</prop>  
              <prop key="userFolderExists">PROPAGATION_SUPPORTS</prop>  
              <prop key="userPageExists">PROPAGATION_SUPPORTS</prop>  
            </props>
        </property>
        <property name="preInterceptors"> 
            <list>
                <ref bean="pageManagerInterceptor" />
            </list>
        </property>
    </bean>

    <!-- Inject Page Manager Proxy into Page Manager -->
    <bean id="injectPageManagerProxy" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject"><ref bean="pageManagerImpl"/></property>
        <property name="targetMethod"><value>setPageManagerProxy</value></property>
        <property name="arguments">
            <list>
                <ref bean="pageManager"/>
            </list>
        </property>
    </bean>

</beans>
