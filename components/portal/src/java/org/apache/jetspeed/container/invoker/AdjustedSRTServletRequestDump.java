/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Generated by ASM utility, ASMifierClassVisitor like the following commands:
 *     > java -classpath lib/asm-all-2.2.jar org.objectweb.asm.util.ASMifierClassVisitor \
 *           org.apache.jetspeed.container.AdjustedSRTServletRequest > AdjustedSRTServletRequestDump.java
 *     > java -classpath lib/asm-all-2.2.jar org.objectweb.asm.util.ASMifierClassVisitor \
 *           org.apache.jetspeed.container.AdjustedSRTServletRequest$1 > AdjustedSRTServletRequest$1Dump.java
 *
 * And, the latter was merged into the former, replacing the method name, 'dump' to 'dumpInner1'.
 */

/*
package org.apache.jetspeed.container.invoker;

import com.ibm.ws.webcontainer.core.Response;
import com.ibm.ws.webcontainer.srt.SRTServletRequest;
import com.ibm.ws.webcontainer.srt.SRTRequestContext;
import com.ibm.ws.webcontainer.webapp.*;
import com.ibm.wsspi.webcontainer.IRequest;
import java.io.UnsupportedEncodingException;
import java.io.BufferedReader;
import java.io.IOException;
import java.security.Principal;
import java.security.cert.X509Certificate;
import java.util.Map;
import java.util.Enumeration;
import java.util.Locale;
import java.util.Hashtable;
import java.util.List;
import java.util.HashMap;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletInputStream;
import javax.servlet.http.HttpSession;
import javax.servlet.http.Cookie;

public class AdjustedSRTServletRequest extends SRTServletRequest
{
    private static ThreadLocal tlAttributes =
        new ThreadLocal() {
            protected synchronized Object initialValue() {
                return new HashMap();
            }
        };
    
    private static void setThreadLocalAttribute(String name, Object value)
    {
        Map attrMap = (Map) tlAttributes.get();
        
        if (value != null)
        {
            attrMap.put(name, value);
        }
        else
        {
            attrMap.remove(name);
        }
    }
    
    private static Object getThreadLocalAttribute(String name)
    {
        Map attrMap = (Map) tlAttributes.get();
        return attrMap.get(name);
    }
    
    private static void removeThreadLocalAttribute(String name)
    {
        Map attrMap = (Map) tlAttributes.get();
        attrMap.remove(name);
    }
    
    private static void removeAllThreadLocalAttributes()
    {
        Map attrMap = (Map) tlAttributes.get();
        attrMap.clear();
    }
    
    private static final String WEBAPP_DISP_CONTEXT_KEY = AdjustedSRTServletRequest.class.getName() + ".webAppDispatcherContext";

    protected SRTServletRequest srtServletRequest;
    
    public AdjustedSRTServletRequest(SRTServletRequest srtServletRequest)
    {
        super(null);
        this.srtServletRequest = srtServletRequest;
        removeAllThreadLocalAttributes();
    }
    
    public Object getPrivateAttribute(String s)
    {
        return this.srtServletRequest.getPrivateAttribute(s);
    }
    
    public Enumeration getPrivateAttributeNames()
    {
        return this.srtServletRequest.getPrivateAttributeNames();
    }
    
    public void setPrivateAttribute(String s, Object obj)
    {
        synchronized (this.srtServletRequest)
        {
            this.srtServletRequest.setPrivateAttribute(s, obj);
        }
    }
    
    public void initForNextRequest(IRequest irequest)
    {
        this.srtServletRequest.initForNextRequest(irequest);
    }
    
    public Object getAttribute(String s)
    {
        Object value = getThreadLocalAttribute(s);
        
        if (value == null)
        {
            value = this.srtServletRequest.getAttribute(s);
        }
        
        return value;
    }
    
    public Enumeration getAttributeNames()
    {
        return this.srtServletRequest.getAttributeNames();
    }
    
    public void setCharacterEncoding(String s)
        throws UnsupportedEncodingException
    {
        this.srtServletRequest.setCharacterEncoding(s);
    }
    
    public long getDateHeader(String s)
    {
        return this.srtServletRequest.getDateHeader(s);
    }
    
    public String getHeader(String s)
    {
        return this.srtServletRequest.getHeader(s);
    }
    
    public String getHeaderDirect(String s)
    {
        return this.srtServletRequest.getHeaderDirect(s);
    }
    
    public Enumeration getHeaderNames()
    {
        return this.srtServletRequest.getHeaderNames();
    }
    
    public int getIntHeader(String s)
    {
        return this.srtServletRequest.getIntHeader(s);
    }
    
    public Enumeration getHeaders(String s)
    {
        return this.srtServletRequest.getHeaders(s);
    }
    
    public String getMethod()
    {
        return this.srtServletRequest.getMethod();
    }
    
    public int getContentLength()
    {
        return this.srtServletRequest.getContentLength();
    }
    
    public String getContentType()
    {
        return this.srtServletRequest.getContentType();
    }
    
    public String getProtocol()
    {
        return this.srtServletRequest.getProtocol();
    }
    
    public String getScheme()
    {
        return this.srtServletRequest.getScheme();
    }
    
    public int getServerPort()
    {
        return this.srtServletRequest.getServerPort();
    }
    
    public String getRemoteAddr()
    {
        return this.srtServletRequest.getRemoteAddr();
    }
    
    public String getRemoteHost()
    {
        return this.srtServletRequest.getRemoteHost();
    }
    
    public void setAttribute(String s, Object obj)
    {
        setThreadLocalAttribute(s, obj);
        
        synchronized (this.srtServletRequest)
        {
            this.srtServletRequest.setAttribute(s, obj);
        }
    }
    
    public void removeAttribute(String s)
    {
        removeThreadLocalAttribute(s);
        
        synchronized (this.srtServletRequest)
        {
            this.srtServletRequest.removeAttribute(s);
        }
    }
    
    public Locale getLocale()
    {
        return this.srtServletRequest.getLocale();
    }
    
    public Enumeration getLocales()
    {
        return this.srtServletRequest.getLocales();
    }
    
    public boolean isSecure()
    {
        return this.srtServletRequest.isSecure();
    }
    
    public String getCipherSuite()
    {
        return this.srtServletRequest.getCipherSuite();
    }
    
    public X509Certificate[] getPeerCertificates()
    {
        return this.srtServletRequest.getPeerCertificates();
    }
    
    public void setRequest(IRequest irequest)
    {
        this.srtServletRequest.setRequest(irequest);
    }
    
    public void attributeAdded(String s, Object obj)
    {
        this.srtServletRequest.attributeAdded(s, obj);
    }
    
    public void attributeRemoved(String s, Object obj)
    {
        this.srtServletRequest.attributeRemoved(s, obj);
    }
    
    public void attributeReplaced(String s, Object obj)
    {
        this.srtServletRequest.attributeReplaced(s, obj);
    }
    
    public ServletInputStream getInputStream()
        throws IOException
    {
        return this.srtServletRequest.getInputStream();
    }
    
    public IRequest getIRequest()
    {
        return this.srtServletRequest.getIRequest();
    }
    
    public synchronized BufferedReader getReader()
        throws UnsupportedEncodingException, IOException
    {
        return this.srtServletRequest.getReader();
    }
    
    public WebAppDispatcherContext getWebAppDispatcherContext()
    {
        WebAppDispatcherContext webAppDispContext = (WebAppDispatcherContext) getThreadLocalAttribute(WEBAPP_DISP_CONTEXT_KEY);
        
        if (webAppDispContext == null)
        {
            webAppDispContext = this.srtServletRequest.getWebAppDispatcherContext();
        }
        
        return webAppDispContext;
    }
    
    public void setWebAppDispatcherContext(WebAppDispatcherContext webappdispatchercontext)
    {
        setThreadLocalAttribute(WEBAPP_DISP_CONTEXT_KEY, webappdispatchercontext);
    }
    
    public void resetPathElements()
    {
        this.srtServletRequest.resetPathElements();
    }
    
    public String getLocalAddr()
    {
        return this.srtServletRequest.getLocalAddr();
    }
    
    public String getLocalName()
    {
        return this.srtServletRequest.getLocalName();
    }
    
    public int getLocalPort()
    {
        return this.srtServletRequest.getLocalPort();
    }
    
    public int getRemotePort()
    {
        return this.srtServletRequest.getRemotePort();
    }
    
    public Response getResponse()
    {
        return this.srtServletRequest.getResponse();
    }
    
    public void start()
    {
        this.srtServletRequest.start();
    }
    
    public Object clone()
        throws CloneNotSupportedException
    {
        return this.srtServletRequest.clone();
    }
    
    public String getAuthType()
    {
        return this.srtServletRequest.getAuthType();
    }
    
    public String getCharacterEncoding()
    {
        return this.srtServletRequest.getCharacterEncoding();
    }
    
    public String getReaderEncoding()
    {
        return this.srtServletRequest.getReaderEncoding();
    }
    
    public Cookie[] getCookies()
    {
        return this.srtServletRequest.getCookies();
    }
    
    public void addParameter(String s, String as[])
    {
        this.srtServletRequest.addParameter(s, as);
    }
    
    public void setMethod(String s)
    {
        this.srtServletRequest.setMethod(s);
    }
    
    public void setRawParameters(Hashtable hashtable)
    {
        this.srtServletRequest.setRawParameters(hashtable);
    }
    
    public Hashtable getRawParameters()
    {
        return this.srtServletRequest.getRawParameters();
    }
    
    public String getParameter(String s)
    {
        return this.srtServletRequest.getParameter(s);
    }
    
    public Enumeration getParameterNames()
    {
        return this.srtServletRequest.getParameterNames();
    }
    
    public String[] getParameterValues(String s)
    {
        return this.srtServletRequest.getParameterValues(s);
    }
    
    public String getPathInfo()
    {
        return this.srtServletRequest.getPathInfo();
    }
    
    public String getServletPath()
    {
        return this.srtServletRequest.getServletPath();
    }
    
    public String getPathTranslated()
    {
        return this.srtServletRequest.getPathTranslated();
    }
    
    public String getQueryString()
    {
        return this.srtServletRequest.getQueryString();
    }
    
    public void setQueryString(String s)
    {
        this.srtServletRequest.setQueryString(s);
    }
    
    public String getRealPath(String s)
    {
        return this.srtServletRequest.getRealPath(s);
    }
    
    public String getRemoteUser()
    {
        return this.srtServletRequest.getRemoteUser();
    }
    
    public String getRequestedSessionId()
    {
        return this.srtServletRequest.getRequestedSessionId();
    }
    
    public String getRequestURI()
    {
        return this.srtServletRequest.getRequestURI();
    }
    
    public String getServerName()
    {
        return this.srtServletRequest.getServerName();
    }
    
    public HttpSession getSession()
    {
        return this.srtServletRequest.getSession();
    }
    
    public HttpSession getSession(boolean flag)
    {
        return this.srtServletRequest.getSession(flag);
    }
    
    public boolean isRequestedSessionIdFromCookie()
    {
        return this.srtServletRequest.isRequestedSessionIdFromCookie();
    }
    
    public boolean isRequestedSessionIdFromUrl()
    {
        return this.srtServletRequest.isRequestedSessionIdFromUrl();
    }
    
    public boolean isRequestedSessionIdFromURL()
    {
        return this.srtServletRequest.isRequestedSessionIdFromURL();
    }
    
    public boolean isRequestedSessionIdValid()
    {
        return this.srtServletRequest.isRequestedSessionIdValid();
    }
    
    public synchronized void parseParameters()
    {
        this.srtServletRequest.parseParameters();
    }
    
    public void finish()
    {
        this.srtServletRequest.finish();
    }
    
    public RequestDispatcher getRequestDispatcher(String s)
    {
        return this.srtServletRequest.getRequestDispatcher(s);
    }
    
    public String getContextPath()
    {
        return this.srtServletRequest.getContextPath();
    }
    
    public boolean isUserInRole(String s)
    {
        return this.srtServletRequest.isUserInRole(s);
    }
    
    public Principal getUserPrincipal()
    {
        return this.srtServletRequest.getUserPrincipal();
    }
    
    public void pushParameterStack()
    {
        this.srtServletRequest.pushParameterStack();
    }
    
    public void popParameterStack()
    {
        this.srtServletRequest.popParameterStack();
    }
    
    public void removeQSFromList()
    {
        this.srtServletRequest.removeQSFromList();
    }
    
    public void aggregateQueryStringParams(String s, boolean flag)
    {
        this.srtServletRequest.aggregateQueryStringParams(s, flag);
    }
    
    public Map getParameterMap()
    {
        return this.srtServletRequest.getParameterMap();
    }
    
    public StringBuffer getRequestURL()
    {
        return this.srtServletRequest.getRequestURL();
    }
    
    public byte[] getSSLId()
    {
        return this.srtServletRequest.getSSLId();
    }
    
    public byte[] getCookieValueAsBytes(String s)
    {
        return this.srtServletRequest.getCookieValueAsBytes(s);
    }
    
    public List getAllCookieValues(String s)
    {
        return this.srtServletRequest.getAllCookieValues(s);
    }
    
    public String getUpdatedSessionId()
    {
        return this.srtServletRequest.getUpdatedSessionId();
    }
    
    public void setSessionId(String s)
    {
        this.srtServletRequest.setSessionId(s);
    }
    
    public String getEncodedRequestURI()
    {
        return this.srtServletRequest.getEncodedRequestURI();
    }
    
    public SRTRequestContext getRequestContext()
    {
        return this.srtServletRequest.getRequestContext();
    }
    
    public boolean getRunningCollaborators()
    {
        return this.srtServletRequest.getRunningCollaborators();
    }
    
    public void setRunningCollaborators(boolean flag)
    {
        this.srtServletRequest.setRunningCollaborators(flag);
    }
    
    public void destroy()
    {
        this.srtServletRequest.destroy();
    }
    
}
 */

package org.apache.jetspeed.container.invoker;

import java.util.*;
import org.objectweb.asm.*;
import org.objectweb.asm.attrs.*;

public class AdjustedSRTServletRequestDump implements Opcodes 
{

    public static byte[] dump () throws Exception 
    {
        ClassWriter cw = new ClassWriter(false);
        FieldVisitor fv;
        MethodVisitor mv;
        AnnotationVisitor av0;

        cw.visit(V1_2, ACC_PUBLIC + ACC_SUPER, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", null, "com/ibm/ws/webcontainer/srt/SRTServletRequest", null);

        cw.visitSource("AdjustedSRTServletRequest.java", null);

        cw.visitInnerClass("org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest$1", null, null, ACC_STATIC);

        {
            fv = cw.visitField(ACC_PRIVATE + ACC_STATIC, "tlAttributes", "Ljava/lang/ThreadLocal;", null, null);
            fv.visitEnd();
        }
        
        {
            fv = cw.visitField(ACC_PRIVATE + ACC_FINAL + ACC_STATIC, "WEBAPP_DISP_CONTEXT_KEY", "Ljava/lang/String;", null, null);
            fv.visitEnd();
        }
        
        {
            fv = cw.visitField(ACC_PROTECTED, "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;", null, null);
            fv.visitEnd();
        }
        
        {
            fv = cw.visitField(ACC_STATIC + ACC_SYNTHETIC, "class$org$apache$jetspeed$container$AdjustedSRTServletRequest", "Ljava/lang/Class;", null, null);
            fv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PRIVATE + ACC_STATIC, "setThreadLocalAttribute", "(Ljava/lang/String;Ljava/lang/Object;)V", null, null);
            mv.visitCode();
            mv.visitFieldInsn(GETSTATIC, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "tlAttributes", "Ljava/lang/ThreadLocal;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/ThreadLocal", "get", "()Ljava/lang/Object;");
            mv.visitTypeInsn(CHECKCAST, "java/util/Map");
            mv.visitVarInsn(ASTORE, 2);
            mv.visitVarInsn(ALOAD, 1);
            Label l0 = new Label();
            mv.visitJumpInsn(IFNULL, l0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
            mv.visitInsn(POP);
            Label l1 = new Label();
            mv.visitJumpInsn(GOTO, l1);
            mv.visitLabel(l0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "remove", "(Ljava/lang/Object;)Ljava/lang/Object;");
            mv.visitInsn(POP);
            mv.visitLabel(l1);
            mv.visitInsn(RETURN);
            mv.visitMaxs(3, 3);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PRIVATE + ACC_STATIC, "getThreadLocalAttribute", "(Ljava/lang/String;)Ljava/lang/Object;", null, null);
            mv.visitCode();
            mv.visitFieldInsn(GETSTATIC, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "tlAttributes", "Ljava/lang/ThreadLocal;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/ThreadLocal", "get", "()Ljava/lang/Object;");
            mv.visitTypeInsn(CHECKCAST, "java/util/Map");
            mv.visitVarInsn(ASTORE, 1);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "get", "(Ljava/lang/Object;)Ljava/lang/Object;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PRIVATE + ACC_STATIC, "removeThreadLocalAttribute", "(Ljava/lang/String;)V", null, null);
            mv.visitCode();
            mv.visitFieldInsn(GETSTATIC, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "tlAttributes", "Ljava/lang/ThreadLocal;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/ThreadLocal", "get", "()Ljava/lang/Object;");
            mv.visitTypeInsn(CHECKCAST, "java/util/Map");
            mv.visitVarInsn(ASTORE, 1);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "remove", "(Ljava/lang/Object;)Ljava/lang/Object;");
            mv.visitInsn(POP);
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PRIVATE + ACC_STATIC, "removeAllThreadLocalAttributes", "()V", null, null);
            mv.visitCode();
            mv.visitFieldInsn(GETSTATIC, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "tlAttributes", "Ljava/lang/ThreadLocal;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/ThreadLocal", "get", "()Ljava/lang/Object;");
            mv.visitTypeInsn(CHECKCAST, "java/util/Map");
            mv.visitVarInsn(ASTORE, 0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "clear", "()V");
            mv.visitInsn(RETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "<init>", "(Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitInsn(ACONST_NULL);
            mv.visitMethodInsn(INVOKESPECIAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "<init>", "(Lcom/ibm/ws/webcontainer/srt/SRTConnectionContext;)V");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(PUTFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKESTATIC, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "removeAllThreadLocalAttributes", "()V");
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getPrivateAttribute", "(Ljava/lang/String;)Ljava/lang/Object;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getPrivateAttribute", "(Ljava/lang/String;)Ljava/lang/Object;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getPrivateAttributeNames", "()Ljava/util/Enumeration;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getPrivateAttributeNames", "()Ljava/util/Enumeration;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "setPrivateAttribute", "(Ljava/lang/String;Ljava/lang/Object;)V", null, null);
            mv.visitCode();
            Label l0 = new Label();
            Label l1 = new Label();
            Label l2 = new Label();
            mv.visitTryCatchBlock(l0, l1, l2, null);
            Label l3 = new Label();
            mv.visitTryCatchBlock(l2, l3, l2, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ASTORE, 3);
            mv.visitInsn(MONITORENTER);
            mv.visitLabel(l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "setPrivateAttribute", "(Ljava/lang/String;Ljava/lang/Object;)V");
            mv.visitVarInsn(ALOAD, 3);
            mv.visitInsn(MONITOREXIT);
            mv.visitLabel(l1);
            Label l4 = new Label();
            mv.visitJumpInsn(GOTO, l4);
            mv.visitLabel(l2);
            mv.visitVarInsn(ASTORE, 4);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitInsn(MONITOREXIT);
            mv.visitLabel(l3);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitInsn(ATHROW);
            mv.visitLabel(l4);
            mv.visitInsn(RETURN);
            mv.visitMaxs(3, 5);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "initForNextRequest", "(Lcom/ibm/wsspi/webcontainer/IRequest;)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "initForNextRequest", "(Lcom/ibm/wsspi/webcontainer/IRequest;)V");
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getAttribute", "(Ljava/lang/String;)Ljava/lang/Object;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKESTATIC, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "getThreadLocalAttribute", "(Ljava/lang/String;)Ljava/lang/Object;");
            mv.visitVarInsn(ASTORE, 2);
            mv.visitVarInsn(ALOAD, 2);
            Label l0 = new Label();
            mv.visitJumpInsn(IFNONNULL, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getAttribute", "(Ljava/lang/String;)Ljava/lang/Object;");
            mv.visitVarInsn(ASTORE, 2);
            mv.visitLabel(l0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(2, 3);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getAttributeNames", "()Ljava/util/Enumeration;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getAttributeNames", "()Ljava/util/Enumeration;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "setCharacterEncoding", "(Ljava/lang/String;)V", null, new String[] { "java/io/UnsupportedEncodingException" });
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "setCharacterEncoding", "(Ljava/lang/String;)V");
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getDateHeader", "(Ljava/lang/String;)J", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getDateHeader", "(Ljava/lang/String;)J");
            mv.visitInsn(LRETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getHeader", "(Ljava/lang/String;)Ljava/lang/String;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getHeader", "(Ljava/lang/String;)Ljava/lang/String;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getHeaderDirect", "(Ljava/lang/String;)Ljava/lang/String;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getHeaderDirect", "(Ljava/lang/String;)Ljava/lang/String;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getHeaderNames", "()Ljava/util/Enumeration;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getHeaderNames", "()Ljava/util/Enumeration;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getIntHeader", "(Ljava/lang/String;)I", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getIntHeader", "(Ljava/lang/String;)I");
            mv.visitInsn(IRETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getHeaders", "(Ljava/lang/String;)Ljava/util/Enumeration;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getHeaders", "(Ljava/lang/String;)Ljava/util/Enumeration;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getMethod", "()Ljava/lang/String;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getMethod", "()Ljava/lang/String;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getContentLength", "()I", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getContentLength", "()I");
            mv.visitInsn(IRETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getContentType", "()Ljava/lang/String;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getContentType", "()Ljava/lang/String;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getProtocol", "()Ljava/lang/String;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getProtocol", "()Ljava/lang/String;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getScheme", "()Ljava/lang/String;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getScheme", "()Ljava/lang/String;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getServerPort", "()I", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getServerPort", "()I");
            mv.visitInsn(IRETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getRemoteAddr", "()Ljava/lang/String;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getRemoteAddr", "()Ljava/lang/String;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getRemoteHost", "()Ljava/lang/String;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getRemoteHost", "()Ljava/lang/String;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "setAttribute", "(Ljava/lang/String;Ljava/lang/Object;)V", null, null);
            mv.visitCode();
            Label l0 = new Label();
            Label l1 = new Label();
            Label l2 = new Label();
            mv.visitTryCatchBlock(l0, l1, l2, null);
            Label l3 = new Label();
            mv.visitTryCatchBlock(l2, l3, l2, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKESTATIC, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "setThreadLocalAttribute", "(Ljava/lang/String;Ljava/lang/Object;)V");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ASTORE, 3);
            mv.visitInsn(MONITORENTER);
            mv.visitLabel(l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "setAttribute", "(Ljava/lang/String;Ljava/lang/Object;)V");
            mv.visitVarInsn(ALOAD, 3);
            mv.visitInsn(MONITOREXIT);
            mv.visitLabel(l1);
            Label l4 = new Label();
            mv.visitJumpInsn(GOTO, l4);
            mv.visitLabel(l2);
            mv.visitVarInsn(ASTORE, 4);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitInsn(MONITOREXIT);
            mv.visitLabel(l3);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitInsn(ATHROW);
            mv.visitLabel(l4);
            mv.visitInsn(RETURN);
            mv.visitMaxs(3, 5);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "removeAttribute", "(Ljava/lang/String;)V", null, null);
            mv.visitCode();
            Label l0 = new Label();
            Label l1 = new Label();
            Label l2 = new Label();
            mv.visitTryCatchBlock(l0, l1, l2, null);
            Label l3 = new Label();
            mv.visitTryCatchBlock(l2, l3, l2, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKESTATIC, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "removeThreadLocalAttribute", "(Ljava/lang/String;)V");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ASTORE, 2);
            mv.visitInsn(MONITORENTER);
            mv.visitLabel(l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "removeAttribute", "(Ljava/lang/String;)V");
            mv.visitVarInsn(ALOAD, 2);
            mv.visitInsn(MONITOREXIT);
            mv.visitLabel(l1);
            Label l4 = new Label();
            mv.visitJumpInsn(GOTO, l4);
            mv.visitLabel(l2);
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitInsn(MONITOREXIT);
            mv.visitLabel(l3);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitInsn(ATHROW);
            mv.visitLabel(l4);
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 4);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getLocale", "()Ljava/util/Locale;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getLocale", "()Ljava/util/Locale;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getLocales", "()Ljava/util/Enumeration;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getLocales", "()Ljava/util/Enumeration;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "isSecure", "()Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "isSecure", "()Z");
            mv.visitInsn(IRETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getCipherSuite", "()Ljava/lang/String;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getCipherSuite", "()Ljava/lang/String;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getPeerCertificates", "()[Ljava/security/cert/X509Certificate;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getPeerCertificates", "()[Ljava/security/cert/X509Certificate;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "setRequest", "(Lcom/ibm/wsspi/webcontainer/IRequest;)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "setRequest", "(Lcom/ibm/wsspi/webcontainer/IRequest;)V");
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "attributeAdded", "(Ljava/lang/String;Ljava/lang/Object;)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "attributeAdded", "(Ljava/lang/String;Ljava/lang/Object;)V");
            mv.visitInsn(RETURN);
            mv.visitMaxs(3, 3);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "attributeRemoved", "(Ljava/lang/String;Ljava/lang/Object;)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "attributeRemoved", "(Ljava/lang/String;Ljava/lang/Object;)V");
            mv.visitInsn(RETURN);
            mv.visitMaxs(3, 3);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "attributeReplaced", "(Ljava/lang/String;Ljava/lang/Object;)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "attributeReplaced", "(Ljava/lang/String;Ljava/lang/Object;)V");
            mv.visitInsn(RETURN);
            mv.visitMaxs(3, 3);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getInputStream", "()Ljavax/servlet/ServletInputStream;", null, new String[] { "java/io/IOException" });
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getInputStream", "()Ljavax/servlet/ServletInputStream;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getIRequest", "()Lcom/ibm/wsspi/webcontainer/IRequest;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getIRequest", "()Lcom/ibm/wsspi/webcontainer/IRequest;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC + ACC_SYNCHRONIZED, "getReader", "()Ljava/io/BufferedReader;", null, new String[] { "java/io/UnsupportedEncodingException", "java/io/IOException" });
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getReader", "()Ljava/io/BufferedReader;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getWebAppDispatcherContext", "()Lcom/ibm/ws/webcontainer/webapp/WebAppDispatcherContext;", null, null);
            mv.visitCode();
            mv.visitFieldInsn(GETSTATIC, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "WEBAPP_DISP_CONTEXT_KEY", "Ljava/lang/String;");
            mv.visitMethodInsn(INVOKESTATIC, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "getThreadLocalAttribute", "(Ljava/lang/String;)Ljava/lang/Object;");
            mv.visitTypeInsn(CHECKCAST, "com/ibm/ws/webcontainer/webapp/WebAppDispatcherContext");
            mv.visitVarInsn(ASTORE, 1);
            mv.visitVarInsn(ALOAD, 1);
            Label l0 = new Label();
            mv.visitJumpInsn(IFNONNULL, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getWebAppDispatcherContext", "()Lcom/ibm/ws/webcontainer/webapp/WebAppDispatcherContext;");
            mv.visitVarInsn(ASTORE, 1);
            mv.visitLabel(l0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 2);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "setWebAppDispatcherContext", "(Lcom/ibm/ws/webcontainer/webapp/WebAppDispatcherContext;)V", null, null);
            mv.visitCode();
            mv.visitFieldInsn(GETSTATIC, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "WEBAPP_DISP_CONTEXT_KEY", "Ljava/lang/String;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKESTATIC, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "setThreadLocalAttribute", "(Ljava/lang/String;Ljava/lang/Object;)V");
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "resetPathElements", "()V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "resetPathElements", "()V");
            mv.visitInsn(RETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getLocalAddr", "()Ljava/lang/String;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getLocalAddr", "()Ljava/lang/String;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getLocalName", "()Ljava/lang/String;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getLocalName", "()Ljava/lang/String;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getLocalPort", "()I", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getLocalPort", "()I");
            mv.visitInsn(IRETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getRemotePort", "()I", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getRemotePort", "()I");
            mv.visitInsn(IRETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getResponse", "()Lcom/ibm/ws/webcontainer/core/Response;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getResponse", "()Lcom/ibm/ws/webcontainer/core/Response;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "start", "()V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "start", "()V");
            mv.visitInsn(RETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "clone", "()Ljava/lang/Object;", null, new String[] { "java/lang/CloneNotSupportedException" });
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "clone", "()Ljava/lang/Object;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getAuthType", "()Ljava/lang/String;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getAuthType", "()Ljava/lang/String;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getCharacterEncoding", "()Ljava/lang/String;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getCharacterEncoding", "()Ljava/lang/String;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getReaderEncoding", "()Ljava/lang/String;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getReaderEncoding", "()Ljava/lang/String;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getCookies", "()[Ljavax/servlet/http/Cookie;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getCookies", "()[Ljavax/servlet/http/Cookie;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "addParameter", "(Ljava/lang/String;[Ljava/lang/String;)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "addParameter", "(Ljava/lang/String;[Ljava/lang/String;)V");
            mv.visitInsn(RETURN);
            mv.visitMaxs(3, 3);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "setMethod", "(Ljava/lang/String;)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "setMethod", "(Ljava/lang/String;)V");
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "setRawParameters", "(Ljava/util/Hashtable;)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "setRawParameters", "(Ljava/util/Hashtable;)V");
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getRawParameters", "()Ljava/util/Hashtable;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getRawParameters", "()Ljava/util/Hashtable;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getParameter", "(Ljava/lang/String;)Ljava/lang/String;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getParameter", "(Ljava/lang/String;)Ljava/lang/String;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getParameterNames", "()Ljava/util/Enumeration;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getParameterNames", "()Ljava/util/Enumeration;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getParameterValues", "(Ljava/lang/String;)[Ljava/lang/String;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getParameterValues", "(Ljava/lang/String;)[Ljava/lang/String;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getPathInfo", "()Ljava/lang/String;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getPathInfo", "()Ljava/lang/String;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getServletPath", "()Ljava/lang/String;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getServletPath", "()Ljava/lang/String;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getPathTranslated", "()Ljava/lang/String;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getPathTranslated", "()Ljava/lang/String;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getQueryString", "()Ljava/lang/String;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getQueryString", "()Ljava/lang/String;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "setQueryString", "(Ljava/lang/String;)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "setQueryString", "(Ljava/lang/String;)V");
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getRealPath", "(Ljava/lang/String;)Ljava/lang/String;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getRealPath", "(Ljava/lang/String;)Ljava/lang/String;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getRemoteUser", "()Ljava/lang/String;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getRemoteUser", "()Ljava/lang/String;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getRequestedSessionId", "()Ljava/lang/String;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getRequestedSessionId", "()Ljava/lang/String;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getRequestURI", "()Ljava/lang/String;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getRequestURI", "()Ljava/lang/String;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getServerName", "()Ljava/lang/String;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getServerName", "()Ljava/lang/String;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getSession", "()Ljavax/servlet/http/HttpSession;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getSession", "()Ljavax/servlet/http/HttpSession;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getSession", "(Z)Ljavax/servlet/http/HttpSession;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitVarInsn(ILOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getSession", "(Z)Ljavax/servlet/http/HttpSession;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "isRequestedSessionIdFromCookie", "()Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "isRequestedSessionIdFromCookie", "()Z");
            mv.visitInsn(IRETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "isRequestedSessionIdFromUrl", "()Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "isRequestedSessionIdFromUrl", "()Z");
            mv.visitInsn(IRETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "isRequestedSessionIdFromURL", "()Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "isRequestedSessionIdFromURL", "()Z");
            mv.visitInsn(IRETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "isRequestedSessionIdValid", "()Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "isRequestedSessionIdValid", "()Z");
            mv.visitInsn(IRETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC + ACC_SYNCHRONIZED, "parseParameters", "()V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "parseParameters", "()V");
            mv.visitInsn(RETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "finish", "()V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "finish", "()V");
            mv.visitInsn(RETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getRequestDispatcher", "(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getRequestDispatcher", "(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getContextPath", "()Ljava/lang/String;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getContextPath", "()Ljava/lang/String;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "isUserInRole", "(Ljava/lang/String;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "isUserInRole", "(Ljava/lang/String;)Z");
            mv.visitInsn(IRETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getUserPrincipal", "()Ljava/security/Principal;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getUserPrincipal", "()Ljava/security/Principal;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "pushParameterStack", "()V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "pushParameterStack", "()V");
            mv.visitInsn(RETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "popParameterStack", "()V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "popParameterStack", "()V");
            mv.visitInsn(RETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "removeQSFromList", "()V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "removeQSFromList", "()V");
            mv.visitInsn(RETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "aggregateQueryStringParams", "(Ljava/lang/String;Z)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "aggregateQueryStringParams", "(Ljava/lang/String;Z)V");
            mv.visitInsn(RETURN);
            mv.visitMaxs(3, 3);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getParameterMap", "()Ljava/util/Map;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getParameterMap", "()Ljava/util/Map;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getRequestURL", "()Ljava/lang/StringBuffer;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getRequestURL", "()Ljava/lang/StringBuffer;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getSSLId", "()[B", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getSSLId", "()[B");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getCookieValueAsBytes", "(Ljava/lang/String;)[B", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getCookieValueAsBytes", "(Ljava/lang/String;)[B");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getAllCookieValues", "(Ljava/lang/String;)Ljava/util/List;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getAllCookieValues", "(Ljava/lang/String;)Ljava/util/List;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getUpdatedSessionId", "()Ljava/lang/String;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getUpdatedSessionId", "()Ljava/lang/String;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "setSessionId", "(Ljava/lang/String;)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "setSessionId", "(Ljava/lang/String;)V");
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getEncodedRequestURI", "()Ljava/lang/String;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getEncodedRequestURI", "()Ljava/lang/String;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getRequestContext", "()Lcom/ibm/ws/webcontainer/srt/SRTRequestContext;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getRequestContext", "()Lcom/ibm/ws/webcontainer/srt/SRTRequestContext;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getRunningCollaborators", "()Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "getRunningCollaborators", "()Z");
            mv.visitInsn(IRETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "setRunningCollaborators", "(Z)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitVarInsn(ILOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "setRunningCollaborators", "(Z)V");
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PUBLIC, "destroy", "()V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "srtServletRequest", "Lcom/ibm/ws/webcontainer/srt/SRTServletRequest;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/ibm/ws/webcontainer/srt/SRTServletRequest", "destroy", "()V");
            mv.visitInsn(RETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_STATIC + ACC_SYNTHETIC, "class$", "(Ljava/lang/String;)Ljava/lang/Class;", null, null);
            mv.visitCode();
            Label l0 = new Label();
            Label l1 = new Label();
            Label l2 = new Label();
            mv.visitTryCatchBlock(l0, l1, l2, "java/lang/ClassNotFoundException");
            mv.visitLabel(l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Class", "forName", "(Ljava/lang/String;)Ljava/lang/Class;");
            mv.visitLabel(l1);
            mv.visitInsn(ARETURN);
            mv.visitLabel(l2);
            mv.visitVarInsn(ASTORE, 1);
            mv.visitTypeInsn(NEW, "java/lang/NoClassDefFoundError");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/ClassNotFoundException", "getMessage", "()Ljava/lang/String;");
            mv.visitMethodInsn(INVOKESPECIAL, "java/lang/NoClassDefFoundError", "<init>", "(Ljava/lang/String;)V");
            mv.visitInsn(ATHROW);
            mv.visitMaxs(3, 2);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_STATIC, "<clinit>", "()V", null, null);
            mv.visitCode();
            mv.visitTypeInsn(NEW, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest$1");
            mv.visitInsn(DUP);
            mv.visitMethodInsn(INVOKESPECIAL, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest$1", "<init>", "()V");
            mv.visitFieldInsn(PUTSTATIC, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "tlAttributes", "Ljava/lang/ThreadLocal;");
            mv.visitTypeInsn(NEW, "java/lang/StringBuffer");
            mv.visitInsn(DUP);
            mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuffer", "<init>", "()V");
            mv.visitFieldInsn(GETSTATIC, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "class$org$apache$jetspeed$container$AdjustedSRTServletRequest", "Ljava/lang/Class;");
            Label l0 = new Label();
            mv.visitJumpInsn(IFNONNULL, l0);
            mv.visitLdcInsn("org.apache.jetspeed.container.invoker.AdjustedSRTServletRequest");
            mv.visitMethodInsn(INVOKESTATIC, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "class$", "(Ljava/lang/String;)Ljava/lang/Class;");
            mv.visitInsn(DUP);
            mv.visitFieldInsn(PUTSTATIC, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "class$org$apache$jetspeed$container$AdjustedSRTServletRequest", "Ljava/lang/Class;");
            Label l1 = new Label();
            mv.visitJumpInsn(GOTO, l1);
            mv.visitLabel(l0);
            mv.visitFieldInsn(GETSTATIC, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "class$org$apache$jetspeed$container$AdjustedSRTServletRequest", "Ljava/lang/Class;");
            mv.visitLabel(l1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getName", "()Ljava/lang/String;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuffer", "append", "(Ljava/lang/String;)Ljava/lang/StringBuffer;");
            mv.visitLdcInsn(".webAppDispatcherContext");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuffer", "append", "(Ljava/lang/String;)Ljava/lang/StringBuffer;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuffer", "toString", "()Ljava/lang/String;");
            mv.visitFieldInsn(PUTSTATIC, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest", "WEBAPP_DISP_CONTEXT_KEY", "Ljava/lang/String;");
            mv.visitInsn(RETURN);
            mv.visitMaxs(3, 0);
            mv.visitEnd();
        }
        
        cw.visitEnd();

        return cw.toByteArray();
    }
    
    public static byte[] dumpInner1 () throws Exception 
    {
        ClassWriter cw = new ClassWriter(false);
        FieldVisitor fv;
        MethodVisitor mv;
        AnnotationVisitor av0;

        cw.visit(V1_2, ACC_SUPER, "org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest$1", null, "java/lang/ThreadLocal", null);

        cw.visitSource("AdjustedSRTServletRequest.java", null);

        cw.visitInnerClass("org/apache/jetspeed/container/invoker/AdjustedSRTServletRequest$1", null, null, ACC_STATIC);

        {
            mv = cw.visitMethod(0, "<init>", "()V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKESPECIAL, "java/lang/ThreadLocal", "<init>", "()V");
            mv.visitInsn(RETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        
        {
            mv = cw.visitMethod(ACC_PROTECTED + ACC_SYNCHRONIZED, "initialValue", "()Ljava/lang/Object;", null, null);
            mv.visitCode();
            mv.visitTypeInsn(NEW, "java/util/HashMap");
            mv.visitInsn(DUP);
            mv.visitMethodInsn(INVOKESPECIAL, "java/util/HashMap", "<init>", "()V");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(2, 1);
            mv.visitEnd();
        }
        
        cw.visitEnd();

        return cw.toByteArray();
    }

}
