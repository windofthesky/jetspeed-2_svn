<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>
   <!-- 
       Simply use the JNDI data source provided via Spring
     -->           
     <bean id="JetspeedDS" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="resourceRef"><value>false</value></property> 
        <property name="jndiName">
            <value>java:comp/env/jdbc/jetspeed</value>
        </property>
    </bean>
    		
    <bean id="ojbConfigurer" class="org.springmodules.orm.ojb.support.LocalOjbConfigurer"/> 

    <!-- 
         Dynamically configures Database Platform for OJB by looking at the connection string
         and figuring out the OJB platform using an OJB metadata utility
         Its important to get this right otherwise you will be sending the wrong (most likely HSQL)
         flavor of SQL statements to the backend database.
     -->
     <bean id="PlatformConfigurator" 
           class="org.apache.jetspeed.components.rdbms.ojb.DatabasePlatformConfigurator"
           init-method="init"
      >
    	<constructor-arg index='0'>
    		<ref bean="JetspeedDS"/>
    	</constructor-arg>         
        <!-- JNDI Name -->
    	<constructor-arg index='1'>
    		<value>JetspeedDS</value>
    	</constructor-arg>                  
     </bean>
            
  <!--       
      Creates a JNDI-based datasource bean name "JetspeedDS". The information
      provided here is merged with the basic configuration for the 
      jdbc-connection-descriptor with the matching jcd-alias property
      ("JetspeedDS") located under /etc/db-ojb/repository_database.xml in the
      source tree.

      Another requirement for this to work is to have the 
      ConnectionFactoryClass=org.apache.ojb.broker.accesslayer.ConnectionFactoryManagedImpl
      or to have
      ConnectionManagerClass=org.apache.jetspeed.components.rdbms.ojb.ConnectionManagerImpl.
      (either will do, both are recommended, see comments in configuration file).
      These properties are located in /etc/db-ojb/OJB.properties in the source tree.
          
      FYI: The two OJB configuration files mentioned above are currently already setup this way 
      in the default Jetspeed implementation.  
          
      However, if you need to locate/modify these files in a running instance of jetspeed,
      they will be located under /WEB-INF/classes.
     -->
    <!--
  <bean id="JetspeedDS" class="org.apache.jetspeed.components.rdbms.ojb.ConnectionRepositoryEntry">
    <property name="jndiName">
      <value>java:comp/env/jdbc/jetspeed</value>
    </property>
  </bean>     
       -->
  
  <!-- If would like use a commons DBCP Pooled datasource as opposed to the default 
       JNDI one above you can uncomment the configuration below and fill in 
       the datasource information as it relates to your environment.

       A requirement for this to work is to have the 
       ConnectionFactoryClass=org.apache.ojb.broker.accesslayer.ConnectionFactoryDBCPImpl
       or to have
       ConnectionManagerClass=org.apache.jetspeed.components.rdbms.ojb.ConnectionManagerImpl
       This property is located in /etc/db-ojb/OJB.properties in the source tree.
    -->    
    
<!--        
    <bean id="JetspeedDS" class="org.apache.commons.dbcp.BasicDataSource" 
        destroy-method="close"
        >
                <property name="driverClassName"><value>com.mysql.jdbc.Driver</value></property>
                <property name="url"><value>jdbc:mysql://localhost/j2test</value></property>
                <property name="username"><value>j2</value></property>
                <property name="password"><value>XXX</value></property>
        </bean>    
    -->
</beans>
