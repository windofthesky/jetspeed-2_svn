<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at
  
  http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  
  $Id$
-->
<project name="JetspeedDatabaseSetup" default="setupDB" basedir=".">

    <property file="${basedir}/database.properties" />
    <property file="build.properties" />

    <condition property="_db.username" value="">
        <equals arg1="${db.type}" arg2="derby" />
    </condition>
    <property name="_db.username" value="${db.username}" />
    <condition property="_db.password" value="">
        <equals arg1="${db.type}" arg2="derby" />
    </condition>
    <property name="_db.password" value="${db.password}" />
    <condition property="_jdbc.url" value="jdbc:derby:${basedir}/derby/productiondb;create=true">
        <equals arg1="${db.type}" arg2="derby" />
    </condition>
    <property name="_jdbc.url" value="${jdbc.url}" />
    <condition property="_jdbc.driver.class" value="org.apache.derby.jdbc.EmbeddedDriver">
        <equals arg1="${db.type}" arg2="derby" />
    </condition>
    <property name="_jdbc.driver.class" value="${jdbc.driver.class}" />

    <property name="_source.db.username" value="${source.db.username}" />
    <property name="_source.db.password" value="${source.db.password}" />
    <property name="_source.jdbc.url" value="${source.jdbc.url}" />
    <property name="_source.jdbc.driver.class" value="${source.jdbc.driver.class}" />

    <property name="jetspeedWebInfDir" value="${basedir}/../webapps/${portalName}/WEB-INF" />
    <property name="org.apache.portals.logdir" value="${basedir}/../logs" />

    <path id="installationClasspath">
        <fileset dir="${basedir}/lib">
            <include name="**/*.jar" />
        </fileset>
        <pathelement location="${basedir}/lib" />
        <fileset dir="${basedir}/../lib">
            <include name="**/*.jar" />
        </fileset>
        <fileset dir="${jetspeedWebInfDir}/lib">
            <include name="**/*.jar" />
        </fileset>
        <pathelement location="${basedir}/../lib" />
        <pathelement location="${jetspeedWebInfDir}/classes" />
    </path>

    <property name="org.apache.jetspeed.database.user" value="${_db.username}"/>
    <property name="org.apache.jetspeed.database.password" value="${_db.password}"/>
    <property name="org.apache.jetspeed.database.url" value="${_jdbc.url}"/>
    <property name="org.apache.jetspeed.database.driver" value="${_jdbc.driver.class}"/>
    <property name="org.apache.portals.logdir" value="${org.apache.portals.logdir}"/>
    <propertyset id="installationProps">
        <propertyref name="org.apache.jetspeed.database.user"/>
        <propertyref name="org.apache.jetspeed.database.password"/>
        <propertyref name="org.apache.jetspeed.database.url"/>
        <propertyref name="org.apache.jetspeed.database.driver"/>
        <propertyref name="org.apache.portals.logdir"/>
    </propertyset>

    <target name="setupDB">

        <echo>Setting up the Jetspeed database for ${db.type}</echo>
        <echo>All existing Jetspeed data is going to be deleted from the database.</echo>
        <echo>
        </echo>
        <echo>Selected database configuration:</echo>
        <echo>
        </echo>
        <echo>database type: ${db.type}</echo>
        <echo>username: ${_db.username}</echo>
        <echo>jdbc url: ${_jdbc.url}</echo>
        <echo>
        </echo>
        <echo>Make sure that the appropriate jdbc driver jar for the ${db.type} database is placed in the Tomcat shared/lib folder.</echo>
        <echo>For using the Derby database, the correct driver jar is available in the lib folder.</echo>
        <echo>
        </echo>
        <echo>Also make sure Tomcat is not running before continuing.</echo>
        <echo>
        </echo>
        <input validargs="y,n" defaultvalue="n" addproperty="do.continue">Are you sure to continue?</input>
        <condition property="failSetup">
            <equals arg1="n" arg2="${do.continue}" />
        </condition>

        <antcall target="checkInput" />

    </target>

    <target name="runSetupDB" depends="checkDerby,checkImportPsml,generateStandardDB,generateDerbyDB,copyJetspeedContext,filterSpringFilterKey,seedDB,dbPsml" />

    <target name="runSetupNoDB" depends="checkImportPsml,copyJetspeedContext,filterSpringFilterKey" />

    <target name="initDB" depends="checkDerby" unless="_derby">

        <echo>Initialize Jetspeed database</echo>

        <antcall target="generateStandardDB" />

        <echo>Initialize Jetspeed database complete!</echo>

    </target>

    <target name="exportDB" depends="checkDerby" unless="_derby" if="exportDataDir">

        <echo>Export Jetspeed database to ${exportDataDir}/j2-data.xml</echo>
        <mkdir dir="${exportDataDir}"/>
        <java classname="org.apache.jetspeed.tools.db.serializer.JetspeedSerializerApplicationImpl" fork="yes" maxmemory="${jvmMaxMemory}" failonerror="yes">
            <classpath refid="installationClasspath"/>
            <syspropertyset refid="installationProps"/>
            <arg line="-E &quot;${exportDataDir}/j2-data.xml&quot; 
              -a &quot;${basedir}/../webapps/${portalName}&quot;
              -c &quot;serializer&quot;
              -p &quot;${jetspeedWebInfDir}/conf/spring-filter.properties&quot;" />
        </java>

        <echo>Export Jetspeed database pages to ${exportDataDir}/pages directory</echo>
        <mkdir dir="${exportDataDir}/pages"/>
        <java classname="org.apache.jetspeed.tools.page.serializer.JetspeedPageSerializerApplicationImpl" fork="yes" maxmemory="${jvmMaxMemory}" failonerror="yes">
            <classpath refid="installationClasspath"/>
            <syspropertyset refid="installationProps"/>
            <arg line="-E &quot;/&quot;
              -a &quot;${basedir}/../webapps/${portalName}&quot;
              -c &quot;pageSerializer&quot;
              -p &quot;${jetspeedWebInfDir}/conf/spring-filter.properties&quot;
              -psml &quot;${exportDataDir}/pages&quot;" />
        </java>
        <condition property="_exportedPages">
            <or>
                <available file="${exportDataDir}/pages/folder.metadata" type="file"/>
                <available file="${exportDataDir}/pages/page.security" type="file"/>
                <available file="${exportDataDir}/pages/_user" type="dir"/>
                <available file="${exportDataDir}/pages/__subsite-root" type="dir"/>
                <available file="${exportDataDir}/pages/system" type="dir"/>
                <available file="${exportDataDir}/pages/Administrative" type="dir"/>
            </or>
        </condition>
        <antcall target="cleanupExportedPages"/>
        <echo>Export Jetspeed database complete!</echo>

    </target>

    <target name="cleanupExportedPages" unless="_exportedPages">
        <delete dir="${exportDataDir}/pages"/>
    </target>

    <target name="importDB" depends="checkDerby" unless="_derby" if="importDataDir">

        <available file="${importDataDir}/j2-data.xml" type="file" property="_importData"/>
        <antcall target="importData"/>
        <available file="${importDataDir}/j2-prefs-data.xml" type="file" property="_importPrefs"/>
        <antcall target="importPrefs"/>
        <available file="${importDataDir}/pages" type="dir" property="_importPages"/>
        <antcall target="importPages"/>
        <echo>Import Jetspeed database complete!</echo>

    </target>

    <target name="importData" if="_importData">

        <echo>Import Jetspeed database from ${importDataDir}/j2-data.xml</echo>

        <java classname="org.apache.jetspeed.tools.db.serializer.JetspeedSerializerApplicationImpl" fork="yes" maxmemory="${jvmMaxMemory}" failonerror="yes">
            <classpath refid="installationClasspath"/>
            <syspropertyset refid="installationProps"/>
            <arg line="-I &quot;${importDataDir}/j2-data.xml&quot; 
              -a &quot;${basedir}/../webapps/${portalName}&quot;
              -c &quot;serializer&quot;
              -p &quot;${jetspeedWebInfDir}/conf/spring-filter.properties&quot;" />
        </java>
    </target>

    <target name="importPrefs" if="_importPrefs">

        <echo>Import Jetspeed database from ${importDataDir}/j2-prefs-data.xml</echo>
        <java classname="org.apache.jetspeed.tools.db.serializer.JetspeedSerializerApplicationImpl" fork="yes" maxmemory="${jvmMaxMemory}" failonerror="yes">
            <classpath refid="installationClasspath"/>
            <syspropertyset refid="installationProps"/>
            <arg line="-I &quot;${importDataDir}/j2-prefs-data.xml&quot; 
              -a &quot;${basedir}/../webapps/${portalName}&quot;
              -c &quot;serializer&quot;
              -p &quot;${jetspeedWebInfDir}/conf/spring-filter.properties&quot;" />
        </java>

    </target>

    <target name="importPages" if="_importPages">

        <echo>Import Jetspeed database pages from ${importDataDir}/pages directory</echo>
        <java classname="org.apache.jetspeed.tools.page.serializer.JetspeedPageSerializerApplicationImpl" fork="yes" maxmemory="${jvmMaxMemory}" failonerror="yes">
            <classpath refid="installationClasspath"/>
            <syspropertyset refid="installationProps"/>
            <arg line="-I &quot;/&quot;
              -a &quot;${basedir}/../webapps/${portalName}&quot;
              -c &quot;pageSerializer&quot;
              -p &quot;${jetspeedWebInfDir}/conf/spring-filter.properties&quot;
              -psml &quot;${importDataDir}/pages&quot;" />
        </java>

    </target>

    <!-- <target name="migrateDB" depends="checkSourceOrTargetDerby" unless="_derby" > -->
    <target name="migrateDB"  >

        <echo>Migrate Jetspeed database from ${_source.jdbc.url} to ${_jdbc.url}</echo>
        <java classname="org.apache.jetspeed.tools.migration.JetspeedMigrationApplication" fork="yes" maxmemory="${jvmMaxMemory}" failonerror="yes">
            <classpath refid="installationClasspath"/>
            <syspropertyset refid="installationProps"/>
            <arg line="-source-db-username=&quot;${_source.db.username}&quot;
                       -source-db-password=&quot;${_source.db.password}&quot;
                       -source-jdbc-url=&quot;${_source.jdbc.url}&quot;
                       -source-jdbc-driver-class=&quot;${_source.jdbc.driver.class}&quot;
                       -db-username=&quot;${_db.username}&quot;
                       -db-password=&quot;${_db.password}&quot;
                       -jdbc-url=&quot;${_jdbc.url}&quot;
                       -jdbc-driver-class=&quot;${_jdbc.driver.class}&quot;
                       -drop-schema-sql=&quot;${basedir}/${db.type}/drop-schema.sql&quot;
                       -create-schema-sql=&quot;${basedir}/${db.type}/create-schema.sql&quot;"/>
        </java>
        <echo>Jetspeed database migration complete!</echo>

    </target>

    <target name="checkInput" unless="failSetup">
        <antcall target="runSetupDB" />
    </target>

    <target name="checkDerby">
        <condition property="_derby">
            <equals arg1="${db.type}" arg2="derby" />
        </condition>
    </target>

    <target name="checkSourceOrTargetDerby">
        <condition property="_derby">
            <or>
                <equals arg1="${db.type}" arg2="derby" />
                <equals arg1="${source.db.type}" arg2="derby" />
            </or>
        </condition>
    </target>

    <target name="checkImportPsml">
        <condition property="_doImportPsml">
            <equals arg1="${dbImportPsml}" arg2="true" />
        </condition>
    </target>

    <target name="generateDerbyDB" if="_derby">
        <delete dir="${basedir}/derby/productiondb" quiet="true" />
        <echo>Executing file ${basedir}/derby/create-schema.sql</echo>

        <java classname="org.apache.jetspeed.anttasks.ExecuteJavaSQL" fork="yes" failonerror="yes">
            <classpath refid="installationClasspath"/>
            <arg line="driver=&quot;${_jdbc.driver.class}&quot; 
              url=&quot;${_jdbc.url}&quot;
              userid=&quot;${_db.username}&quot; 
              password=&quot;{_db.password}&quot;
              src=&quot;${basedir}/derby/create-schema.sql&quot; autocommit=true
              onerror=abort" />
        </java>
    </target>

    <target name="generateStandardDB" unless="_derby">

        <echo>Cleaning up possible existing database</echo>
        <sql driver="${_jdbc.driver.class}" url="${_jdbc.url}" userid="${_db.username}" password="${_db.password}" src="${basedir}/${db.type}/drop-schema.sql" autocommit="true" onerror="continue" print="no" output="setup.log">
            <classpath>
                <fileset dir="${basedir}/../lib">
                    <include name="**/*.jar" />
                </fileset>
            </classpath>
        </sql>

        <echo>Starting database generation</echo>
        <sql driver="${_jdbc.driver.class}" url="${_jdbc.url}" userid="${_db.username}" password="${_db.password}" src="${basedir}/${db.type}/create-schema.sql">
            <classpath>
                <fileset dir="${basedir}/../lib">
                    <include name="**/*.jar" />
                </fileset>
            </classpath>
        </sql>
        <echo>Database generation done!</echo>

    </target>

    <target name="copyJetspeedContext">
        <copy file="resources/${portalName}.xml" tofile="${basedir}/../conf/Catalina/localhost/${portalName}.xml" overwrite="true">

            <!-- note that the $ is escaped here -->
            <filterset begintoken="$${" endtoken="}">
                <filter token="org.apache.jetspeed.production.database.user" value="${_db.username}" />
                <filter token="org.apache.jetspeed.production.database.password" value="${_db.password}" />
                <filter token="org.apache.jetspeed.production.database.driver" value="${_jdbc.driver.class}" />
                <filter token="org.apache.jetspeed.production.database.url" value="${_jdbc.url}" />
            </filterset>
        </copy>
    </target>

    <target name="filterSpringFilterKey">
        <delete quiet="true" file="${jetspeedWebInfDir}/conf/spring-filter-key.properties" />

        <!-- Ant's if/else simulation, _doImportPsml has been set before -->
        <antcall target="filterSpringFilterKey_db"/>
        <antcall target="filterSpringFilterKey_file"/>
    </target>

    <target name="filterSpringFilterKey_db" if="_doImportPsml">
        <copy file="resources/spring-filter-key.properties" todir="${jetspeedWebInfDir}/conf/">
            <!-- note that the $ is escaped here -->
            <filterset begintoken="$${" endtoken="}">
                <filter token="org.apache.jetspeed.spring.filter.key" value="portal.dbPageManager" />
            </filterset>
        </copy>
    </target>

    <target name="filterSpringFilterKey_file" unless="_doImportPsml">
        <copy file="resources/spring-filter-key.properties" todir="${jetspeedWebInfDir}/conf/">
            <!-- note that the $ is escaped here -->
            <filterset begintoken="$${" endtoken="}">
                <filter token="org.apache.jetspeed.spring.filter.key" value="portal" />
            </filterset>
        </copy>
    </target>

    <target name="seedDB">

        <echo>Seeding the database</echo>
        <condition property="_seedDataFile" value="j2-ui-seed.xml">
          <and>
            <equals arg1="${installation.type}" arg2="demo" />
            <equals arg1="${installation.ui}" arg2="jetui" />
          </and>
        </condition>
        <condition property="_seedDataFile" value="j2-seed.xml">
          <and>
            <equals arg1="${installation.type}" arg2="demo" />
            <equals arg1="${installation.ui}" arg2="classic" />
          </and>
        </condition>
        <condition property="_seedDataFile" value="min/j2-ui-seed.xml">
          <and>
            <equals arg1="${installation.type}" arg2="minimal" />
            <equals arg1="${installation.ui}" arg2="jetui" />
          </and>
        </condition>
        <condition property="_seedDataFile" value="min/j2-seed.xml">
          <and>
            <equals arg1="${installation.type}" arg2="minimal" />
            <equals arg1="${installation.ui}" arg2="classic" />
          </and>
        </condition>
        <echo>Importing: ${_seedDataFile}</echo>
        <java classname="org.apache.jetspeed.tools.db.serializer.JetspeedSerializerApplicationImpl" fork="yes" failonerror="yes">
            <classpath refid="installationClasspath"/>
            <syspropertyset refid="installationProps"/>
            <arg line="-I &quot;${basedir}/resources/seed/${_seedDataFile}&quot; 
              -a &quot;${basedir}/../webapps/${portalName}&quot;
              -c &quot;serializer&quot;
              -p &quot;${jetspeedWebInfDir}/conf/spring-filter.properties&quot;" />
        </java>

    </target>

    <target name="dbPsml" if="_doImportPsml">

        <echo>Importing psml into the database</echo>
        <java classname="org.apache.jetspeed.tools.page.serializer.JetspeedPageSerializerApplicationImpl" fork="yes" failonerror="yes">
            <classpath refid="installationClasspath"/>
            <syspropertyset refid="installationProps"/>
            <arg line="-I &quot;/&quot;
              -a &quot;${basedir}/../webapps/${portalName}&quot;
              -c &quot;pageSerializer&quot;
              -p &quot;${jetspeedWebInfDir}/conf/spring-filter.properties&quot;" />
        </java>

    </target>

</project>
