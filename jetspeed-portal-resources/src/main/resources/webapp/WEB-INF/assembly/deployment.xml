<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<beans>

  <!-- Application Server Manager for Tomcat. Comment out for others like JBoss
  	   Provides hooks into the application server to help us deploy portlet applications
  	   as web application into that server.  This manager is for Tomcat 5
  	-->

  <bean id="org.apache.jetspeed.tools.pamanager.servletcontainer.ApplicationServerManager" 
  	   class="org.apache.jetspeed.tools.pamanager.servletcontainer.TomcatManager" 
  	   init-method="start" destroy-method="stop"
  >  	   
       <constructor-arg index="0"><value>${autodeployment.catalina.base}</value></constructor-arg>
       <constructor-arg index="1"><value>${autodeployment.catalina.engine}</value></constructor-arg>
  	   <constructor-arg index="2"><value>${autodeployment.server}</value></constructor-arg>
  	   <constructor-arg index="3"><value>${autodeployment.port}</value></constructor-arg>
  	   <constructor-arg index="4"><value>${autodeployment.user}</value></constructor-arg>
  	   <constructor-arg index="5"><value>${autodeployment.password}</value></constructor-arg>
  </bean>
 
  <bean id="deployFactory" class="org.apache.jetspeed.tools.deploy.JetspeedDeployFactory"/>
  <bean id="PAM" 
  	   class="org.apache.jetspeed.tools.pamanager.PortletApplicationManager" init-method="start" destroy-method="stop"
  >  	   
  	   <constructor-arg><ref bean="portletFactory"/></constructor-arg>
  	   <constructor-arg><ref bean="org.apache.jetspeed.components.portletregistry.PortletRegistry"/></constructor-arg>
  	   <constructor-arg><ref bean="org.apache.jetspeed.components.portletentity.PortletEntityAccessComponent"/></constructor-arg>
  	   <constructor-arg><ref bean="org.apache.jetspeed.container.window.PortletWindowAccessor"/></constructor-arg>
  	   <constructor-arg><ref bean="org.apache.jetspeed.security.PermissionManager"/></constructor-arg>       
  	   <constructor-arg><ref bean="org.apache.jetspeed.search.SearchEngine"/></constructor-arg>              
  	   <constructor-arg><ref bean="org.apache.jetspeed.security.RoleManager"/></constructor-arg>                     
       <!-- role principals to assign a default permission(s) during deployment of a Portlet Application -->
       <constructor-arg >
         <list>
            <value>user</value>
         </list>
       </constructor-arg>
  	   <constructor-arg><ref bean="org.apache.jetspeed.cluster.NodeManager"/></constructor-arg>                     

       <!--  application root -->
        <constructor-arg>
            <value>${applicationRoot}</value>
        </constructor-arg>


   <!-- optional configuration for automatic creation of not yet existing roles as defined in the deployed web.xml:
       <property name="autoCreateRoles"><value>true</value></property>
   -->      
   <!-- optional descriptor change monitor check interval in seconds (0: disabled, default: 10):
       <property name="descriptorChangeMonitorInterval"><value>10</value></property>
   -->
   <!-- optional max PA start retries in case of an error registering ths PA (0: do not retry, default: 10):
   		this was introduced because of DB constraint validation errors in clustered environments
   		see https://issues.apache.org/jira/browse/JS2-666
       <property name="maxRetriedStarts"><value>10</value></property>
   -->
   
   		
  </bean>

  <!-- Portlet Application and Decorator deployment event listeners -->
  <bean id="portletAppDeploymentListener" 
  	   class="org.apache.jetspeed.deployment.impl.DeployPortletAppEventListener"   	   
  > 	
  	   <constructor-arg index="0"><ref bean="PAM"/></constructor-arg>
  	   <constructor-arg index="1"><ref bean="org.apache.jetspeed.components.portletregistry.PortletRegistry"/></constructor-arg>
       <constructor-arg index="2"><value>${autodeployment.target.dir}</value></constructor-arg>
       <constructor-arg index="3"><value>${applicationRoot}/WEB-INF/apps</value></constructor-arg>
       <constructor-arg index="4"><value>${autodeployment.staging.dir}/local</value></constructor-arg>
       <!-- strip commons-logging and/or log4j jars from war files: for JBoss set this to true -->
       <constructor-arg index="5"><value>false</value></constructor-arg>
  </bean>
  <bean id="decoratorDeploymentRegistry" 
  	   class="org.apache.jetspeed.deployment.simpleregistry.impl.InMemoryRegistryImpl"
  >  	   
  </bean>
  <bean id="decoratorDeploymentListener" 
  	   class="org.apache.jetspeed.deployment.impl.DeployDecoratorEventListener"   	   
  > 	
       <constructor-arg ><value>${applicationRoot}/decorations</value></constructor-arg>
  </bean>

  <!-- The deployment manager watches a specific staging directory for
  	   deploying components.  What components get deployed depend of
  	   DeploymentEventListeners registered to it.
   -->
  <bean id="deploymentManager" 
  	   class="org.apache.jetspeed.deployment.impl.StandardDeploymentManager" 
  	   init-method="start" destroy-method="stop"
  >  	   
       <constructor-arg ><value>${autodeployment.staging.dir},${autodeployment.staging.dir}/local</value></constructor-arg>
       <constructor-arg type="long" ><value>${autodeployment.delay}</value></constructor-arg>
       <constructor-arg >
         <list>
            <ref bean="portletAppDeploymentListener"/>      
            <ref bean="decoratorDeploymentListener"/>      
         </list>
       </constructor-arg>
  </bean>    

</beans>