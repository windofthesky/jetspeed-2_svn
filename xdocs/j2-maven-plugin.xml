<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at
  
  http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<document>
  <properties>
    <title>Jetspeed 2 Maven Plugin</title>
    <subtitle>Documentation for Using Jetspeed 2 Maven Plugin</subtitle>
    <authors>
      <person name="David Le Strat" email="dlestrat@apache.org" />
      <person name="Ate Douma" email="ate@douma.nu" />
    </authors>
  </properties>
  <body>
    <section name="Plugin Overview">
      <p>
        Adding functionality to Maven is done through the Maven plugin mechanism. Maven comes shipped with numerous
        plugins and provides an extensible framework for writing custom plugins.
        Details on custom Maven plugins can be found in the
        <a href="http://maven.apache.org/using/developing-plugins.html">Writing a Plugin</a> section of Maven's web
        site.
      </p>
      <p>
        Jetspeed 2 has developed a custom Maven plugin that centralizes most common build goals required to build a
        Jetspeed 2 based portal application. This provides many benefits:
      </p>
      <ul>
        <li>
          Better reusability of common build goals. Developers creating a new portal application can leverage the
          Jetspeed 2 Maven plugin for common build operations.
        </li>
        <li>
          The ability to quickly get started with a portal application. With the goal <code>j2:portal.genapp</code>
          a new portal application can be created. The developer of the new application can reuse the Jetspeed 2
          Maven plugin goals for common build operations for quickStart, portlet deployment, etc.
        </li>
        <li>
          Preparation for future migration to Maven 2 (M2). With M2, custom goals are encapsulated in plugins, maven.xml
          is deprecated. By centralizing most of the Jetspeed 2 build goals to the Jetspeed 2 Maven plugin, migration to
          M2 should be much easier.
        </li>
      </ul>
    </section>
    <section name="Portal Application creation and configuration Goals">
      <subsection name="Creating a new Portal Application">
        <table>
          <tr>
            <th>Goal</th>
            <th>Description</th>
          </tr>
          <tr>
            <td><code>j2:portal.genapp</code></td>
            <td>
              Generates or updates a custom portal application. Checkout the 
              <a href="getting-started.html#4__Creating_a_new_Portal_Application">Getting Started</a>
              document for basic usage of this goal.
              <br />
            </td>
          </tr>
		  <tr>
            <td><code>j2:portal.genapp.minimal</code></td>
            <td>
              Works similar to <code>j2:portal.genapp</code>.  However, it
			  will only copy the following directories/files from <code>WEB-INF/pages</code>.
			  <ul>
				<li>/WEB-INF/pages/Administrative/** (all contents)</li>
				<li>/WEB-INF/pages/page.security</li>
			  </ul>
            </td>
          </tr>
        </table>
      </subsection>
      <subsection name="Configuring and updating a Portal Application">
        <p>
          The <code>j2:portal.genapp</code> goal above is actually no more than a wrapper around several (sub)goals
          which can also be used individually to update and configure your portal application:
        </p>
        <table>
          <tr>
            <th>Goal</th>
            <th>Description</th>
          </tr>
          <tr>
            <td><code>j2:portal.copy.webapp</code></td>
            <td>
              Copies the (static) Jetspeed 2 portal web resource from the plugin to the
              <code>${org.apache.jetspeed.portal.webapp.dir}</code> folder.
              <br />
              <br />
              Running this goal again will not clear out previous resources but <i>will</i> overwrite existing resources.
              <br />
              <br />
              If you need to upgrade to a newer version of the Jetspeed 2 portal you should clear out these resources
              yourself first. By default, the target folder is configured within the maven default target folder and
              running the <code>clear</code> goal will do exactly that.
            </td>
          </tr>
		  <tr>
            <td><code>j2:portal.copy.webapp.minimal</code></td>
            <td>
              Similar to <code>j2:portal.copy.webapp</code> However, it
			  will only copy the following directories/files from <code>WEB-INF/pages</code>.
			  <ul>
				<li>/WEB-INF/pages/Administrative/** (all contents)</li>
				<li>/WEB-INF/pages/page.security</li>
			  </ul>
            </td>
          </tr>
          <tr>
            <td><code>j2:portal.conf.project</code></td>
            <td>
              Creates a new maven or updates an existing portal project configuration in the
              <code>${org.apache.jetspeed.portal.home.dir}</code> folder.
              <br />
              It creates a hiearchy of 5 maven project files:
              <ul>
                <li><code>project-info.xml</code></li>
                <li><code>core-build.xml extends project-info.xml</code></li>
                <li><code>jetspeed-components.xml extends core-build.xml</code></li>
                <li><code>full-portal.xml extends jetspeed-components.xml</code></li>
                <li><code>project.xml extends full-portal.xml</code></li>
              </ul>
              Of the above files, the first and the last (project-info.xml and project.xml) may be modified to provide
              additional project information and configuration and will not be updated by this goal again. Only the
              other 3 files will be rewritten by this goal. If you need to upgrade to a newer version of the Jetspeed 2
              portal your own customization will be preserved.
              <br />
              <br />
              Additionally, you can add your own maven.xml and/or project.properties or build.properties to further
              customize your portal. These also will be preserverd when you run this goal again.
            </td>
          </tr>
          <tr>
            <td><code>j2:portal.conf.sql</code></td>
            <td>
              Generates the portal sql schema DDL for the configured database(s) under the
              <code>${org.apache.jetspeed.portal.sql.dir}</code>, as well as copies over statically defined common and
              selected database specific sql DML and DDL (possibly overriding generated DDL).
              <br />
              <br />
              The content of the sql target folder is cleared out first when this goal is run.
            </td>
          </tr>
          <tr>
            <td><code>j2:portal.conf.ojb</code></td>
            <td>
              Copies the OJB configuration, filtered for the currently selected production database to the
              <code>${org.apache.jetspeed.portal.target.dir}</code> folder.
              <br />
              <br />
              As default, the above target folder is configured under the default maven war target folder. The maven
              <code>clear</code> goal will also remove this filtered OJB configuration.
            </td>
          </tr>
          <tr>
            <td><code>j2:portal.conf.ldap</code></td>
            <td>
              Copies the LDAP configuration, to the
              <code>${org.apache.jetspeed.portal.target.dir}</code> folder.
            </td>
          </tr>   
          <tr>
            <td><code>j2:portal.conf.jetspeed</code></td>
            <td>
              Copies the filtered <code>jetspeed.properties</code> portal configuration to the 
              <code>${org.apache.jetspeed.portal.target.dir}</code> folder.
              <br />
              <br />
              As default, the above target folder is configured under the default maven war target folder. The maven
              <code>clear</code> goal will also remove this filtered <code>jetspeed.properties</code> file.
            </td>
          </tr>
          <tr>
            <td><code>j2:portal.conf.tomcat</code></td>
            <td>
              Copies a filtered Tomcat context descriptor, containing current database connection configuration to the
              <code>${org.apache.jetspeed.portal.conf.dir}</code> folder.
              <br />
              <br />
              Based on the <code>${org.apache.jetspeed.catalina.major.version}</code> setting, a Tomcat 5.0.x or 5.5.x
              type template context descriptor will be used.
              <br />
              <br />
              The filtered Tomcat context descriptor will be copied to the Tomcat server by the
              <code>j2:portal.deploy</code> goal.
              <br />
              <br />
              If you need to change the Tomcat major version and/or database connection configuration, you need to
              run this goal again before (re)deploying your portal.
              <br />
              <br />
              As default, the above target folder is configured under the default maven target folder. The maven
              <code>clear</code> goal will remove this filtered context descriptor file.
            </td>
          </tr>
        </table>
      </subsection>
    </section>
    <section name="Portal Application Deployment Goals">
      <subsection name="Quickstart deployment goals">
        <p>
          Several goals are available for quickly deploying the Portal Application together with a predefined set of
          Portlet Applications and optionally with creating and seeding the portal database.
        </p>
        <table>
          <tr>
            <th>Goal</th>
            <th>Description</th>
          </tr>
          <tr>
            <td><code>j2:doStart</code></td>
            <td>
              A generic goal for deploying the portal application and setting up the required dependencies for the 
              configured Tomcat Server (shared libraries, portal application context, etc.).
              <br />
              <br />
              This goal requires the plugin property <code>deployType</code> to be set. The default value is
              <code>"j2:fullDeploy"</code> (see below).
              <br />
              <br />
              If plugin property <code>recreateDB</code> is set, goal <code>j2:db.recreate</code> is invoked.
              <br />
              All existing Jetspeed 2 standard and demo portlet applications are removed through goal
              <code>j2:remove.wars</code>.
              <br />
              The shared dependecies are copied to the Tomcat Server with goal <code>j2:copy.shared.deps</code>.
              <br   />
              And finally, the set <code>deployType</code> plugin property value is used to run a specific deploy goal.
            </td>
          </tr>
          <tr>
            <td><code>j2:quickStart</code></td>
            <td>
              Invokes <code>j2:doStart</code> with <code>deployType="j2:fullDeploy"</code> and
              <code>recreateDB=true</code>.
            </td>
          </tr>
          <tr>
            <td><code>j2:nodbQuickStart</code></td>
            <td>
              Invokes <code>j2:doStart</code> with <code>deployType="j2:nodbfullDeploy"</code> and 
              <code>recreateDB=false</code>.
            </td>
          </tr>
          <tr>
            <td><code>j2:basicStart</code></td>
            <td>
              Invokes <code>j2:doStart</code> with <code>deployType="j2:basicDeploy"</code> and
              <code>recreateDB=true</code>.
            </td>
          </tr>
          <tr>
            <td><code>j2:nodbBasicStart</code></td>
            <td>
              Invokes <code>j2:doStart</code> with <code>deployType="j2:nodbBasicDeploy"</code> and 
              <code>recreateDB=false</code>.
            </td>
          </tr>
          <tr>
            <td><code>j2:minStart</code></td>
            <td>
              Invokes <code>j2:doStart</code> with <code>deployType="j2:minDeploy"</code> and
              <code>recreateDB=true</code>.
            </td>
          </tr>
          <tr>
            <td><code>j2:nodbMinStart</code></td>
            <td>
              Invokes <code>j2:doStart</code> with <code>deployType="j2:nodbMinDeploy"</code> and 
              <code>recreateDB=false</code>.
            </td>
          </tr>
        </table>
      </subsection>
      <subsection name="Deployment supporting Goals">
        <table>
          <tr>
            <th>Goal</th>
            <th>Description</th>
          </tr>
          <tr>
            <td>j2:remove.wars</td>
            <td>
              Removes the portal, all standard and demo portlet applications (see <code>j2:fullDeploy</code> below) 
              and their context descriptors (if any) from the Tomcat Server.
            </td>
          </tr>
          <tr>
            <td><code>j2:catalina.base.shared</code></td>
            <td>
              Copies all base jars necessary for the common portlet container.
            </td>
          </tr>
          <tr>
            <td><code>j2:catalina.shared</code></td>
            <td>Copies all jars necessary for common container</td>
          </tr>
          <tr>
            <td><code>j2:copy.shared.deps</code></td>
            <td>
              Wrapper goal invoking <code>j2:catalina.base.shared</code> and <code>j2:catalina.shared</code>.
            </td>
          </tr>
          <tr>
            <td><code>j2:portal.deploy</code></td>
            <td>
              Deploys the portal application only and its dependencies to the Tomcat Server, but no portlet applications.
              <br />
              <br />
              First, it removes the current portal installation with goal <code>j2:remove.wars</code>.
              <br/>
              Then it copies and expands the build portal war from the local maven repository to the application server.
              <br />
              And it copies a Tomcat context descriptor for the portal (see also goal <code>j2:portal.conf.tomcat</code>).
              <br />
              Finally, it installs the shared dependencies with goal <code>j2:copy.shared.deps</code>.
            </td>
          </tr>
        </table>
      </subsection>
      <subsection name="Standard and Demo Portlet Application deployment goals">
        <table>
          <tr>
            <th>Goal</th>
            <th>Description</th>
          </tr>
          <tr>
            <td><code>j2:deploy</code></td>
            <td>
              Generic goal to deploy a portlet application identified by property <code>${maven.war.final.name}</code>.
              <br />
              <br />
              The portlet application is searched for in the Jetspeed2 group of the local maven repository. When
              searching portlets in the repository, this goal searches for the portlet application given the Jetspeed 2
              version number configured in the plugin. The name of the file searched in the repository following the
              convention <code>${maven.war.final.name}-${jetspeed.version}.war</code> and is deployed as 
              <code>${maven.war.final.name}.war</code>.
            </td>
          </tr>
          <tr>
            <td><code>j2:pam.layoutdeploy</code></td>
            <td>Deploys Jetspeed local layout portlet application.</td>
          </tr>
          <tr>
            <td><code>j2:pam.admindeploy</code></td>
            <td>Deploys Jetspeed Administration portlet application.</td>
          </tr>
          <tr>
            <td><code>j2:pam.tsdeploy</code></td>
            <td>Deploys Pluto Test Suite portlet application.</td>
          </tr>
          <tr>
            <td><code>j2:pam.strutsdeploy</code></td>
            <td>Deploys the struts mailreader demo portlet application.</td>
          </tr>
          <tr>
            <td><code>j2:pam.jpetstoredeploy</code></td>
            <td>Deploys the iBatis JPetstore based demo portlet application.</td>
          </tr>
          <tr>
            <td><code>j2:pam.jsfdeploy</code></td>
            <td>Deploys the JSF demo portlet application which uses Jetspeed generic JSF portlet bridge.</td>
          </tr>
          <tr>
            <td><code>j2:pam.jsfmyfacesdeploy</code></td>
            <td>Deploys the JSF demo portlet application which uses MyFaces native JSF portlet bridge.</td>
          </tr>
          <tr>
            <td><code>j2:pam.phpdeploy</code></td>
            <td>Deploys the Jetspeed PHP bridge demo portlet application.</td>
          </tr>
          <tr>
            <td><code>j2:pam.perldeploy</code></td>
            <td>Deploys the Jetspeed Perl bridge demo portlet application.</td>
          </tr>
          <tr>
            <td><code>j2:pam.rssdeploy</code></td>
            <td>Deploys the RSS feed demo portlet application.</td>
          </tr>
          <tr>
            <td><code>j2:nodbMinDeploy</code></td>
            <td>
              Deploys the portal using the <code>j2:portal.deploy</code> goal and only the layout and admin portlets
              using <code>j2:pam.layoutdeploy</code> and <code>j2:pam.admindeploy</code>.
            </td>
          </tr>
          <tr>
            <td><code>j2:minDeploy</code></td>
            <td>
              The same functionality as <code>j2:nodbMinDeploy</code> and additionaly seeds the portal database using
              the <code>j2:db.entities</code> goal.
            </td>
          </tr>
          <tr>
            <td><code>j2:nodbfullDeploy</code></td>
            <td>
              The same functionality as <code>j2:nodbMinDeploy</code> but additional deploys all other demo portlet
              applications (see full list above).
            </td>
          </tr>
          <tr>
            <td><code>j2:fullDeploy</code></td>
            <td>
              The same functionality as <code>j2:nodbFullDeploy</code> and additionaly seeds the portal database using
              the <code>j2:db.entities</code> goal.
            </td>
          </tr>
        </table>
      </subsection>
    </section>
    <section name="Database Management Goals">
      <table>
        <tr>
          <th>Goal</th>
          <th>Description</th>
        </tr>
        <tr>
          <td><code>j2:start.production.server</code></td>
          <td>Starts the HSQLDB production database for usage by the portal. This goal is optional to those who use the default embedded Derby database.</td>
        </tr>
        <tr>
          <td><code>j2:start.test.server</code></td>
          <td>
            Starts the HSQLDB test database to be used for the testcases during the build of Jetspeed 2.
            This goal is optional for those who use the default embedded Derby database for testing Jetspeed 2.
          </td>
        </tr>
        <tr>
          <td><code>j2:db.create.test</code></td>
          <td>
            Creates the test database tables. If using the HSQLDB database, it should be started first with
            goal <code>j2:start.test.server</code>.
            <br />
            Existing portal tables are dropped first. The first time, this will lead to "table does not exist"
            error messages but they can be (and are) ignored.
          </td>
        </tr>
        <tr>
          <td><code>j2:db.create.production</code></td>
          <td>
            Creates the production database tables. If using the HSQLDB database, it should be started first
            with goal <code>j2:start.production.server</code>.
            <br />
            Existing portal tables are dropped first. The first time, this will lead to "table does not exist"
            kind of error messages but they can (and are) ignored.
          </td>
        </tr>
        <tr>
          <td><code>j2:db.recreate</code></td>
          <td>
            Recreates the production database using the <code>j2:db.create.production</code> goal but first
            (re)generates the sql scripts using <code>j2:portal.conf.sql</code>.
          </td>
        </tr>
        <tr>
          <td><code>j2:db.drop.test</code></td>
          <td>Drops the test database portal tables.</td>
        </tr>
        <tr>
          <td><code>j2:db.drop.production</code></td>
          <td>Drops the production database portal tables.</td>
        </tr>
        <tr>
          <td><code>j2:db.entities</code></td>
          <td>
            Populates the users information for the default PSML configuration configured with Jetspeed 2.
          </td>
        </tr>
      </table>
    </section>
    <section name="LDAP Management Goals">
      <table>
        <tr>
          <th>Goal</th>
          <th>Description</th>
        </tr>
        <tr>
          <td><code>j2:start.ldap.server</code></td>
          <td>Starts the default Apache Directory Server and load the default
          <i><a href="http://svn.apache.org/viewcvs.cgi/portals/jetspeed-2/trunk/etc/apacheds/apacheds-server.xml?view=markup">apacheds-server.xml</a></i> configuration.</td>
        </tr>
      </table>
    </section>
    <section name="Auxillary Jetspeed Components Deployment Goals">
      <p>
        Generic set of goals for redeploying a specific Jetspeed component.
      </p>
      <table>
        <tr>
          <th>Goal</th>
          <th>Description</th>
        </tr>
        <tr>
          <td><code>j2:jar.deploy</code></td>
          <td>
            Deploys a Jetspeed core component from the local maven repository to the deployment directory.
          </td>
        </tr>
        <tr>
          <td><code>j2:jar.deploy.shared</code></td>
          <td>
            Deploys a Jetspeed core component shared library from the local maven repository to the Tomcat shared
            library directory.
          </td>
        </tr>
		<tr>
          <td><code>j2:deployDecorations</code></td>
          <td>
            Deploys all decoration files from the WEB-INF/decorations directory to the deployed portal.
          </td>
        </tr>
		<tr>
          <td><code>j2:deployTemplates</code></td>
          <td>
            Deploys all template files from the WEB-INF/templates directory to the deployed portal.
          </td>
        </tr>
      </table>
    </section>
  </body>
</document>

