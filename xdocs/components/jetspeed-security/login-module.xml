<?xml version="1.0"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at
    
    http://www.apache.org/licenses/LICENSE-2.0
    
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<document>
    <properties>
        <title>Jetspeed 2 Security - Login Module</title>
        <authors>
            <person name="David Le Strat" email="dlestrat@apache.org" />
        </authors>
    </properties>
    <body>
        <section name="Login Module Overview">
            <p>
                For authentication purpose, Jetspeed 2 provide a default login module implementation. Login modules provide a standard way to expose
                authentication services for java application. More information about login modules can be found in the JDK
                <a href="http://java.sun.com/j2se/1.4.2/docs/api/javax/security/auth/spi/LoginModule.html">LoginModule interface</a>
                documentation.
            </p>
        </section>
        <section name="Login Module Configuration">
            <p>
                Configuration is central to JAAS authentication. By default, Jetspeed 2 is configured to use its
                <code>DefaultLoginModule</code>
                implementation. The configuration file (login.conf) for the login module ship with the
                <code>jetspeed2-security-{version}.jar</code>
                component and provide the following configuration:
                <source>
                    <![CDATA[
Jetspeed {
   org.apache.jetspeed.security.impl.DefaultLoginModule required;
};]]>
                </source>
            </p>
            <p>
                In order to override this configuration, you can place your own login.conf file in your web application class path under WEB-INF/classes. The
                location of the login.conf file is configured in the
                <code>security-providers.xml</code>
                as described below. For more information on how to configure the security providers, see
                <a href="config.html">the configuration section</a>.
            </p>
            <p>
                <source>
                    <![CDATA[
<!-- Security: Default Authentication Provider -->
<bean id="org.apache.jetspeed.security.AuthenticationProvider" 
  	  class="org.apache.jetspeed.security.impl.AuthenticationProviderImpl"
>  	   
    <constructor-arg index="0"><value>DefaultAuthenticator</value></constructor-arg>
  	<constructor-arg index="1"><value>The default authenticator</value></constructor-arg>
  	<constructor-arg index="2"><value>login.conf</value></constructor-arg>
  	<constructor-arg index="3">
  	    <ref bean="org.apache.jetspeed.security.spi.CredentialHandler"/>
  	</constructor-arg>
  	<constructor-arg index="4">
  	    <ref bean="org.apache.jetspeed.security.spi.UserSecurityHandler"/>
    </constructor-arg>
</bean>]]>
                </source>
            </p>
            <p>
                The <code>AuthenticationProvider</code> configures the <code>LoginModule</code> to be used by the
                application by setting the System property <code>java.security.auth.login.config</code> to the 
                <code>login.conf</code> specified in the component configuration.
            </p>
        </section>
        <section name="Login Module Implementation">
            <p>
                The
                <code>DefaultLoginModule</code>
                implementation is illustrated by the class diagram below:
                <br />
            </p>
            <table>
                <tr>
                    <td style="background-color:#FFFFFF;" align="center">
                        <img src="images/default-login-module-c.gif" border="0" />
                    </td>
                </tr>
            </table>
            <p>
                The roles of the classes used to implement the DefaultLoginModule are:
            </p>
            <table>
                <tr>
                    <th>Class</th>
                    <th>Description</th>
                </tr>
                <tr>
                    <td><code>org.apache.jetspeed.security.impl.DefaultLoginModule</code></td>
                    <td>
                        The
                        <code>javax.security.auth.spi.LoginModule</code>
                        implementation. The
                        <code>DefaultLoginModule</code>
                        authentication decision is encapsulated behind the
                        <code>UserManager</code>
                        interface which leverages the SPI implementation to decide which authenticator should be used in order to authenticate a user against a
                        specific system of record. For more information on how to implement your own authenticator, see the
                        <a href="atn-spi.html">authentication SPI documentation</a>.
                    </td>
                </tr>
                <tr>
                    <td><code>org.apache.jetspeed.security.LoginModuleProxy</code></td>
                    <td>
                        A utility component used to expose the
                        <code>UserManager</code>
                        to the
                        <code>DefaultLoginModule</code>.
                    </td>
                </tr>
                <tr>
                    <td><code>org.apache.jetspeed.security.User</code></td>
                    <td>
                        The
                        <code>User</code>
                        is an interface that holds the
                        <code>javax.security.auth.Subject</code>
                        and his/her
                        <code>java.util.prefs.Preferences</code>. The
                        <code>UserManager</code>
                        upon user authentication populates the user subject with all user
                        <code>java.security.Principal</code>. Jetspeed 2 implements 3 types of principals:
                        <ul>
                            <li>UserPrincipal: The principal holding the user unique identifier for the application.</li>
                            <li>RolePrincipal: The principal representing a role for the system.</li>
                            <li>GroupPrincipal: The principal representing a group for the system.</li>
                        </ul>
                    </td>
                </tr>
                <tr>
                    <td><code>org.apache.jetspeed.security.UserManager</code></td>
                    <td>
                        The interface exposing all user operations. This interfaces fronts the aggregates various SPI to provide developers with the ability to
                        map users to their specific system of record.
                    </td>
                </tr>
            </table>
        </section>

    </body>
</document>