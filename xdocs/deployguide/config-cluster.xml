<?xml version="1.0"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<document>
  <properties>
    <title>Jetspeed Cluster Configuration</title>
    <subtitle>Jetspeed Cluster Configuration</subtitle>
    <authors>
      <person name="David Sean Taylor" email="taylor@apache.org"/>
    </authors>
  </properties>
  <body>
<section name="Jetspeed Cluster Configuration">
<p>
Jetspeed is an enterprise portal capable of running in clustered application servers. There are several configuration changes required fro running in a clustered deployment:
<ol>
	<li>Use Database Page Manager</li>
	<li>Use the Versioned Deployment Manager</li>
	<li>Enable Distributed Caching</li>
</ol>
</p>
<subsection name='1. Database Page Manager'>
<p>PSML represents the pages in your portal. There can be lots of them. The default implementation stores the PSML files on the file system.
A secondary implementation stores the files in the database. Storing in the database is necessary when deploying to a clustered Jetspeed distribution,
or when you have tens of thousands of users where performance is required. Provided in the alternate directory is a DBPSML alternate configuration, db-page-manager.xml.
You can take this file and copy it into your overrides directory. It will override the page-manager.xml beans by name.
</p>
<source><![CDATA[
 <bean id="org.apache.jetspeed.page.PageManagerImpl" 
        name="pageManagerImpl"
        init-method="init"
        class="org.apache.jetspeed.page.impl.DatabasePageManager">
      <!-- OJB configuration file resource path -->
      <constructor-arg index="0"><value>JETSPEED-INF/ojb/page-manager-repository.xml</value></constructor-arg>       
      <!-- permissions security enabled flag, default=false -->
      <constructor-arg index="1"><value>false</value></constructor-arg>
      <!-- constraints security enabled flag, default=true -->
      <constructor-arg index="2"><value>true</value></constructor-arg>
      <!-- folder/page/link cache -->
      <constructor-arg index="3"><ref bean="pageManagerOidCache"/></constructor-arg>
      <!-- folder/page/link path cache -->
      <constructor-arg index="4"><ref bean="pageManagerPathCache"/></constructor-arg>
  </bean>
]]></source>
</subsection>
<subsection name="2. Versioned Deployment">
<p>The default Jetspeed Deployer, although it works well for development on Tomcat, doesn't work well in clustered environments. 
We have implement a second, Versioned Portlet Application Manager for clustered environments.
The Node Manager implementation will most likely be deprecated in the future. We are running into 
limitations with the NodeManager-based cluster support when deploying
to clusters with replicated databases as well as replicated app servers.
The default PAM (Portlet Application Manager) is not-appropriate for many deployments of the
portal. This second version of the PAM has no listeners,
and a simpler deployment algorithm based on a version number supplied in the jetspeed-portlet.xml
metadata
If this field is not found, or if it is equal to or less than the version in the database,
then the PA will not be deployed.
This will allow for dropping in 2..n PAs in a cluster, without re-registering. The problem
with re-registering is that the registry algorithm deep deletes the old PA def from the database,
create a new PA, with all new OIDs, invalidating all other PAs and portlets on other nodes
in the cluster.
</p>
<source><![CDATA[
<bean id="deployFactory" class="org.apache.jetspeed.tools.deploy.JetspeedDeployFactory"/>

<bean id="org.apache.jetspeed.tools.pamanager.PortletApplicationManager" 
  	   class="org.apache.jetspeed.tools.pamanager.VersionedPortletApplicationManager" init-method="start" destroy-method="stop"
  >  	   
  	   <constructor-arg><ref bean="portletFactory"/></constructor-arg>
  	   <constructor-arg><ref bean="org.apache.jetspeed.components.portletregistry.PortletRegistry"/></constructor-arg>
  	   <constructor-arg><ref bean="org.apache.jetspeed.components.portletentity.PortletEntityAccessComponent"/></constructor-arg>
  	   <constructor-arg><ref bean="org.apache.jetspeed.container.window.PortletWindowAccessor"/></constructor-arg>
  	   <constructor-arg><ref bean="org.apache.jetspeed.security.PermissionManager"/></constructor-arg>       
  	   <constructor-arg><ref bean="org.apache.jetspeed.search.SearchEngine"/></constructor-arg>              
  	   <constructor-arg><ref bean="org.apache.jetspeed.security.RoleManager"/></constructor-arg>                     
       <!-- role principals to assign a default permission(s) during deployment of a Portlet Application -->
       <constructor-arg >
         <list>
            <value>user</value>
         </list>
       </constructor-arg>

       <!--  application root -->
        <constructor-arg>
            <value>${applicationRoot}</value>
        </constructor-arg>


   <!-- optional configuration for automatic creation of not yet existing roles as defined in the deployed web.xml:
       <property name="autoCreateRoles"><value>true</value></property>
   -->      
   <!-- optional descriptor change monitor check interval in seconds (0: disabled, default: 10):
       <property name="descriptorChangeMonitorInterval"><value>10</value></property>
   -->
   <!-- optional max PA start retries in case of an error registering ths PA (0: do not retry, default: 10):
   		this was introduced because of DB constraint validation errors in clustered environments
   		see https://issues.apache.org/jira/browse/JS2-666
       <property name="maxRetriedStarts"><value>10</value></property>
   -->
  </bean>
]]></source>
<p>
You can find these <code>alternate</code> Spring configurations in the alternate directory is a deployment alternate configuration, deployment.xml.
 You can take this file and copy it into your overrides directory. It will override the deployment.xml beans by name.
</p>
</subsection>
<subsection name="3. Distributed Cache">
<p> 
In a cluster, Jetspeed keeps all internal caches synchronized across the cluster using a distributed cache. Documentation on the Distributed Cache is found <a href='distributed-cache.html'>here</a>. 
</p>
</subsection>

</section>
</body>
</document>
