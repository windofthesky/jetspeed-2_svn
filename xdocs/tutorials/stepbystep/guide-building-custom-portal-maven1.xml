<?xml version="1.0"?>
	<!--
		Licensed to the Apache Software Foundation (ASF) under one or more
		contributor license agreements. See the NOTICE file distributed with
		this work for additional information regarding copyright ownership.
		The ASF licenses this file to You under the Apache License, Version
		2.0 (the "License"); you may not use this file except in compliance
		with the License. You may obtain a copy of the License at

		http://www.apache.org/licenses/LICENSE-2.0 Unless required by
		applicable law or agreed to in writing, software distributed under the
		License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
		CONDITIONS OF ANY KIND, either express or implied. See the License for
		the specific language governing permissions and limitations under the
		License.
	-->
<document>
	<properties>
		<title>Building a Custom Jetspeed Portal With Maven-1</title>
		<subtitle>For Tomcat 5 and Websphere Deployments</subtitle>
		<authors>
			<person name="David Sean Taylor" email="taylor@apache.org" />
		</authors>
	</properties>
	<body>
		<section name='Building a Custom Jetspeed Portal With Maven-1'>
			<ul>
				<li>
					<a href="#Introduction">Introduction</a>
					<ul>
						<li><a href="#Purpose">Purpose</a></li>
						<li><a href="#Software_Requirements">Software Requirements</a></li>
					</ul>
				</li>
				<li>
					<a href="#Windows_XP_Environment">Windows XP Environment</a>
					<ul>
						<li><a href="#Distribution_And_Coventions">Distribution and Coventions</a></li>
						<li><a href="#Environment">Environment</a></li>
					</ul>
				</li>
				<li>
					<a href="#Maven-1_Configuration">Maven-1 configuration</a>
					<ul>
						<li><a href="#USER_HOME_Build.properties">USER_HOME build.properties</a></li>
						<li><a href="#Build.properties">build.properties</a></li>
					</ul>
				</li>
				<li>
					<a href="#Database">Database</a>
					<ul>
						<li><a href="#MAVEN_REPO_Classpath_Variable">MAVEN_REPO Classpath variable</a></li>
						<li><a href="#Jetspeed-2_Portal_Sources">Jetspeed-2 portal sources</a></li>
					</ul>
				</li>
				<li>
					<a href="#Building_Jet_Express">Building Jet Express</a>
					<ul>
						<li><a href="#Building_Jet_Express_For_Tomcat">Building Jet Express for Tomcat</a></li>
						<li><a href="#Building_Jet_Express_For_Websphere">Building Jet Express for Websphere</a></li>
						<li><a href="#Synchronizing_The_Portal_With_Latest_Verion_Of
							Jetspeed-2">Synchronizing the Portal with latest verion of
							Jetspeed-2</a></li>
					</ul>
				</li>
				<li><a href="#Revision_History">Revision History</a></li>
			</ul>
		</section>
			<section name='Introduction'>
				<p>
					This document is a step by step guide to building a custom Apache
					Portals Jetspeed-2 portal with Maven-1. The Maven-1 project
					provided with this document will:
					<ol>
						<li>Build a custom portal</li>
						<li>Build a custom portlet application</li>
						<li>Populate the database</li>
						<li>Create distributable deployment archives for Websphere
							6.1 and Tomcat 5</li>
					</ol>
				</p>
				<p>
					This document is for Maven-1 build systems. To build with Maven-2, see
					the accompanying document "Building Custom a Jetspeed Portal with
					Maven-2"
				</p>
				<p>
					For documentation on deploying the WAR and EAR files created here, see
					the document "Deploying Jetspeed to Websphere"
				</p>
				<subsection name='Purpose'>
					<p>
						This document will teach you how to build and configure a custom Jetspeed Portal and create deployable archives for Websphere 6.1 and Tomcat 5. The complete source code, projects and deployment environment are described in this document. Deployments are based upon the J2EE standard "Web Application" and "Enterprise Application" deployment. The build is based on the Apache Portals Jetspeed-2 "Maven-1 Custom Build".
					</p>
					<p>
					Jetspeed is an open source project, thus all source code is freely available from Apache. See the website for more details: <a href="http://portals.apache.org/jetspeed-2/">http://portals.apache.org/jetspeed-2/</a>
					</p>
					<p>
					This document assumes that the user is familiar with open source Java development. In particular the Apache Software Foundation (ASF) and the essential Apache open source projects:
					<ol>
						<li>Apache Portals http://portals.apache.org and subprojects:
							<ol>
								<li>Jetspeed-2</li>
								<li>Bridges</li>
								<li>Pluto</li>
							</ol>
						</li>
						<li>Ant (<a href="http://ant.apache.org">http://ant.apache.org</a>)</li>
						<li>Maven-1 (<a href="http://maven.apache.org">http://maven.apache.org</a>)</li>
						<li>Apache Tomcat Web Server (<a href="http://tomcat.apache.org">http://tomcat.apache.org</a>)</li>
						<li>IBM Websphere Application Server</li>
					</ol>
					</p>
				</subsection>
				<subsection name='Software Requirements'>
					The distribution assumes the following software products installed:
					<table>
						<tr>
							<td>Product</td>
							<td>Version</td>
						</tr>
						<tr>
							<td>Ant</td>
							<td>1.6.5 or higher</td>
						</tr>
						<tr>
							<td>Eclipse</td>
							<td>3.1.1 or higher</td>
						</tr>
						<tr>
							<td>Maven</td>
							<td>1.0.2 or higher</td>
						</tr>
						<tr>
							<td>Sun JDK</td>
							<td>1.4.2 or 1.5</td>
						</tr>
						<tr>
							<td>Tomcat</td>
							<td>5.5.12 (with Java 1.4 compatibility) or higher</td>
						</tr>
						<tr>
							<td>IBM Websphere</td>
							<td>6.1.0.2 or higher</td>
						</tr>
					</table>
				</subsection>
			</section>
			<section name='Windows XP Environment'>
				<p>
					This section shows how to configure under Windows XP for development, demo, testing and production environments. Since we are working with Java, the environment for Linux will not be much different although components like Eclipse and MySQL require Linux specific versions and setup. 
				</p>
				<p>
					When using properties files under Windows, please remember that Java requires you to use either the forward slash /, or double back slash \\ for file system paths. You cannot use a single back slash \. Using the back slash does not work with Java, since it is the escape sequence-character.
				</p>
				<p>WRONG!!!!</p>
				<p>
				<code>
				my.files = \path\to\my\files\
				</code>
				</p>
				<p>RIGHT :)</p>
				<p>
				<code>
				my.files = /path/to/my/files/
				</code>
				</p>
				<p>
				It is strongly recommended to always use forward slashes, whether on Windows or Linux.
				</p>
				<subsection name='Distribution and Conventions'>
				<p>
				It is strongly recommended that all developers on the project use the same root directory for all project source and supporting files.
				</p>
				<p>
				The distribution is a complete environment for software development, unit testing, system testing, and deploying to a production environment.
				</p>
				</subsection>
				<subsection name='Environment'>
				<p>
				The system path will need to include Java, Maven and Ant. 
				</p>
				<p>
				Under Windows XP, the Environment Variables and the System Path is modified by going to the 
				<i>Start Menu -> Settings -> Control Panel -> System -> Advanced -> Environment Variables</i>.
				</p>
				<p>
				Note: You need administrative privileges to be allowed to modify system environment variables.
				</p>
				<p>
				With these settings configured, you then have to make your system Windows PATH variable based on the home directories:
				</p>
				<p>
				<code>
				PATH=%JAVA_HOME%\bin;%ANT_HOME%\bin;%MAVEN_HOME%\bin;C:\winnt\system32...
				</code>
				</p>
				<p>
				Note: make sure to put the new path elements in front of the existing path definition!
				</p>
				</subsection>
			</section>
			<section name='Maven-1 configuration'>
				<p>
					The build environment uses the Maven project management tool (<a href="http://maven.apache.org">http://maven.apache.org</a>). One thing that Maven does well is managing Java jar files and maintaining versions of those files. Maven stores all jar files for almost every known open source project on the planet in a set of distributed repositories on the internet. Maven project descriptors reference specific versions of the jars, and the jars are downloaded to a local repository in order to build the system. By default Maven puts the repository under your Home directory which on Windows XP usually is found under the "Documents and Settings" directory. 
				</p>
				<p>
				Maven's behavior is for the most part customized through one <i>project.properties</i> and/or one or two <i>build.properties</i> files for each project.
				</p>
				<p>
				Specific project properties are usually defined in a <i>project.properties</i> file within the project directory. User overrides of default and project properties can be defined in a <i>build.properties</i> file within the same project directory as well as in the user home directory. Properties defined in the <i>build.properties</i> in the user home directory will overrule any other property definitions.
				</p>
				<p>
				Our project development environment is fully contained within one root project directory. In order to be able to have Maven not put its repository under the user home directory, we do need to specify a few properties in the user home <i>build.properties.</i> 
				</p>
				<subsection name='USER_HOME build.properties'>
				<p>
				The distribution contains a <i>build.properties</i> file under the etc directory which can be copied by every developer to its own home directory.
				</p>
				<p>
				It defines the following general Maven-1 settings:
				<ul>
					<li><i>maven.home.local:</i> the local maven repository (OPTIONAL)</li>
					<li><i>maven.repo.remote:</i> the remote repositories used by the Jet Express project(s)</li>
					<li><i>maven.proxy.*:</i> any proxy server configuration</li>
				</ul>
				</p>
				</subsection>
				<subsection name='build.properties'>
				<p>
				The build supports both Tomcat 5 and WebSphere 6.1. Because each server requires slightly different handling, there are two sets of property files. To switch between the two, run one of the two batch files:
				<ol>
					<li>switchToTomcat.bat</li>
					<li>switchToWebsphere.bat</li>
				</ol>
				</p>
				</subsection>
				<subsection name='Database'>
				<p>
				The build requires a database installed on the local network. For the examples here, we will use an Oracle database although you can select other databases such as DB2 or MySQL.
				</p>
				<p>
				The database properties are defined in <i>build.properties.tomcat</i> and <i>build.properties.was</i>. He is an example of using Oracle configuration parameters and MySQL commented out:
				</p>
				<p>
				<source>
# -------------------------------------------------------------------------
# MySQL Database Setup
# -------------------------------------------------------------------------
org.apache.jetspeed.production.database.default.name=mysql
org.apache.jetspeed.production.database.url = jdbc:mysql://localhost/express
org.apache.jetspeed.production.database.driver = com.mysql.jdbc.Driver
org.apache.jetspeed.production.database.user = express
org.apache.jetspeed.production.database.password = xxxx
org.apache.jetspeed.production.jdbc.drivers.path=${express.home}/drivers/mysql-connector-java-3.1.7-bin.jar

# -------------------------------------------------------------------------
# Oracle Database Setup
# -------------------------------------------------------------------------
org.apache.jetspeed.production.database.default.name=oracle
org.apache.jetspeed.production.database.url = jdbc:oracle:thin:@svn.bluesunrise.com:1521:XE
org.apache.jetspeed.production.database.driver = oracle.jdbc.driver.OracleDriver
org.apache.jetspeed.production.database.user = fmr
org.apache.jetspeed.production.database.password = xxxx
org.apache.jetspeed.production.jdbc.drivers.path=etc/drivers/ojdbc14.jar
				</source>
				</p>
				</subsection>
				<subsection name='MAVEN_REPO Classpath variable'>
				<p>
				To have Eclipse use the local Maven repository which will contain all the jars needed for jetspeed-2, the portal and portlets, the MAVEN_REPO Classpath variable needs to be defined.
				</p>
				<p>
				Open the <i>Windows -> Preferences</i> dialog and select the <i>Java -> Build Path -> Classpath</i> Variables node from the Preferences tree. Then use the <i>New...</i> button to add a new MAVEN_REPO variable pointing at your Maven home repository folder.
				</p>
				</subsection>
				<subsection name='Jetspeed-2 portal sources'>
				<p>
				For building the portal, the Jetspeed-2 portal sources are not needed, but for debugging purposes, it can be helpful to have them checked out when trying to debug.
The Jetspeed-2 sources, as well as those for the embedded pluto portlet container and portals bridges, can all be checked out from the <i>svn.apache.org/repos/asf/portals</i> repository root, similar to how the Jet Express sources are checked out.
				</p>
				</subsection>
			</section>
			<section name='Building Jet Express'>			
				<p>
				The Jet Express portal project is a Maven based project. It builds the entire portal as well as the example portlet application. The main Jet Express project controls the entire build.
				</p>
				<subsection name='Building Jet Express for Tomcat'>
				<p>
				<code>maven clean tomcat-all</code>
				</p>
				<p>
				This will clean, build and deploy the portal as well as deploy the example portlet application.
				Note: make sure to first once execute:
				</p>
				<p>
				<code>
				switchToTomcat.bat
				</code>
				</p>
				</subsection>
				<subsection name='Building Jet Express for Websphere'>
				<p>
				To build WAR files:
				</p>
				<p>
				<code>maven clean was-war-all</code>
				</p>
				<p>
				To build EAR files:
				</p>
				<p>
				<code>maven clean was-ear-all</code>
				</p>
				<p>
				This will clean, build and deploy the portal as well as deploy the example portlet application.
				Note: make sure to first once execute:
				</p>
				<p>
				<code>switchToWebsphere.bat</code>
				</p>
				</subsection>
				<subsection name='Synchronizing the Portal with the latest version of Jetspeed-2'>
				<p>
				Because the portal uses jetspeed-2 jars stored in the local maven repository, newer version of jetspeed-2 jars will not automatically be downloaded from the remote bluesunrise maven repository.
				</p>
				<p>
				To synchronize with the latest available jetspeed-2 build, the sync-j2.cmd batch file needs to be executed which will clear out the jetspeed-2 jars from the local maven repository and upgrade to the latest jetspeed-2 maven plugin:
				</p>
				<p>
				<code>$WS_HOME\workspace\jetexpress>sync-j2.cmd</code>
				</p>
				<p>
				A following (full) portal build will then automatically download and use the latest jetspeed-2 jars.
				</p>
				</subsection>
			</section>
			<section name='Revision History'>
			<table>
				<tr>
					<td>Revision</td>
					<td>Date</td>
					<td>Author</td>
					<td>Comments</td>
				</tr>
				<tr>
					<td>0.1</td>
					<td>2005-01-01</td>
					<td>David Sean Taylor</td>
					<td>Initial draft</td>
				</tr>
				<tr>
					<td>0.2</td>
					<td>2006-01-10</td>
					<td>Ate Douma</td>
					<td>Further refinements and clean out of unused sections</td>
				</tr>
				<tr>
					<td>0.3</td>
					<td>2006-01-10</td>
					<td>David Sean Taylor</td>
					<td>Express refinements</td>
				</tr>
				<tr>
					<td>0.4</td>
					<td>2006-10-16</td>
					<td>David Sean Taylor</td>
					<td>Websphere 6.1 testing</td>
				</tr>
			</table>
			</section>
	</body>
</document>

