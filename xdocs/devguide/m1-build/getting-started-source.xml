<?xml version="1.0"?>
<!--
	Licensed to the Apache Software Foundation (ASF) under one or more
	contributor license agreements.  See the NOTICE file distributed with
	this work for additional information regarding copyright ownership.
	The ASF licenses this file to You under the Apache License, Version 2.0
	(the "License"); you may not use this file except in compliance with
	the License.  You may obtain a copy of the License at
	
	http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
-->
<document>
	<properties>
		<title>
			Getting Started with Jetspeed 2 using a Source Release (deprecated)
		</title>
		<subtitle>Getting ready to modify Jetspeed</subtitle>
		<authors>
			<person name="David Sean Taylor" email="taylor@apache.org" />
			<person name="Ate Douma" email="ate@apache.org" />
			<person name="David Le Strat" email="dlestrat@apache.org" />
			<person name="Ron Wheeler"
				email="rwheeler@artifact-software.com" />
		</authors>
	</properties>
	<body>
		<section name="1. Building Jetspeed with Maven-1">
			<p><i>Note the Maven-1 build will be <b>deprecated</b> in Jetspeed version 2.2</i></p>		
			<subsection name="Source Basic Assumptions">
				<ul>
					<li>
						Unless otherwise specified, you should be
						running all maven build commands from within the
						Jetspeed directory (if you are just building
						Jetspeed) or from within your custom portal
						directory.
					</li>
					<li>
						You must use "/" as a file seperator on both
						*nix and windows, e.g. c:/windows, and /home.
					</li>
				</ul>
			</subsection>
			<subsection name="Naming Conventions">
				<p>
					Below is a listing of common conventions used within
					this document.
				</p>
				<p>
					Variables are represented as ${
					<i>some_variable</i>
					}. This may signify a setting in Jetspeed or may
					represent a setting within your environment.
					Properties files are also capable of specifying
					variables within them.
				</p>
				<p>
					For example, ${org.apache.jetspeed.server.home}
					references either a property defined further up in
					the properties file, a variable that has been
					defined somehwere within the build process or
					defined in another build file within Jetspeed.
				</p>
				<ul>
					<li>
						<b>${USER_HOME}</b>
						: This is the user's home directory. For Windows
						systems, this generally c:\Documents and
						Settings\${userName} where ${userName} is the
						name you use to log into windows.
						<br />
						${USER.HOME} is synonymous with ${USER_HOME}
						within this document.
					</li>
					<li>
						<b>${CATALINA_HOME}</b>
						: This is the location of your tomcat
						installation, e.g.
						<i>c:/tomcat</i>
						.
					</li>
				</ul>
			</subsection>
			<subsection name="Source Subversion (SVN)">
				<p>
					<a href="http://subversion.tigris.org">
						Subversion (SVN)
					</a>
					is used in the Jetspeed project to manage the source
					files. SVN is very similar to CVS. For those user's
					on Windows system who prefer non-command line access
					we suggest using
					<a href="http://tortoisesvn.tigris.org">
						TortoiseSVN
					</a>
					which plugs into your Windows Explorer view. For
					those using the Eclipse IDE, the
					<a href="http://subclipse.tigris.org">Subclipse</a>
					plugin is available for SVN access.
				</p>
			</subsection>
			<subsection name="Maven Setup">
				<p>
					We will not go into the specifics of Maven as that
					is beyond the scope of this document. However, here
					are a few bits of standard maven jargon we feel is
					important for you to know.
				</p>
				<p>
					You will see mention of a
					<i>maven repository</i>
					in this document. When you install Maven the .maven/
					directory is created in your ${USER_HOME) directory.
					<br />
					Under .maven/ you will see a
					<i>repository</i>
					directory. This is were Maven stores all the jars
					that it downloads when you run your builds. This is
					also were Maven puts your jars and wars that you
					build. They will be stored in a directory structure
					that has the format of
					${groupId}/${projectId}/jars/${projectId}-{$version}.jar
					for jar files and
					${groupId}/${projectId}/wars/${projectId}.war for
					war files. The ${groupId}, ${projectId} and
					${version} variables are discussed later on in this
					document. Jar and war files will also be created in
					your project in the
					<i>/target</i>
					directory.
				</p>
			</subsection>
		</section>

		<section name='2. Jetspeed build and maven-plugin Properties'>
			<p>You need to set a few properties.</p>
			<p>
				Creating your own custom portal is very easy with the
				maven plugin provided by Jetspeed 2. And, it is used
				when you build jetspeed from source as well. In fact,
				the jetspeed-2 build procedure is just one example of a
				custom portal configuration and setup.
			</p>
			<p>
				The Jetspeed 2 maven-plugin defines default values for
				most of the properties you can set, but not all. When
				you download or checkout the jetspeed-2 source tree,
				you'll see it contains a project.properties file in the
				root folder overriding and setting some of these
				properties.
			</p>
			<p>
				As said before: not all properties are provided with a
				default value: you
				<i>must</i>
				specify a few yourself. And you'll most likely want to
				override some others.
			</p>
			<p>
				Set or override the build or maven-plugin properties in
				your
				<code>${USER_HOME}/build.properties</code>
				file.
			</p>
			<subsection
				name="Required Portal Configuration Properties">
				<table>
					<tr>
						<th>Property</th>
						<th>Description</th>
						<th nowrap="nowrap">Default value</th>
					</tr>
					<tr>
						<td>
							<code>org.apache.jetspeed.portal.home</code>
						</td>
						<td>
							The folder where the maven-plugin will
							(re)create or update your custom portal
							maven project configuration (with goal
							<code>j2:portal.conf.project</code>
							). This will be where you will be performing
							all of your future custom portal
							development.
							<br />
							Example:
							<code>/home/myportal/</code>
						</td>
						<td>
							<i>no default</i>
						</td>
					</tr>
					<tr>
						<td>
							<code>
								org.apache.jetspeed.portal.groupId
							</code>
						</td>
						<td>
							The (maven) short name of your portal
							project group.
							<br />
							This value is used for the maven repository
							folder in which the project artifacts (like
							the portal war file) is stored.
							<br />
							Example:
							<code>myprojects</code>
						</td>
						<td>
							<i>no default</i>
						</td>
					</tr>
					<tr>
						<td>
							<code>
								org.apache.jetspeed.portal.artifactId
							</code>
						</td>
						<td>
							The (maven) short name of your portal
							project.
							<br />
							This value is used for the portal war file
							and the (portal) web application context
							name.
							<br />
							Example:
							<code>myportal</code>
						</td>
						<td>
							<i>no default</i>
						</td>
					</tr>
					<tr>
						<td>
							<code>org.apache.jetspeed.portal.name</code>
						</td>
						<td>
							The (maven) full name of your portal
							project.
							<br />
							This value is used by maven for generating
							JavaDoc titles.
							<br />
							Example:
							<code>My Test Portal</code>
						</td>
						<td>
							<i>no default</i>
						</td>
					</tr>
					<tr>
						<td>
							<code>
								org.apache.jetspeed.portal.currentVersion
							</code>
						</td>
						<td>
							The current version of your portal project.
							<br />
							This value is used by maven as name postfix
							for the generated artifacts.
							<br />
							Example:
							<code>1.0</code>
						</td>
						<td>
							<i>no default</i>
						</td>
					</tr>
				</table>
			</subsection>
			<subsection
				name="Optional Portal Configuration Properties">
				<p>
					The following properties all specify a subfolder of
					the
					<code>${org.apache.jetspeed.portal.home}</code>
					location as defined above.
				</p>
				<table>
					<tr>
						<th>Property</th>
						<th>Description</th>
						<th nowrap="nowrap">Default value</th>
					</tr>
					<tr>
						<td>
							<code>
								org.apache.jetspeed.portal.conf.dir
							</code>
						</td>
						<td>
							The folder where the maven-plugin will
							generate and copy application server
							specific configuration files as a tomcat
							application context descriptor.
							<br />
							This folder and its contents is created or
							updated by plugin goal
							<code>j2:portal.conf.tomcat</code>
							.
						</td>
						<td>
							<i>target/portal-conf</i>
						</td>
					</tr>
					<tr>
						<td>
							<code>
								org.apache.jetspeed.portal.sql.dir
							</code>
						</td>
						<td>
							The folder where the maven-plugin will
							generate and copy portal and database server
							specific sql DDL and DML scripts.
							<br />
							This folder and its contents is always
							(re)created by plugin goal
							<code>j2:portal.conf.sql</code>
							.
						</td>
						<td>
							<i>target/portal-sql</i>
						</td>
					</tr>
					<tr>
						<td>
							<code>
								org.apache.jetspeed.portal.db.dir
							</code>
						</td>
						<td>
							The folder where the maven-plugin will
							create build-in HSQLDB database(s).
							<br />
							This folder and its contents is created or
							updated by plugin goal
							<code>j2:start.production.server</code>
							or
							<code>j2:start.test.server</code>.
							<br/>
							<i>This property is not needed/used for anything else.</i>
						</td>
						<td>
							<i>target/portal-db</i>
						</td>
					</tr>
					<tr>
						<td>
							<code>
								org.apache.jetspeed.portal.webapp.dir
							</code>
						</td>
						<td>
							The folder where the maven-plugin will copy
							the standard jetspeed web application
							resources.
							<br />
							This folder and its contents is created or
							updated by plugin goal
							<code>j2:portal.copy.webapp</code>
							.
						</td>
						<td>
							<i>
								target/${org.apache.jetspeed.portal.artifactId}
							</i>
						</td>
					</tr>
					<tr>
						<td>
							<code>
								org.apache.jetspeed.portal.target.dir
							</code>
						</td>
						<td>
							The folder where the maven-plugin will
							generate and copy runtime portal
							configuration files.
							<br />
							These configuration files contain values
							derived from build/plugin properties for the
							portal and OJB.
							<br />
							This folder and its contents is created or
							updated by plugin goal
							<code>j2:portal.conf.jetspeed</code>
							and goal
							<code>j2:portal.conf.ojb</code>
							.
						</td>
						<td>
							<i>
								target/${org.apache.jetspeed.portal.artifactId}
							</i>
						</td>
					</tr>
				</table>
			</subsection>
			<subsection name="Required Application Server Properties">
				<p>
					<i>
						Note: The maven-plugin currently only supports
						the Tomcat Server 5.0.x or 5.5.x
					</i>
				</p>
				<table>
					<tr>
						<th>Property</th>
						<th>Description</th>
						<th nowrap="nowrap">Default value</th>
					</tr>
					<tr>
						<td>
							<code>org.apache.jetspeed.server.home</code>
						</td>
						<td>
							The root folder of your Tomcat server
							installation.
							<br />
							Example:
							<code>${CATALINA_HOME}/</code>
							.
						</td>
						<td>
							<i>no default</i>
						</td>
					</tr>
					<tr>
						<td>
							<code>
								org.apache.jetspeed.server.shared
							</code>
						</td>
						<td>
							The location of the shared jars in your
							Tomcat installation.
							<br />
							Example:
							<code>
								${org.apache.jetspeed.server.home}/shared/lib/
							</code>
						</td>
						<td>
							<i>no default</i>
						</td>
					</tr>
					<tr>
						<td>
							<code>
								org.apache.jetspeed.deploy.war.dir
							</code>
						</td>
						<td>
							The location of web applications in your
							Tomcat installation.
							<br />
							Example:
							<code>
								${org.apache.jetspeed.server.home}/webapps/
							</code>
						</td>
						<td>
							<i>no default</i>
						</td>
					</tr>
					<tr>
						<td>
							<code>
								org.apache.jetspeed.services.autodeployment.user
							</code>
						</td>
						<td>
							A Tomcat user with the manager role.
							<br />
							Used to access the Tomcat Manager
							application from within the portal,
							explained below.
						</td>
						<td>
							<i>no default</i>
						</td>
					</tr>
					<tr>
						<td>
							<code>
								org.apache.jetspeed.services.autodeployment.password
							</code>
						</td>
						<td>
							The password of the Tomcat user above.
							<br />
							Used to access the Tomcat Manager
							application from within the portal,
							explained below.
						</td>
						<td>
							<i>no default</i>
						</td>
					</tr>
					<tr>
						<td>
							<code>
								org.apache.jetspeed.catalina.version.major
							</code>
						</td>
						<td>
							The major version of the Tomcat server you
							are using: 5 or 5.5
							<br />
							Example:
							<code>5.5</code>
						</td>
						<td>
							<i>no default</i>
						</td>
					</tr>
				</table>
			</subsection>
			<subsection name="Optional Database Server Properties">
				<p>
					Jetspeed-2 and its maven-plugin uses, as well as
					provides, by default a Derby database.
				</p>
				<p>
					If you want to use a different database you will
					need to override the following properties:
				</p>
				<table>
					<tr>
						<th>Property</th>
						<th>Description</th>
						<th nowrap="nowrap">Default value</th>
					</tr>
					<tr>
						<td>
							<code>
								org.apache.jetspeed.production.database.default.name
							</code>
						</td>
						<td>
							The type of database you are using. Used for
							sql script generation with Torque.
							<br />
							Currently supported databases (with
							corresponding Torque target database name):
							<ul>
								<li>derby</li>
								<li>hsql (hypersonic)</li>
								<li>oracle (oracle)</li>
								<li>mysql (mysql)</li>
								<li>postgres (postgresql)</li>
								<li>mssql (mssql)</li>
								<li>sapdb (sapdb)</li>
								<li>db2 (db2)</li>
							</ul>
						</td>
						<td>derby</td>
					</tr>
					<tr>
						<td>
							<code>
								org.apache.jetspeed.derbydatabase.path
							</code>
						</td>
						<td>Path to where the embedded derby database will be created/expected</td>
						<td>/tmp</td>
					</tr>
					<tr>
						<td>
							<code>
								org.apache.jetspeed.production.database.url
							</code>
						</td>
						<td>The jdbc connection url</td>
						<td>jdbc:derby:${org.apache.jetspeed.derbydatabase.path}/productiondb;create=true</td>
					</tr>
					<tr>
						<td>
							<code>
								org.apache.jetspeed.production.database.user
							</code>
						</td>
						<td>The database user name to connect with.</td>
						<td>sa</td>
					</tr>
					<tr>
						<td>
							<code>
								org.apache.jetspeed.production.database.password
							</code>
						</td>
						<td>
							The database user its password to connect
							with.
						</td>
						<td>
							<i>empty</i>
						</td>
					</tr>
					<tr>
						<td>
							<code>
								org.apache.jetspeed.production.database.driver
							</code>
						</td>
						<td>The jdbc driver class name</td>
						<td>org.apache.derby.jdbc.EmbeddedDriver</td>
					</tr>
					<tr>
						<td>
							<code>
								org.apache.jetspeed.production.jdbc.drivers.path
							</code>
						</td>
						<td>
							A Java classpath style path to the jdbc
							driver classes or jar(s) needed for
							connecting to the database.
							<br />
							Example:
							<code>
								/lib/ojdbc14.jar;/lib/nls_charset12.jar
							</code>
						</td>
						<td>
							<i>empty</i>
						</td>
					</tr>
				</table>
			</subsection>
			<subsection
				name="Example: A minimal custom portal configuration">
				<p>
					Make sure you have define at least the required
					properties as described above in your
					<code>${USER_HOME}/build.properties</code>
					. A minimal custom portal configuration using the
					default embedded Derby database can be something like:
					<source>
						<![CDATA[
# required portal configuration properties          
org.apache.jetspeed.portal.home           = /home/myportal/
org.apache.jetspeed.portal.groupId        = myprojects
org.apache.jetspeed.portal.artifactId     = myportal
org.apache.jetspeed.portal.name           = My Test Portal
org.apache.jetspeed.portal.currentVersion = 1.0

# required application server properties
org.apache.jetspeed.server.home                      = ${CATALINA_HOME}/
org.apache.jetspeed.server.shared                    = ${org.apache.jetspeed.server.home}/shared/lib/
org.apache.jetspeed.deploy.war.dir                   = ${org.apache.jetspeed.server.home}/webapps/
org.apache.jetspeed.services.autodeployment.user     = j2deployer
org.apache.jetspeed.services.autodeployment.password = xxxxx
org.apache.jetspeed.catalina.version.major           = 5.5]]>
					</source>
					<i>
						Note: If you're going to build the default
						Jetspeed 2 portal directly from the source only
						the
						<code>org.apache.jetspeed.portal.home</code>
						property is required from the set of required
						portal configuration properties.
					</i>
				</p>
			</subsection>
		</section>
		<section name="4. Creating a new Portal Application">
			<p>
				Now we're going to configure, setup and build a new
				custom portal application using the Jetspeed-2
				maven-plugin.
			</p>
			<subsection
				name="4.1 Set the maven remote repository lookup configuration">
				<p>
					To be able to setup a Jetspeed 2 based portal the
					maven remote repository lookup needs to be
					configured properly in your
					<code>${USER_HOME}/build.properties</code>
					:
					<source>
						<![CDATA[
maven.repo.remote = http://www.bluesunrise.com/maven/, http://www.ibiblio.org/maven/, \
                    http://dist.codehaus.org/, http://cvs.apache.org/repository]]>
					</source>
					<i>
						Note: the order in which these repositories must
						be specified is significant!
					</i>
				</p>
			</subsection>
			<subsection
				name="4.2 Install the Jetspeed 2 maven-plugin">
				<p>
					The first time, and when you want to upgrade to a
					newer version of Jetspeed 2, you need to install the
					maven-plugin as follows:
					<source>
						<![CDATA[
maven -DartifactId=maven-jetspeed2-plugin -DgroupId=org.apache.portals.jetspeed-2 -Dversion=2.1.3 plugin:download]]>
					</source>
					<i>
						Note: you can set the version flag to the
						specific version you want to install,
						2.1.3 is just an example here.
					</i>
				</p>
			</subsection>
			<subsection name="4.3 Generate a new portal project">
				<p>
					Once you have the maven-plugin installed and set
					properties as needed, generate a default portal
					configuration using the plugin as follows:
					<source>
						<![CDATA[
maven j2:portal.genapp]]>
					</source>
					<i>
						This maven goal actually executes several
						subgoals which are further described in the
						<a href="j2-maven-plugin.html">
							maven-plugin documentation
						</a>
						itself.
					</i>
				</p>
			</subsection>
			<subsection
				name="4.4 Further customization of the portal">
				<p>
					This section doesn't specify anything to do. After
					the portal project is generated you can adapt and
					customize it to your taste by overriding and merging
					your own configurations and extensions.
				</p>
				<p>
					You can regenerate or update (part of) your portal
					project with the
					<code>j2:portal.genapp</code>
					goal as described in the previous section or use its
					subgoals directly.
				</p>
			</subsection>
			<subsection name="4.5 Build the portal">
				<p>
					Once your portal configuration and setup is ready,
					you can build and install the portal application in
					your local maven repository (as needed for
					deployment) using the following standard maven goal
					from your custom portal project directory (in
					${org.apache.jetspeed.portal.home}):
					<source>
						<![CDATA[
maven war:install]]>
					</source>
				</p>
				<p>
					You are now ready to deploy the new portal
					application. For this, skip the following section on
					building the Jetspeed 2 portal from source and
					continue with the
					<a href="#6__Deploy_and_Run">deployment</a>
					section.
				</p>
			</subsection>
		</section>
		<section name='5. Build Jetspeed 2 from source'>
			<p>
				Build the Jetspeed 2 portal directly from the source is
				somewhat easier to do but should only be done if you
				don't want to create a new, customizable portal.
			</p>
			<subsection
				name="5.1 Setup the Jetspeed 2 source and build properties">
				<p>
					The Jetspeed 2 source contains a
					<code>project.properties</code>
					file which provides all of the required portal
					configuration settings as described
					<a
						href="#Required_Portal_Configuration_Properties">
						above
					</a>
					.
				</p>
				<p>
					You should
					<i>
						<b>not</b>
					</i>
					define any of those properties in your
					<code>${USER_HOME}/build.properties</code>
					.
					<br />
					Instead, you
					<i>must</i>
					set a
					<code>org.apache.jetspeed.project.home</code>
					property, specifying the location where you expanded
					the downloaded source or checked out the source from
					subversion, like:
					<source>
						<![CDATA[
# required Jetspeed 2 portal configuration property for building from the source
org.apache.jetspeed.project.home = /home/apache/jetspeed-2/]]>
					</source>
					<i>
						Note: you still need to specify the required
						application server properties as described
						<a
							href="#Required_Application_Server_Properties">
							above
						</a>
						.
					</i>
				</p>
				<p>
					The Jetspeed 2 project.properties uses this property
					to define the required
					<code>org.apache.portal.home</code>
					:
					<source>
						<![CDATA[
org.apache.jetspeed.portal.home = ${org.apache.jetspeed.project.home}]]>
					</source>
					So, they are the same when you build the Jetspeed 2
					portal from the source.
				</p>
				<p>
					When you are going to deploy the portal as described
					further below, you'll see references to the
					<code>org.apache.jetspeed.portal.home</code>
					which you can translate with the root folder of your
					Jetspeed 2 source.
				</p>
				<p>
					If you want to run the testcases when building the
					Jetspeed 2 sources
					<i>and</i>
					don't want to use the default Derby test database,
					you need to override the default test database
					properties, similar to the production database
					properties as described
					<a href="#Optional_Database_Server_Properties">
						above
					</a>
					:
					<ul>
						<li>
							<code>
								org.apache.jetspeed.test.database.default.name
							</code>
						</li>
						<li>
							<code>
								org.apache.jetspeed.test.database.url
							</code>
						</li>
						<li>
							<code>
								org.apache.jetspeed.test.database.user
							</code>
						</li>
						<li>
							<code>
								org.apache.jetspeed.test.database.password
							</code>
						</li>
						<li>
							<code>
								org.apache.jetspeed.test.database.driver
							</code>
						</li>
						<li>
							<code>
								org.apache.jetspeed.test.database.drivers.path
							</code>
						</li>
					</ul>
					<i>
						Note: due to outstanding issue
						<a
							href="http://issues.apache.org/jira/browse/JS2-320">
							JS2-320
						</a>
						you currently
						<b>must</b>
						use hard coded values for the test database
						properties.
					</i>
				</p>
			</subsection>
			<subsection name="Initialize the maven-plugin">
				<p>
					Instead of downloading and installing the Jetspeed 2
					maven-plugin, you are going to build and install it
					directly from the source. You will need to repeat
					this every time you update to a newer version of
					Jetspeed 2 or change its project configuration, the
					plugin itself or the resources used by the plugin.
				</p>
				<p>
					Build and install the maven-plugin as follows from
					the root directory of the Jetspeed-2 source:
					<source>
						<![CDATA[
cd ${org.apache.jetspeed.project.home}
maven initMavenPlugin]]>
					</source>
				</p>
			</subsection>
			<subsection
				name="Optional: start the HSQLDB test database first">
				<p>
					If you are going to run the testcases and want to use
					a HSQLDB database, you will
					need to start a test database before building
					Jetspeed 2 in a
					<i>separate</i>
					console:
					<source>
						<![CDATA[
cd ${org.apache.jetspeed.project.home}
maven j2:start.test.server]]>
					</source>
				</p>
				<p>
					After the build is finished you can stop the
					database and close this console with a
					<code>Ctrl-C</code>
					.
				</p>
			</subsection>
			<subsection
				name="Build the Jetspeed 2 portal and demo portlet applications">
				<p>
					For a full build and installation of the portal and
					the demo portlet applications in your local maven
					repository run:
					<source>
						<![CDATA[
cd ${org.apache.jetspeed.project.home}
maven allClean allBuild]]>
					</source>
				</p>
				<p>
					But, if you also want to run the testcases during
					the build run the following instead:
					<source>
						<![CDATA[
cd ${org.apache.jetspeed.project.home}
maven -Dmaven.test.skip=false allClean allBuild]]>
					</source>
				</p>
				<p>
					You are now ready to deploy the Jetspeed 2 Portal.
				</p>
			</subsection>
		</section>
		<section name="6. Deploy and Run">
			<subsection
				name="Optional: start the HSQLDB production database first">
				<p>
					If you are using a HSQLDB database you
					need to start it before deploying the portal.
				</p>
				<p>
					To start a HSQLDB production database run the
					following in a
					<i>separate</i>
					console:
					<source>
						<![CDATA[
cd ${org.apache.jetspeed.portal.home}
maven j2:start.production.server]]>
					</source>
				</p>
				<p>
					You need to have this database running during the
					deployment and while running the application server.
					Afterwards you can stop the database and close this
					console with a
					<code>Ctrl-C</code>
					.
				</p>
				<p>
					Note: this is required when using the
					<code>j2:quickStart</code>
					goal as described below. The Jetspeed 2 maven-plugin
					provides other (sub)goals which you can use without
					(re)creating a production database and/or inserting
					default portal configuration data. See the
					<a href="j2-maven-plugin.html">
						Plugin documentation
					</a>
					for further information about the available goals.
				</p>
			</subsection>
			<subsection name="Deploy">
				<p>
					We currently only cover deploying to Tomcat 5 or
					Tomcat 5.5.
				</p>
				<p>
					Information about deployment to other application
					servers can be found at the The Jetspeed 2
					<a
						href="http://wiki.apache.org/portals/Jetspeed2">
						Wiki
					</a>
					.
				</p>
				<p>
					To deploy a default Jetspeed 2 portal, including the
					demo portlet applications, run the following in a
					<i>separate</i>
					console:
					<source>
						<![CDATA[
cd ${org.apache.jetspeed.portal.home}
maven j2:quickStart]]>
					</source>
					<i>
						Note: the
						<a href="j2-maven-plugin.html">
							maven-plugin documentation
						</a>
						described other goals you can use to customize
						the deployment to your taste.
					</i>
				</p>
			</subsection>
			<subsection name="Run">
				<p>
					The final step is starting up your Tomcat server and
					the portal will automatically install any deployed
					portlet applications.
				</p>
				<p>
					Then you can access the portal with your browser at:
					<source><a href="http://localhost:8080/jetspeed">http://localhost:8080/jetspeed</a></source>
					or replace "jetspeed" in the above url with the name
					of you own portal application (
					<code>
						${org.apache.jetspeed.portal.artifactId}
					</code>
					).
				</p>
			</subsection>
			<subsection name="Default installed user accounts">
				<p>
					With the default Jetspeed 2 portal deployment,
					several example user accounts are inserted into the
					portal database with which you can logon to the
					portal:
					<table>
						<tr>
							<th>username</th>
							<th>password</th>
							<th>roles</th>
						</tr>
						<tr>
							<td>
								<code>admin</code>
							</td>
							<td>
								<code>admin</code>
							</td>
							<td>
								<code>admin, manager, user</code>
							</td>
						</tr>
						<tr>
							<td>
								<code>manager</code>
							</td>
							<td>
								<code>manager</code>
							</td>
							<td>
								<code>manager, user</code>
							</td>
						</tr>
						<tr>
							<td>
								<code>jetspeed</code>
							</td>
							<td>
								<code>jetspeed</code>
							</td>
							<td>
								<code>manager</code>
							</td>
						</tr>
						<tr>
							<td>
								<code>user</code>
							</td>
							<td>
								<code>user</code>
							</td>
							<td>
								<code>user</code>
							</td>
						</tr>
						<tr>
							<td>
								<code>tomcat</code>
							</td>
							<td>
								<code>tomcat</code>
							</td>
							<td></td>
						</tr>
					</table>
				</p>
			</subsection>
		</section>
	</body>
</document>
