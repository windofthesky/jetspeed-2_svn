<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<!--
Copyright 2004 The Apache Software Foundation

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<beans>
   
   <!-- Commons configuration object generated from jetspeed.properties -->
   <bean id="portal_configuration"
      class="org.apache.commons.configuration.PropertiesConfiguration">
    <constructor-arg>
      <value>${applicationRoot}/WEB-INF/conf/jetspeed.properties</value>
    </constructor-arg>
  </bean>  
  
  <!-- ServletConfig -->
    <bean id="javax.servlet.ServletConfig"
        class="org.apache.jetspeed.components.factorybeans.ServletConfigFactoryBean"
  />             


   
  <!-- Portlet Services  -->
  <bean id="PortalServices" 
  	   class="org.apache.jetspeed.services.JetspeedPortletServices" >
  	   <constructor-arg>
  	   	<map>
  	   	  <entry key="PortletRegistryComponent">
  	   	  	<ref bean="org.apache.jetspeed.components.portletregistry.PortletRegistry" />
  	   	  </entry>
  	   	  <entry key="SearchComponent">
  	   	  	<ref bean="org.apache.jetspeed.search.SearchEngine"/>
  	   	  </entry>
  	   	  <entry key="PAM">
  	   	  	<ref bean="PAM" />
  	   	  </entry>		  
  	   	  <entry key="UserManager">
  	   	    <ref bean="org.apache.jetspeed.security.UserManager"/>
  	   	  </entry>
  	   	  <entry key="PageManager">
  	   	    <ref bean="org.apache.jetspeed.page.PageManager"/>
  	   	  </entry>
  	   	  <entry key="RoleManager">
  	   	    <ref bean="org.apache.jetspeed.security.RoleManager"/>
  	   	  </entry>
  	   	  <entry key="GroupManager">
  	   	    <ref bean="org.apache.jetspeed.security.GroupManager"/>
  	   	  </entry>  	
  	   	  <entry key="Profiler">
  	   	  	<ref bean="org.apache.jetspeed.profiler.Profiler"/>
  	   	  </entry>   	  
  	   	  <entry key="SSO">
  	   	  	<ref bean="org.apache.jetspeed.sso.SSOProvider"/>
  	   	  </entry>   	  
  	   	</map>
  	   </constructor-arg>
  </bean>
  
  <!-- Template Locators -->
  <bean id="TemplateLocator" 
  	   class="org.apache.jetspeed.locator.JetspeedTemplateLocator" 
  	   init-method="start" destroy-method="stop" 
   >
  	   <constructor-arg>
  	   	 <list>
            <value>${applicationRoot}/WEB-INF/templates</value>         
         </list>
  	   </constructor-arg>
  	   <constructor-arg><value>${applicationRoot}</value></constructor-arg>
  </bean>
  
  <bean id="DecorationLocator" 
  	   class="org.apache.jetspeed.locator.JetspeedTemplateLocator" 
  	   init-method="start" destroy-method="stop"  
  >
  	   <constructor-arg>
  	   	 <list>
            <value>${applicationRoot}/WEB-INF/decorations</value>         
         </list>
  	   </constructor-arg>
  	   <constructor-arg><value>${applicationRoot}</value></constructor-arg>
  </bean>
  
  <!-- ID Generator -->
  <bean id="IdGenerator" 
  	   class="org.apache.jetspeed.idgenerator.JetspeedIdGenerator" init-method="start" destroy-method="stop" >
  	   <!-- ID Start value -->
  	   <constructor-arg index="0"><value>65536</value></constructor-arg>
  	   <!-- ID Prefix -->
  	   <constructor-arg index="1"><value>P-</value></constructor-arg>
  	   <!-- ID Suffix -->
  	   <constructor-arg index="2"><value></value></constructor-arg>
  </bean>
  
  <!-- Page File Cache -->
  <bean id="PageFileCache" 
  	   class="org.apache.jetspeed.cache.file.FileCache" 
  	   init-method="startFileScanner"
  	   destroy-method="stopFileScanner"
  	   >
  	   <!-- Scan rate for changes in cached files on the file system -->
  	   <constructor-arg index="0"><value>10</value></constructor-arg>
  	   <!-- Cache size -->
  	   <constructor-arg index="1"><value>100</value></constructor-arg>  	   
  </bean>
    
  <!-- Portlet Registry DAO-->
  <bean id="portletRegistryImpl" class="org.apache.jetspeed.components.portletregistry.PersistenceBrokerPortletRegistry" init-method="init">
    	<constructor-arg>
    		<value>META-INF/registry_repository.xml</value>
    	</constructor-arg>
    </bean>
		    
	<bean id="org.apache.jetspeed.components.portletregistry.PortletRegistry"
		  name="portletRegistry"
		  parent="baseTransactionProxy" >
		<property name="proxyInterfaces">
			<value>org.apache.jetspeed.components.portletregistry.PortletRegistry</value>
		</property>

		<property name="target"> 
			<ref bean="portletRegistryImpl"/>
		</property>
		<property name="transactionAttributes">
			<props>				
				<prop key="register*">PROPAGATION_REQUIRED,-org.apache.jetspeed.components.portletregistry.RegistryException</prop>
				<prop key="remove*">PROPAGATION_REQUIRED,-org.apache.jetspeed.components.portletregistry.RegistryException</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-org.apache.jetspeed.components.portletregistry.RegistryException</prop>
				<prop key="save*">PROPAGATION_REQUIRED,-org.apache.jetspeed.components.portletregistry.RegistryException</prop>
				<prop key="*">PROPAGATION_SUPPORTS</prop>
			</props>
		</property>
	</bean>
  
  <!-- Portlet Entity Access DAO-->
  <!--
  <bean id="systemCache" class="org.apache.jetspeed.cache.general.SimpleHashMapCache" />
     
     <bean id="systemCachingInterceptor" class="org.apache.jetspeed.components.interceptors.CachingInterceptor" >
    	<constructor-arg>
    		<ref bean="systemCache"/>
    	</constructor-arg>
     </bean>
    
    <bean id="systemRemoveFromCacheInterceptor" class="org.apache.jetspeed.components.interceptors.RemoveFromCacheInterceptor" >
    	<constructor-arg>
    		<ref bean="systemCache"/>
    	</constructor-arg>
    </bean>   	
    
    <bean id="portletEntityCachingAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <property name="advice">
             <ref bean="systemCachingInterceptor"/>
        </property>
        <property name="patterns">
         <list>
            <value>.*getPortletEntity.*</value>
        </list>
       </property>
    </bean>
    
    <bean id="portletEntityRemoveFromCacheAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <property name="advice">
             <ref bean="systemRemoveFromCacheInterceptor"/>
        </property>
        <property name="patterns">
         <list>
            <value>.*removePortletEntity.*</value>
        </list>
       </property>
    </bean>
    
    -->
    <!--
	  - PortletEntity business object: OJB implementation, as an inner bean wrapped
		- by an outer transactional proxy. The two bean definitions could have been separate,
		- but this is cleaner as there is no need to ever access the unwrapped object.
    -->

    <bean id="portletEntityAccessImpl" class="org.apache.jetspeed.components.portletentity.PersistenceBrokerPortletEntityAccess" >
    	<constructor-arg>
    		<ref bean="portletRegistry"/>    		
    	</constructor-arg>
    </bean>
    

	<bean id="org.apache.jetspeed.components.portletentity.PortletEntityAccessComponent" parent="baseTransactionProxy" 
		name="portletEntityAccess" >
		<property name="proxyInterfaces">
			<value>org.apache.jetspeed.components.portletentity.PortletEntityAccessComponent</value>
		</property>
		<property name="target">
			<ref bean="portletEntityAccessImpl"/>
		</property>
		<!--
		<property name="preInterceptors">
			<list>
				<ref bean="portletEntityCachingAdvisor"/>
				<ref bean="portletEntityRemoveFromCacheAdvisor"/>
			</list>
		</property>
		-->
		<property name="transactionAttributes">
			<props>				
				<prop key="remove*">PROPAGATION_REQUIRED</prop>
				<prop key="store*">PROPAGATION_REQUIRED,-org.apache.jetspeed.components.portletentity.PortletEntityNotStoredException</prop>
				<prop key="*">PROPAGATION_SUPPORTS</prop>
			</props>
		</property>
	</bean>
    
  <!-- Profiler DAO-->
  <bean id="profilerImpl" class="org.apache.jetspeed.profiler.impl.JetspeedProfilerImpl" init-method="init">
    	<constructor-arg>
    		<value>META-INF/profiler-ojb.xml</value>
    	</constructor-arg>
    </bean>
  
  <!-- Profiler -->  
  <bean id="org.apache.jetspeed.profiler.Profiler" 
        name="profiler"
        parent="baseTransactionProxy"        
  >  	   
		<property name="proxyInterfaces">
			<value>org.apache.jetspeed.profiler.Profiler</value>
		</property>
		<property name="target">
			<ref bean="profilerImpl"/>
		</property>
		<property name="transactionAttributes">
			<props>				
				<prop key="setRuleForPrincipal">PROPAGATION_REQUIRED,-org.apache.jetspeed.components.profiler.ProfilerException</prop>
				<prop key="store*">PROPAGATION_REQUIRED,-org.apache.jetspeed.components.profiler.ProfilerException</prop>
				<prop key="delete*">PROPAGATION_REQUIRED,-org.apache.jetspeed.components.profiler.ProfilerException</prop>
				<prop key="*">PROPAGATION_SUPPORTS</prop>
			</props>
		</property>		  	   
  </bean>
  
  <!-- Capabilities DAO-->
  <bean id="capabilitiesImpl" class="org.apache.jetspeed.capabilities.impl.JetspeedCapabilities" init-method="init">
    	<constructor-arg>
    		<value>META-INF/capabilities-ojb.xml</value>
    	</constructor-arg>
    </bean>
  
  <!-- Capabilities -->  
  <bean id="org.apache.jetspeed.capabilities.Capabilities" 
        name="capabilities"
        parent="baseTransactionProxy"        
  >  	   
		<property name="proxyInterfaces">
			<value>org.apache.jetspeed.capabilities.Capabilities</value>
		</property>
		<property name="target">
			<ref bean="capabilitiesImpl"/>
		</property>
		<property name="transactionAttributes">
			<props>				
				<prop key="*">PROPAGATION_SUPPORTS</prop>
			</props>
		</property>		  	   
  </bean>
  
  
  <!-- SSO Implementation -->
   <bean id="PersistenceBrokerSSOProvider" 
  	   class="org.apache.jetspeed.sso.impl.PersistenceBrokerSSOProvider"
  	   init-method="init"
   >  	   
  	   <constructor-arg index="0"><value>META-INF/sso_repository.xml</value></constructor-arg>  	    	     	   
  </bean>
   
  <bean id="org.apache.jetspeed.sso.SSOProvider" parent="baseTransactionProxy" 
  	name="ssoProvider"
  	>
		<property name="proxyInterfaces">
			<value>org.apache.jetspeed.sso.SSOProvider</value>
		</property>

		<property name="target"> 
			<ref bean="PersistenceBrokerSSOProvider"/>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="addSite">PROPAGATION_REQUIRED</prop>
				<prop key="removeSite">PROPAGATION_REQUIRED</prop>
				<prop key="addCredentialsForSite">PROPAGATION_REQUIRED</prop>
				<prop key="updateCredentialsForSite">PROPAGATION_REQUIRED</prop>
				<prop key="removeCredentialsForSite">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_SUPPORTS</prop>
			</props>
		</property>
		
  </bean> 
 
 <!-- Preferences Implementation -->
   <bean id="PreferencesProviderImpl" 
  	   class="org.apache.jetspeed.prefs.impl.PersistenceBrokerPreferencesProvider"
  	   init-method="init"
   >  	   
  	   <constructor-arg index="0"><value>META-INF/prefs_repository.xml</value></constructor-arg>  	   
  	   <constructor-arg type="boolean" index="1"><value>false</value></constructor-arg>  	     	   
  </bean>
  
  
  <bean id="org.apache.jetspeed.prefs.PreferencesProvider" parent="baseTransactionProxy" 
  	name="prefsProvider"
  	>
		<property name="proxyInterfaces">
			<value>org.apache.jetspeed.prefs.PreferencesProvider</value>
		</property>

		<property name="target"> 
			<ref bean="PreferencesProviderImpl"/>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="createNode*">PROPAGATION_REQUIRED</prop>
				<prop key="storeNode*">PROPAGATION_REQUIRED</prop>
				<prop key="removeNode*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_SUPPORTS</prop>
			</props>
		</property>
  </bean>
  
  <!-- PreferencesFaactory implementation -->
  
  <bean id="java.util.prefs.PreferencesFactory" 
  	class="org.apache.jetspeed.prefs.impl.PreferencesFactoryImpl"
  	name="prefsFactory" init-method="init"
  	>
  		<property name="prefsProvider"> 
			<ref bean="prefsProvider"/>
		</property>	
  </bean>
  
  
   <!-- Property Manager -->
   <bean id="PropertyManagerImpl" 
  	   class="org.apache.jetspeed.prefs.impl.PropertyManagerImpl"
  >  	   
      <!-- We don't use the Tx proxied prefs provider so that we can demarcate Txs
      	   exclusively for the PropertyManager -->
  	   <constructor-arg ><ref bean="PreferencesProviderImpl"/></constructor-arg>  	   
  </bean>
  
  
  <bean id="org.apache.jetspeed.prefs.PropertyManager" parent="baseTransactionProxy" 
  	     name="propertyManager"
  	     >
		<property name="proxyInterfaces">
			<value>org.apache.jetspeed.prefs.PropertyManager</value>
		</property>

		<property name="target"> 
			<ref bean="PropertyManagerImpl"/>
		</property>		
		<property name="transactionAttributes">
			<props>				
				<prop key="add*">PROPAGATION_REQUIRED</prop>
				<prop key="remove*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_SUPPORTS</prop>
			</props>
		</property>		
  </bean>
  
 <!-- ************** Security SPI Handlers ************** -->
  <!-- Security SPI: CommonQueries -->
  <bean id="org.apache.jetspeed.security.spi.impl.SecurityAccessImpl" 
  	   class="org.apache.jetspeed.security.spi.impl.SecurityAccessImpl"
  	   init-method="init"
  >  	   
  	   <constructor-arg ><value>META-INF/security_repository.xml</value></constructor-arg>  	   
  </bean>
  
  <bean id="org.apache.jetspeed.security.spi.SecurityAccess" parent="baseTransactionProxy" 
		name="SecurityCommonQueries" >
		<property name="proxyInterfaces">
			<value>org.apache.jetspeed.security.spi.SecurityAccess</value>
		</property>
		<property name="target">
			<ref bean="org.apache.jetspeed.security.spi.impl.SecurityAccessImpl"/>
		</property>
		<property name="transactionAttributes">
			<props>				
				<prop key="remove*">PROPAGATION_REQUIRED</prop>
				<prop key="set*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_SUPPORTS</prop>
			</props>
		</property>
   </bean>
  
  <bean id="org.apache.jetspeed.security.spi.CredentialPasswordValidator" 
       class="org.apache.jetspeed.security.spi.impl.DefaultCredentialPasswordValidator"/>

  <bean id="org.apache.jetspeed.security.spi.CredentialPasswordEncoder" 
       class="org.apache.jetspeed.security.spi.impl.MessageDigestCredentialPasswordEncoder">
       <constructor-arg index="0"><value>SHA-1</value></constructor-arg>       
  </bean>       

  <bean id="org.apache.jetspeed.security.spi.PasswordCredentialProvider" 
       class="org.apache.jetspeed.security.spi.impl.DefaultPasswordCredentialProvider">
       <constructor-arg index="0"><ref bean="org.apache.jetspeed.security.spi.CredentialPasswordValidator"/></constructor-arg>       
       <constructor-arg index="1"><ref bean="org.apache.jetspeed.security.spi.CredentialPasswordEncoder"/></constructor-arg>       
  </bean>       

  <bean id="org.apache.jetspeed.security.spi.InternalPasswordCredentialInterceptor" 
       class="org.apache.jetspeed.security.spi.impl.InternalPasswordCredentialHistoryHandlingInterceptor">
       <!-- maxNumberOfAuthenticationFailures -->
       <constructor-arg index="0"><value>3</value></constructor-arg>  
       <!-- maxLifeSpanInDays -->     
       <constructor-arg index="1"><value>60</value></constructor-arg>       
       <!-- historySize -->     
       <constructor-arg index="2"><value>3</value></constructor-arg>       
  </bean>

  <!-- Security SPI: CredentialHandler -->
  <bean id="org.apache.jetspeed.security.spi.CredentialHandler" 
       class="org.apache.jetspeed.security.spi.impl.DefaultCredentialHandler"
  >       
       <constructor-arg index="0"><ref bean="org.apache.jetspeed.security.spi.SecurityAccess"/></constructor-arg>       
       <constructor-arg index="1"><ref bean="org.apache.jetspeed.security.spi.PasswordCredentialProvider"/></constructor-arg>       
       <constructor-arg index="2"><ref bean="org.apache.jetspeed.security.spi.InternalPasswordCredentialInterceptor"/></constructor-arg>       
  </bean>
  
  <!-- Security SPI: UserSecurityHandler -->
  <!-- The DefaultUSerSecurityHandler uses the raw SecurityAccessImpl so that it
  	   may demarcate its own transactions -->
  <bean id="org.apache.jetspeed.security.spi.UserSecurityHandlerImpl" 
  	   class="org.apache.jetspeed.security.spi.impl.DefaultUserSecurityHandler"
  >  	   
  	   <constructor-arg ><ref bean="org.apache.jetspeed.security.spi.SecurityAccess"/></constructor-arg>  	   
  </bean>
  
  <bean id="org.apache.jetspeed.security.spi.UserSecurityHandler" parent="baseTransactionProxy" 
		name="userSecurityHandler" >
		<property name="proxyInterfaces">
			<value>org.apache.jetspeed.security.spi.UserSecurityHandler</value>
		</property>
		<property name="target">
			<ref bean="org.apache.jetspeed.security.spi.UserSecurityHandlerImpl"/>
		</property>
		<property name="transactionAttributes">
			<props>				
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
   </bean>
  
  <!-- Security SPI: RoleSecurityHandler -->
  <bean id="org.apache.jetspeed.security.spi.RoleSecurityHandler" 
  	   class="org.apache.jetspeed.security.spi.impl.DefaultRoleSecurityHandler"
  >  	   
  	   <constructor-arg ><ref bean="org.apache.jetspeed.security.spi.SecurityAccess"/></constructor-arg>
  </bean>
  
  <!-- Security SPI: GroupSecurityHandler -->
  <bean id="org.apache.jetspeed.security.spi.GroupSecurityHandler" 
  	   class="org.apache.jetspeed.security.spi.impl.DefaultGroupSecurityHandler"
  >  	   
  	   <constructor-arg ><ref bean="org.apache.jetspeed.security.spi.SecurityAccess"/></constructor-arg>
  </bean>
  
  <!-- Security SPI: SecurityMappingHandler -->
  <bean id="org.apache.jetspeed.security.spi.SecurityMappingHandler" 
  	   class="org.apache.jetspeed.security.spi.impl.DefaultSecurityMappingHandler"
  >  	   
  	   <constructor-arg ><ref bean="org.apache.jetspeed.security.spi.SecurityAccess"/></constructor-arg>
  	   <!-- Default role hierarchy strategy is by generalization.  Add contructor-arg to change the strategy. -->
  	   <!-- Default group hierarchy strategy is by generalization.  Add contructor-arg to change the strategy. -->
  </bean>
  
  <!-- ************** Security Providers ************** -->
  <!-- Security: Default Authentication Provider -->
  <bean id="org.apache.jetspeed.security.AuthenticationProvider" 
  	   class="org.apache.jetspeed.security.impl.AuthenticationProviderImpl"
  >  	   
  	   <constructor-arg index="0"><value>DefaultAuthenticator</value></constructor-arg>
  	   <constructor-arg index="1"><value>The default authenticator</value></constructor-arg>
  	   <constructor-arg index="2"><value>login.conf</value></constructor-arg>
  	   <constructor-arg index="3"><ref bean="org.apache.jetspeed.security.spi.CredentialHandler"/></constructor-arg>
  	   <constructor-arg index="4"><ref bean="org.apache.jetspeed.security.spi.UserSecurityHandler"/></constructor-arg>
  </bean>
  
  <!-- Security: Authentication Provider Proxy -->
  <bean id="org.apache.jetspeed.security.AuthenticationProviderProxy" 
  	   class="org.apache.jetspeed.security.impl.AuthenticationProviderProxyImpl"
  >  	   
  	   <constructor-arg >
  	   		<list>
  	   			<ref bean="org.apache.jetspeed.security.AuthenticationProvider"/>
  	   		</list>
  	   </constructor-arg>
  	   <constructor-arg ><value>DefaultAuthenticator</value></constructor-arg>
  </bean>
  
  <!-- Security: Security Provider -->
  <bean id="org.apache.jetspeed.security.SecurityProvider" 
  	   class="org.apache.jetspeed.security.impl.SecurityProviderImpl"
  >  	   
  	   <constructor-arg ><ref bean="org.apache.jetspeed.security.AuthenticationProviderProxy"/></constructor-arg>
  	   <constructor-arg ><ref bean="org.apache.jetspeed.security.spi.RoleSecurityHandler"/></constructor-arg>
  	   <constructor-arg ><ref bean="org.apache.jetspeed.security.spi.GroupSecurityHandler"/></constructor-arg>
  	   <constructor-arg ><ref bean="org.apache.jetspeed.security.spi.SecurityMappingHandler"/></constructor-arg>
  </bean>
  
  <!-- Security: User Manager -->
  <bean id="org.apache.jetspeed.security.UserManager" 
  	   class="org.apache.jetspeed.security.impl.UserManagerImpl"
  >  	   
  	   <constructor-arg ><ref bean="org.apache.jetspeed.security.SecurityProvider"/></constructor-arg>
  </bean>
  
   <!-- Security: Group Manager -->
  <bean id="org.apache.jetspeed.security.GroupManager" 
  	   class="org.apache.jetspeed.security.impl.GroupManagerImpl"
  >  	   
  	   <constructor-arg ><ref bean="org.apache.jetspeed.security.SecurityProvider"/></constructor-arg>   
  </bean>
  
  <!-- Security: Role Manager -->
  <bean id="org.apache.jetspeed.security.RoleManager" 
  	   class="org.apache.jetspeed.security.impl.RoleManagerImpl"
  >  	   
  	   <constructor-arg ><ref bean="org.apache.jetspeed.security.SecurityProvider"/></constructor-arg>   
  </bean>
  
  <!-- ************** Login Module ************** -->
  <!-- Security: Login Module Proxy -->
  <bean id="org.apache.jetspeed.security.LoginModuleProxy" 
  	   class="org.apache.jetspeed.security.impl.LoginModuleProxyImpl"
  >  	   
  	   <constructor-arg ><ref bean="org.apache.jetspeed.security.UserManager"/></constructor-arg>  	   
  </bean>

  
  <!-- ************** Authorization ************** -->
  <!-- Security: Permission Manager -->
  <bean id="org.apache.jetspeed.security.impl.PermissionManagerImpl" 
  	   class="org.apache.jetspeed.security.impl.PermissionManagerImpl"  />
  
  <bean id="org.apache.jetspeed.security.PermissionManager" parent="baseTransactionProxy" 
		name="permissionManager" >
		<property name="proxyInterfaces">
			<value>org.apache.jetspeed.security.PermissionManager</value>
		</property>
		<property name="target">
			<ref bean="org.apache.jetspeed.security.impl.PermissionManagerImpl"/>
		</property>
		<property name="transactionAttributes">
			<props>				
				<prop key="remove*">PROPAGATION_REQUIRED</prop>
				<prop key="grant*">PROPAGATION_REQUIRED</prop>
				<prop key="revoke*">PROPAGATION_REQUIRED</prop>
				<prop key="grant*">PROPAGATION_REQUIRED</prop>
				<prop key="add*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_SUPPORTS</prop>
			</props>
		</property>
   </bean>
  
  <!-- Security: RDBMS Policy implementation for JAAS -->
  <bean id="org.apache.jetspeed.security.impl.RdbmsPolicy" 
  	   class="org.apache.jetspeed.security.impl.RdbmsPolicy"
  >  	   
  	   <constructor-arg ><ref bean="org.apache.jetspeed.security.PermissionManager"/></constructor-arg>  	   
  </bean>
  
  <!-- Security: Authorization Provider -->
  <bean id="org.apache.jetspeed.security.AuthorizationProvider" 
  	   class="org.apache.jetspeed.security.impl.AuthorizationProviderImpl"
  >  	   
  	   <constructor-arg ><ref bean="org.apache.jetspeed.security.impl.RdbmsPolicy"/></constructor-arg>   
  </bean>
  
  <!-- User Info -->
  <bean id="org.apache.jetspeed.userinfo.UserInfoManager" 
  	   class="org.apache.jetspeed.userinfo.impl.UserInfoManagerImpl"
  >
     <constructor-arg ><ref bean="org.apache.jetspeed.security.UserManager"/></constructor-arg>  	     	   
     <constructor-arg ><ref bean="org.apache.jetspeed.components.portletregistry.PortletRegistry"/></constructor-arg>

  </bean>
  
  <!--  Navigational State component -->
  <bean id="org.apache.jetspeed.container.state.NavigationalStateComponent" 
  	   class="org.apache.jetspeed.container.state.impl.JetspeedNavigationalStateComponent"
  >  	   
       <constructor-arg index="0"><value>org.apache.jetspeed.container.state.impl.SessionFullNavigationalState</value></constructor-arg>
       <constructor-arg index="1"><value>org.apache.jetspeed.container.url.impl.PathInfoEncodingPortalURL</value></constructor-arg>
       <constructor-arg index="2"><value>org.apache.jetspeed.container.state.impl.JetspeedNavigationalStateCodec</value></constructor-arg>       
  </bean>
  
  <!-- Request Context -->
   <bean id="org.apache.jetspeed.request.RequestContextComponent" 
  	   class="org.apache.jetspeed.request.JetspeedRequestContextComponent"
  >  	   
  	   <constructor-arg ><value>org.apache.jetspeed.request.JetspeedRequestContext</value></constructor-arg>
  	   <constructor-arg ><ref bean="org.apache.jetspeed.userinfo.UserInfoManager" /></constructor-arg>  	   
  </bean>
  
  <!-- Portlet Window Component -->
  <bean id="org.apache.jetspeed.container.window.PortletWindowAccessor" 
  	   class="org.apache.jetspeed.container.window.impl.PortletWindowAccessorImpl"
  >  	   
  	   <constructor-arg ><ref bean="org.apache.jetspeed.components.portletentity.PortletEntityAccessComponent" /></constructor-arg>
  </bean>
  
  <!-- Pluto Portlet Container -->
  <bean id="Pluto" class="org.apache.pluto.PortletContainerImpl" />  	   
  
  <!-- Jetspeed 2's wrapper around Pluto -->
  <bean id="org.apache.pluto.PortletContainer" 
  	   class="org.apache.jetspeed.container.JetspeedPortletContainerWrapper"  >  	   
  	   <constructor-arg ><ref bean="Pluto" /></constructor-arg>
  </bean>
  
  <!-- Portlet Renderer -->
  <bean id="org.apache.jetspeed.aggregator.PortletRenderer" 
  	   class="org.apache.jetspeed.aggregator.impl.PortletRendererImpl"  
  	   init-method="start" destroy-method="stop"
  >  	   
  	   <constructor-arg ><ref bean="org.apache.pluto.PortletContainer" /></constructor-arg>
  	   <constructor-arg ><ref bean="org.apache.jetspeed.container.window.PortletWindowAccessor" /></constructor-arg>
  </bean>
  
  <!-- Portlet Cache -->
  <bean id="portletCache" 
  	   class="org.apache.jetspeed.cache.PortletCache"  
  >  	   

  </bean>
  
  <!-- Portlet Factory -->
  <bean id="portletFactory" 
  	   class="org.apache.jetspeed.factory.JetspeedPortletFactory"  
  >  	   
  	   <constructor-arg ><ref bean="portletCache" /></constructor-arg>  	   
  </bean>
  
  <!-- Portlet Factory Proxy Accessor-->
  <bean id="portletFactoryProxy" 
  	   class="org.apache.jetspeed.factory.JetspeedPortletFactoryProxy"
  	   destroy-method="reset"  
  >  	   
  	   <constructor-arg ><ref bean="portletFactory" /></constructor-arg>  	   
  </bean>
  	   
  <!-- Aggregation: Page -->
  <bean id="org.apache.jetspeed.aggregator.PageAggregator" 
  	   class="org.apache.jetspeed.aggregator.impl.PageAggregatorImpl"  >  	   
  	   <constructor-arg index="0" ><ref bean="org.apache.jetspeed.aggregator.PortletRenderer" /></constructor-arg>
  	   <!-- Aggregation Strategies:
  	   	    0 = PageAggregatorImpl.STRATEGY_SEQUENTIAL
  	   	    1 = PageAggregatorImpl.STRATEGY_PARALLEL
  	   	 -->
  	   <constructor-arg index="1"><value>0</value></constructor-arg>
  	   <constructor-arg index="2">
  	   	<list>
  	   		<value>portlet/{mediaType}/jetspeed</value>
  	   		<value>portlet/{mediaType}</value>
  	   		<value>layout/{mediaType}</value>
  	   		<value>generic/{mediaType}</value>  	   		
  	   		<value>{mediaType}</value>  	   		
  	   	</list>
  	   </constructor-arg>
  </bean>
  
  <!-- Aggregation: Portlet -->
  <bean id="org.apache.jetspeed.aggregator.PortletAggregator" 
  	   class="org.apache.jetspeed.aggregator.impl.PortletAggregatorImpl"  >  	   
  	   <constructor-arg  ><ref bean="org.apache.jetspeed.aggregator.PortletRenderer" /></constructor-arg>
  </bean>
  
  <!-- Application Server Manager for Tomcat
  	   Provides hooks into the application server to help us deploy portlet applications
  	   as web application into that server.  This manager is for Tomcat 4/5
  	-->
  <bean id="org.apache.jetspeed.tools.pamanager.servletcontainer.ApplicationServerManager" 
  	   class="org.apache.jetspeed.tools.pamanager.servletcontainer.TomcatManager" 
  	   init-method="start" destroy-method="stop"
  >  	   
       <constructor-arg index="0"><value>${autodeployment.catalina.base}</value></constructor-arg>
       <constructor-arg index="1"><value>${autodeployment.catalina.engine}</value></constructor-arg>
       <constructor-arg index="2"><value>${autodeployment.catalina.version.major}</value></constructor-arg>
  	   <constructor-arg index="3"><value>${autodeployment.server}</value></constructor-arg>
  	   <constructor-arg index="4"><value>${autodeployment.port}</value></constructor-arg>
  	   <constructor-arg index="5"><value>${autodeployment.user}</value></constructor-arg>
  	   <constructor-arg index="6"><value>${autodeployment.password}</value></constructor-arg>
  </bean>
  <!--
  	Application Server Manager for JBoss.
  	To support deployment in JBoss, comment the Tomcat app server definition above
  	and uncomment the JBoss app server manager below
  -->
  <!--
  <bean id="org.apache.jetspeed.tools.pamanager.servletcontainer.ApplicationServerManager"
        class="org.apache.jetspeed.tools.pamanager.servletcontainer.JBossManager"
       init-method="start" />
  --> 
  
  
  <!-- Portlet Application Manager 
  	   Deploys portlet application to both Jetspeed's portlet registry
  	   and to application server Jetspeed is using to process the web application
  	   portion of the portlet application.  
  	-->
   <bean id="PAM" 
  	   class="org.apache.jetspeed.tools.pamanager.ApplicationServerPAM" 
  	   init-method="start" destroy-method="stop"
  >  	   
  	   <constructor-arg ><value>${autodeployment.target.dir}</value></constructor-arg>
  	   <constructor-arg ><ref bean="org.apache.jetspeed.components.portletregistry.PortletRegistry" /></constructor-arg>
  	   <constructor-arg ><ref bean="org.apache.jetspeed.components.portletentity.PortletEntityAccessComponent" /></constructor-arg>
  	   <constructor-arg ><ref bean="org.apache.jetspeed.container.window.PortletWindowAccessor" /></constructor-arg>
  	   <constructor-arg ><ref bean="org.apache.jetspeed.tools.pamanager.servletcontainer.ApplicationServerManager" /></constructor-arg>
  	   <constructor-arg ><ref bean="portletCache" /></constructor-arg>  
  	   <property name="searchEngine"><ref bean="org.apache.jetspeed.search.SearchEngine"/></property>
  </bean>

  <!-- Portlet Application and Decorator deployment event listeners -->
  <bean id="portletAppDeploymentListener" 
  	   class="org.apache.jetspeed.deployment.impl.DeployPortletAppEventListener"   	   
  > 	
       <constructor-arg ><value>${autodeployment.staging.dir}</value></constructor-arg>
  	   <constructor-arg ><ref bean="PAM" /></constructor-arg>
  	   <constructor-arg ><ref bean="org.apache.jetspeed.components.portletregistry.PortletRegistry" /></constructor-arg>
  	   <constructor-arg><ref bean="portletFactory"/></constructor-arg>
  </bean>
  <bean id="decoratorDeploymentRegistry" 
  	   class="org.apache.jetspeed.deployment.simpleregistry.impl.InMemoryRegistryImpl"
  >  	   
  </bean>
  <bean id="decoratorDeploymentListener" 
  	   class="org.apache.jetspeed.deployment.impl.DeployDecoratorEventListener"   	   
  > 	
  	   <constructor-arg ><ref bean="decoratorDeploymentRegistry"/></constructor-arg>
       <constructor-arg ><value>${applicationRoot}/WEB-INF/decorations</value></constructor-arg>
  </bean>

  <!-- The deployment manager watches a specific staging directory for
  	   deploying components.  What components get deployed depend of
  	   DeploymentEventListeners registered to it.
   -->
  <bean id="deploymentManager" 
  	   class="org.apache.jetspeed.deployment.impl.StandardDeploymentManager" 
  	   init-method="start" destroy-method="stop"
  >  	   
  	   <constructor-arg ><value>${autodeployment.staging.dir}</value></constructor-arg>
       <constructor-arg type="long" ><value>${autodeployment.delay}</value></constructor-arg>
       <constructor-arg >
         <list>
            <ref bean="portletAppDeploymentListener"/>      
            <ref bean="decoratorDeploymentListener"/>      
         </list>
       </constructor-arg>
  </bean>
  
  <!--SEARCH COMPONENT-->
  <bean id="org.apache.jetspeed.search.HandlerFactory"
  	class="org.apache.jetspeed.search.handlers.HandlerFactoryImpl"
  >
  	<constructor-arg>
  		<map>
  			<entry key="java.net.URL"><value>org.apache.jetspeed.search.handlers.URLToDocHandler</value></entry>
  			<entry key="org.apache.jetspeed.om.portlet.impl.PortletApplicationDefinitionImpl"><value>org.apache.jetspeed.search.handlers.pam.PortletApplicationHandler</value></entry>
  			<entry key="org.apache.jetspeed.om.portlet.impl.PortletDefinitionImpl"><value>org.apache.jetspeed.search.handlers.pam.PortletDefinitionHandler</value></entry>
  		</map>
	</constructor-arg>
  </bean>
  
  
  <bean id="org.apache.jetspeed.search.SearchEngine"
  	class="org.apache.jetspeed.search.lucene.SearchEngineImpl"
  >
  	<constructor-arg index="0"><value>${applicationRoot}/WEB-INF/search_index</value></constructor-arg>
  	<constructor-arg index="1"><null /></constructor-arg>
  	<constructor-arg type="boolean"><value>true</value></constructor-arg>
  	<constructor-arg><ref bean="org.apache.jetspeed.search.HandlerFactory"/></constructor-arg>
  	
  </bean>

  
  
  <!-- Adds jetspeed.properties as our configuration object to support ${...} vars -->
  <!-- ${applicationRoot} is acutally set as a system property via the SpringEngine -->

  <bean id="placeholderConfig"
      class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="location"><value>file:///${applicationRoot}/WEB-INF/conf/jetspeed.properties</value></property>
  </bean>  
  
</beans>
