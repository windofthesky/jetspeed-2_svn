CREATE TABLE OJB_HL_SEQ(TABLENAME VARCHAR(175) NOT NULL,FIELDNAME VARCHAR(70) NOT NULL,MAX_KEY INTEGER,GRAB_SIZE INTEGER,VERSION INTEGER,CONSTRAINT SYS_PK_OJB_HL_SEQ PRIMARY KEY(TABLENAME,FIELDNAME))
CREATE TABLE OJB_LOCKENTRY(OID_ VARCHAR(250) NOT NULL,TX_ID VARCHAR(50) NOT NULL,TIMESTAMP_ TIMESTAMP,ISOLATIONLEVEL INTEGER,LOCKTYPE INTEGER,CONSTRAINT SYS_PK_OJB_LOCKENTRY PRIMARY KEY(OID_,TX_ID))
CREATE TABLE OJB_NRM(NAME VARCHAR(250) NOT NULL PRIMARY KEY,OID_ LONGVARBINARY)
CREATE TABLE OJB_DLIST(ID INTEGER NOT NULL PRIMARY KEY,SIZE_ INTEGER)
CREATE TABLE OJB_DLIST_ENTRIES(ID INTEGER NOT NULL PRIMARY KEY,DLIST_ID INTEGER,POSITION_ INTEGER,OID_ LONGVARBINARY)
CREATE TABLE OJB_DSET(ID INTEGER NOT NULL PRIMARY KEY,SIZE_ INTEGER)
CREATE TABLE OJB_DSET_ENTRIES(ID INTEGER NOT NULL PRIMARY KEY,DLIST_ID INTEGER,POSITION_ INTEGER,OID_ LONGVARBINARY)
CREATE TABLE OJB_DMAP(ID INTEGER NOT NULL PRIMARY KEY,SIZE_ INTEGER)
CREATE TABLE OJB_DMAP_ENTRIES(ID INTEGER NOT NULL PRIMARY KEY,DMAP_ID INTEGER,KEY_OID LONGVARBINARY,VALUE_OID LONGVARBINARY)
CREATE TABLE PORTLET_APPLICATION(APPLICATION_ID INTEGER NOT NULL PRIMARY KEY,APP_NAME VARCHAR(80) NOT NULL,APP_IDENTIFIER VARCHAR(80),VERSION VARCHAR(80),DESCRIPTION VARCHAR(80),WEB_APP_ID INTEGER NOT NULL,CONSTRAINT UK_APPLICATION UNIQUE(APP_NAME))
CREATE TABLE WEB_APPLICATION(ID INTEGER NOT NULL PRIMARY KEY,CONTEXT_ROOT VARCHAR(255) NOT NULL)
CREATE TABLE PORTLET_DEFINITION(ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(80),CLASS_NAME VARCHAR(100),APPLICATION_ID INTEGER NOT NULL,PORTLET_IDENTIFIER VARCHAR(80),EXPIRATION_CACHE VARCHAR(30),PREFERENCE_VALIDATOR VARCHAR(255),CONSTRAINT SYS_CT_2 UNIQUE(APPLICATION_ID,NAME))
CREATE TABLE LANGUAGE(ID INTEGER NOT NULL PRIMARY KEY,PORTLET_ID INTEGER NOT NULL,TITLE VARCHAR(100),SHORT_TITLE VARCHAR(50),LOCALE_STRING VARCHAR(50) NOT NULL,KEYWORDS LONGVARCHAR)
CREATE TABLE PORTLET_CONTENT_TYPE(CONTENT_TYPE_ID INTEGER NOT NULL PRIMARY KEY,PORTLET_ID INTEGER NOT NULL,CONTENT_TYPE VARCHAR(30) NOT NULL,MODES LONGVARCHAR)
CREATE TABLE PARAMETER(PARAMETER_ID INTEGER NOT NULL PRIMARY KEY,PARENT_ID INTEGER NOT NULL,CLASS_NAME VARCHAR(30) NOT NULL,NAME VARCHAR(80) NOT NULL,VALUE LONGVARCHAR NOT NULL)
CREATE TABLE PORTLET_PREFERENCE(ID INTEGER NOT NULL PRIMARY KEY,PARENT_ID INTEGER NOT NULL,NAME VARCHAR(80) NOT NULL,CLASS_NAME VARCHAR(50) NOT NULL,READ_ONLY CHAR(1) DEFAULT '1')
CREATE TABLE PREFERENCE_VALUE(ID INTEGER NOT NULL PRIMARY KEY,PREFERENCE_ID INTEGER,VALUE LONGVARCHAR)
CREATE TABLE PORTLET_ENTITY(ID INTEGER NOT NULL PRIMARY KEY,PORTLET_DEFINITION_ID INTEGER NOT NULL,GUID VARCHAR(255) NOT NULL)
CREATE TABLE SECURITY_ROLE_REFERENCE(ID INTEGER NOT NULL PRIMARY KEY,PORTLET_DEFINITION_ID INTEGER NOT NULL,ROLE_NAME VARCHAR(150),ROLE_LINK VARCHAR(150))
CREATE TABLE LOCALIZED_DESCRIPTION(ID INTEGER NOT NULL PRIMARY KEY,OBJECT_ID INTEGER NOT NULL,TYPE VARCHAR(25) NOT NULL,DESCRIPTION LONGVARCHAR NOT NULL,LOCALE_STRING VARCHAR(50) NOT NULL)
CREATE TABLE LOCALIZED_DISPLAY_NAME(ID INTEGER NOT NULL PRIMARY KEY,OBJECT_ID INTEGER NOT NULL,TYPE VARCHAR(25) NOT NULL,DISPLAY_NAME LONGVARCHAR NOT NULL,LOCALE_STRING VARCHAR(50) NOT NULL)
CREATE TABLE MEDIA_TYPE(MEDIATYPE_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(80) NOT NULL,CHARACTER_SET VARCHAR(40),TITLE VARCHAR(80),DESCRIPTION LONGVARCHAR)
CREATE TABLE CLIENT(CLIENT_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(80) NOT NULL,USER_AGENT_PATTERN VARCHAR(128),MANUFACTURER VARCHAR(80),MODEL VARCHAR(80),VERSION VARCHAR(40))
CREATE TABLE MIMETYPE(MIMETYPE_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(80) NOT NULL)
CREATE TABLE CAPABILITY(CAPABILITY_ID INTEGER NOT NULL PRIMARY KEY,CAPABILITY VARCHAR(80) NOT NULL)
CREATE TABLE CLIENT_TO_CAPABILITY(CLIENT_ID INTEGER NOT NULL,CAPABILITY_ID INTEGER NOT NULL)
CREATE TABLE CLIENT_TO_MIMETYPE(CLIENT_ID INTEGER NOT NULL,MIMETYPE_ID INTEGER NOT NULL)
CREATE TABLE MEDIATYPE_TO_CAPABILITY(MEDIATYPE_ID INTEGER NOT NULL,CAPABILITY_ID INTEGER NOT NULL)
CREATE TABLE MEDIATYPE_TO_MIMETYPE(MEDIATYPE_ID INTEGER NOT NULL,MIMETYPE_ID INTEGER NOT NULL)
CREATE TABLE DESKTOP(DESKTOP_ID VARCHAR(80) NOT NULL PRIMARY KEY,TITLE VARCHAR(100),COMPONENT_NAME VARCHAR(100),ACL VARCHAR(80),DEFAULT_PAGE_ID VARCHAR(80),DEFAULT_THEME VARCHAR(100),DEFAULT_DECORATOR VARCHAR(100),DEFAULT_PORTLET_DECORATOR VARCHAR(100),CONSTRAINT SYS_CT_1 UNIQUE(DESKTOP_ID))
CREATE TABLE DESKTOP_PAGES(DESKTOP_ID VARCHAR(80) NOT NULL,PAGE_ID VARCHAR(80) NOT NULL)
CREATE INDEX IX_DESKTOP_PAGES_1 ON DESKTOP_PAGES(DESKTOP_ID,PAGE_ID)
CREATE TABLE SUB_PAGES(PAGE_ID VARCHAR(80) NOT NULL,SUB_PAGE_ID VARCHAR(80) NOT NULL)
CREATE INDEX IX_SUB_PAGES_1 ON SUB_PAGES(PAGE_ID,SUB_PAGE_ID)
CREATE TABLE PAGE(PAGE_ID VARCHAR(80) NOT NULL PRIMARY KEY,TITLE VARCHAR(100),DEFAULT_SKIN VARCHAR(100),DEFAULT_DECORATOR VARCHAR(100),DEFAULT_PORTLET_DECORATOR VARCHAR(100),ACL VARCHAR(80),CONSTRAINT SYS_CT_3 UNIQUE(PAGE_ID))
CREATE TABLE FRAGMENT(FRAGMENT_ID VARCHAR(80) NOT NULL PRIMARY KEY,COMPONENT_NAME VARCHAR(100),ACL VARCHAR(80),TITLE VARCHAR(100),TYPE VARCHAR(40),SKIN VARCHAR(80),DECORATOR VARCHAR(80),STATE VARCHAR(40))
CREATE TABLE PAGE_FRAGMENTS(PAGE_ID VARCHAR(80) NOT NULL,FRAGMENT_ID VARCHAR(80) NOT NULL)
CREATE INDEX IX_PAGE_FRAGMENTS_1 ON PAGE_FRAGMENTS(PAGE_ID,FRAGMENT_ID)
CREATE TABLE SUB_FRAGMENTS(FRAGMENT_ID VARCHAR(80) NOT NULL,SUB_FRAGMENT_ID VARCHAR(80) NOT NULL)
CREATE INDEX IX_SUB_FRAGMENTS_1 ON SUB_FRAGMENTS(FRAGMENT_ID,SUB_FRAGMENT_ID)
CREATE TABLE FRAGMENT_PARAMETER(PARAMETER_ID INTEGER NOT NULL PRIMARY KEY,FRAGMENT_ID INTEGER NOT NULL,NAME VARCHAR(80) NOT NULL,VALUE LONGVARCHAR NOT NULL)
CREATE UNIQUE INDEX IX_FRAGMENT_PARAMETER_1 ON FRAGMENT_PARAMETER(FRAGMENT_ID,PARAMETER_ID)
CREATE TABLE FRAGMENT_REF(FRAGMENT_REF_ID VARCHAR(80) NOT NULL PRIMARY KEY,FRAGMENT_ID VARCHAR(80) NOT NULL,NAME VARCHAR(80) NOT NULL,TITLE VARCHAR(100))
CREATE TABLE FRAGMENT_REFS(FRAGMENT_REF_ID VARCHAR(80) NOT NULL,FRAGMENT_ID VARCHAR(80) NOT NULL)
CREATE TABLE PROFILING_RULE(RULE_ID VARCHAR(80) NOT NULL PRIMARY KEY,CLASS_NAME VARCHAR(100) NOT NULL,TITLE VARCHAR(100))
CREATE TABLE RULE_CRITERION(CRITERION_ID VARCHAR(80) NOT NULL PRIMARY KEY,RULE_ID VARCHAR(80) NOT NULL,FALLBACK_ORDER INTEGER,REQUEST_TYPE VARCHAR(40) NOT NULL,NAME VARCHAR(80) NOT NULL,VALUE VARCHAR(128))
CREATE INDEX IX_RULE_CRITERION_1 ON RULE_CRITERION(RULE_ID,FALLBACK_ORDER)
CREATE TABLE PRINCIPAL_RULE_ASSOC(PRINCIPAL_NAME VARCHAR(80) NOT NULL,RULE_ID VARCHAR(80) NOT NULL,CONSTRAINT SYS_CT_5 UNIQUE(PRINCIPAL_NAME))
CREATE TABLE PROFILE_DESKTOP_ASSOC(LOCATOR_HASH VARCHAR(40) NOT NULL,DESKTOP_ID VARCHAR(80) NOT NULL)
CREATE UNIQUE INDEX IX_PROFILE_DESKTOP_1 ON PROFILE_DESKTOP_ASSOC(LOCATOR_HASH,DESKTOP_ID)
CREATE TABLE PROFILE_PAGE_ASSOC(LOCATOR_HASH VARCHAR(40) NOT NULL,PAGE_ID VARCHAR(80) NOT NULL)
CREATE UNIQUE INDEX IX_PROFILE_PAGE_1 ON PROFILE_PAGE_ASSOC(LOCATOR_HASH,PAGE_ID)
GRANT ALL ON CLASS "java.lang.Math" TO PUBLIC
GRANT ALL ON CLASS "org.hsqldb.Library" TO PUBLIC
CREATE USER SA PASSWORD "" ADMIN
CREATE ALIAS DAYNAME FOR "org.hsqldb.Library.dayname"
CREATE ALIAS SPACE FOR "org.hsqldb.Library.space"
CREATE ALIAS SUBSTRING FOR "org.hsqldb.Library.substring"
CREATE ALIAS HEXTORAW FOR "org.hsqldb.Library.hexToRaw"
CREATE ALIAS SQRT FOR "java.lang.Math.sqrt"
CREATE ALIAS ABS FOR "org.hsqldb.Library.abs"
CREATE ALIAS POWER FOR "java.lang.Math.pow"
CREATE ALIAS CHAR FOR "org.hsqldb.Library.character"
CREATE ALIAS CONCAT FOR "org.hsqldb.Library.concat"
CREATE ALIAS PI FOR "org.hsqldb.Library.pi"
CREATE ALIAS RAWTOHEX FOR "org.hsqldb.Library.rawToHex"
CREATE ALIAS SECOND FOR "org.hsqldb.Library.second"
CREATE ALIAS TRUNCATE FOR "org.hsqldb.Library.truncate"
CREATE ALIAS MONTH FOR "org.hsqldb.Library.month"
CREATE ALIAS LOWER FOR "org.hsqldb.Library.lcase"
CREATE ALIAS ATAN2 FOR "java.lang.Math.atan2"
CREATE ALIAS REPEAT FOR "org.hsqldb.Library.repeat"
CREATE ALIAS DAYOFMONTH FOR "org.hsqldb.Library .dayofmonth"
CREATE ALIAS TAN FOR "java.lang.Math.tan"
CREATE ALIAS RADIANS FOR "java.lang.Math.toRadians"
CREATE ALIAS FLOOR FOR "java.lang.Math.floor"
CREATE ALIAS NOW FOR "org.hsqldb.Library.now"
CREATE ALIAS ACOS FOR "java.lang.Math.acos"
CREATE ALIAS DAYOFWEEK FOR "org.hsqldb.Library.dayofweek"
CREATE ALIAS CEILING FOR "java.lang.Math.ceil"
CREATE ALIAS DAYOFYEAR FOR "org.hsqldb.Library.dayofyear"
CREATE ALIAS LCASE FOR "org.hsqldb.Library.lcase"
CREATE ALIAS WEEK FOR "org.hsqldb.Library.week"
CREATE ALIAS SOUNDEX FOR "org.hsqldb.Library.soundex"
CREATE ALIAS ASIN FOR "java.lang.Math.asin"
CREATE ALIAS LOCATE FOR "org.hsqldb.Library.locate"
CREATE ALIAS EXP FOR "java.lang.Math.exp"
CREATE ALIAS MONTHNAME FOR "org.hsqldb.Library.monthname"
CREATE ALIAS YEAR FOR "org.hsqldb.Library.year"
CREATE ALIAS LEFT FOR "org.hsqldb.Library.left"
CREATE ALIAS ROUNDMAGIC FOR "org.hsqldb.Library.roundMagic"
CREATE ALIAS BITOR FOR "org.hsqldb.Library.bitor"
CREATE ALIAS LTRIM FOR "org.hsqldb.Library.ltrim"
CREATE ALIAS COT FOR "org.hsqldb.Library.cot"
CREATE ALIAS COS FOR "java.lang.Math.cos"
CREATE ALIAS MOD FOR "org.hsqldb.Library.mod"
CREATE ALIAS SIGN FOR "org.hsqldb.Library.sign"
CREATE ALIAS DEGREES FOR "java.lang.Math.toDegrees"
CREATE ALIAS LOG FOR "java.lang.Math.log"
CREATE ALIAS SIN FOR "java.lang.Math.sin"
CREATE ALIAS CURTIME FOR "org.hsqldb.Library.curtime"
CREATE ALIAS DIFFERENCE FOR "org.hsqldb.Library.difference"
CREATE ALIAS INSERT FOR "org.hsqldb.Library.insert"
CREATE ALIAS SUBSTR FOR "org.hsqldb.Library.substring"
CREATE ALIAS DATABASE FOR "org.hsqldb.Library.database"
CREATE ALIAS MINUTE FOR "org.hsqldb.Library.minute"
CREATE ALIAS HOUR FOR "org.hsqldb.Library.hour"
CREATE ALIAS IDENTITY FOR "org.hsqldb.Library.identity"
CREATE ALIAS QUARTER FOR "org.hsqldb.Library.quarter"
CREATE ALIAS CURDATE FOR "org.hsqldb.Library.curdate"
CREATE ALIAS BITAND FOR "org.hsqldb.Library.bitand"
CREATE ALIAS USER FOR "org.hsqldb.Library.user"
CREATE ALIAS UCASE FOR "org.hsqldb.Library.ucase"
CREATE ALIAS RTRIM FOR "org.hsqldb.Library.rtrim"
CREATE ALIAS LOG10 FOR "org.hsqldb.Library.log10"
CREATE ALIAS RIGHT FOR "org.hsqldb.Library.right"
CREATE ALIAS ATAN FOR "java.lang.Math.atan"
CREATE ALIAS UPPER FOR "org.hsqldb.Library.ucase"
CREATE ALIAS ASCII FOR "org.hsqldb.Library.ascii"
CREATE ALIAS RAND FOR "java.lang.Math.random"
CREATE ALIAS LENGTH FOR "org.hsqldb.Library.length"
CREATE ALIAS ROUND FOR "org.hsqldb.Library.round"
CREATE ALIAS REPLACE FOR "org.hsqldb.Library.replace"
INSERT INTO PROFILING_RULE VALUES('j1','org.apache.jetspeed.profiler.rules.impl.StandardProfilingRule','The default profiling rule following the Jetspeed-1 hard-coded profiler fallback algorithm.')
INSERT INTO PROFILING_RULE VALUES('role-fallback','org.apache.jetspeed.profiler.rules.impl.RoleFallbackProfilingRule','A role based fallback algorithm based on Jetspeed-1 role-based fallback')
INSERT INTO RULE_CRITERION VALUES('1','j1',0,'request','name','default')
INSERT INTO RULE_CRITERION VALUES('10','role-fallback',4,'standard','country',NULL)
INSERT INTO RULE_CRITERION VALUES('2','j1',1,'standard','user',NULL)
INSERT INTO RULE_CRITERION VALUES('3','j1',2,'standard','mediatype',NULL)
INSERT INTO RULE_CRITERION VALUES('4','j1',3,'standard','language',NULL)
INSERT INTO RULE_CRITERION VALUES('5','j1',4,'standard','country',NULL)
INSERT INTO RULE_CRITERION VALUES('6','role-fallback',0,'request','name','default')
INSERT INTO RULE_CRITERION VALUES('7','role-fallback',1,'standard','role-based',NULL)
INSERT INTO RULE_CRITERION VALUES('8','role-fallback',2,'standard','mediatype',NULL)
INSERT INTO RULE_CRITERION VALUES('9','role-fallback',3,'standard','language',NULL)
